/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 446:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
  /* harmony export */
});


// For consistency with Responses, Conditions
// are also functions.

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
          targetIsYou() {
            return (data, matches) => data.me === matches?.target;
          },
          targetIsNotYou() {
            return (data, matches) => data.me !== matches?.target;
          },
          caresAboutAOE() {
            return data => data.role === 'tank' || data.role === 'healer' || data.CanAddle() || data.CanFeint() || data.job === 'BLU';
          },
          caresAboutMagical() {
            return data => data.role === 'tank' || data.role === 'healer' || data.CanAddle() || data.job === 'BLU';
          },
          caresAboutPhysical() {
            return data => data.role === 'tank' || data.role === 'healer' || data.CanFeint() || data.job === 'BLU';
          }
        });

        /***/
      }),

/***/ 873:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
        // Auto-generated from gen_zone_id_and_info.ts
        // DO NOT EDIT THIS FILE DIRECTLY

        const data = {
          'ChaoticAllianceRaid': 37,
          'Companions': 12,
          'CustomDeliveries': 25,
          'DeepDungeons': 21,
          'DisciplesOfTheHand': 17,
          'DisciplesOfTheLand': 16,
          'Dungeons': 2,
          'DutyRoulette': 1,
          'Eureka': 26,
          'Fates': 8,
          'Fishing': 34,
          'Gate': 35,
          'GoldSaucer': 19,
          'GrandCompany': 11,
          'Guildhests': 3,
          'IslandSanctuary': 36,
          'Levequests': 10,
          'OceanFishing': 31,
          'OverallCompletion': 14,
          'PlayerCommendation': 15,
          'Pvp': 6,
          'QuestBattles': 7,
          'Raids': 5,
          'RetainerVentures': 18,
          'SaveTheQueen': 29,
          'TheHunt': 33,
          'TheMaskedCarnivale': 27,
          'TreasureHunt': 9,
          'Trials': 4,
          'TribalQuests': 13,
          'TripleTriad': 32,
          'UltimateRaids': 28,
          'VCDungeonFinder': 30,
          'WondrousTails': 24
        };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (data);

        /***/
      }),

/***/ 619:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Go": () => (/* binding */ langToLocale),
/* harmony export */   "jd": () => (/* binding */ isLang)
        /* harmony export */
      });
        /* unused harmony exports languages, langMap, browserLanguagesToLang */
        const languages = ['en', 'de', 'fr', 'ja', 'cn', 'ko'];
        const langMap = {
          en: {
            en: 'English',
            de: 'German',
            fr: 'French',
            ja: 'Japanese',
            cn: 'Chinese',
            ko: 'Korean'
          },
          de: {
            en: 'Englisch',
            de: 'Deutsch',
            fr: 'Französisch',
            ja: 'Japanisch',
            cn: 'Chinesisch',
            ko: 'Koreanisch'
          },
          fr: {
            en: 'Anglais',
            de: 'Allemand',
            fr: 'Français',
            ja: 'Japonais',
            cn: 'Chinois',
            ko: 'Coréen'
          },
          ja: {
            en: '英語',
            de: 'ドイツ語',
            fr: 'フランス語',
            ja: '日本語',
            cn: '中国語',
            ko: '韓国語'
          },
          cn: {
            en: '英文',
            de: '德文',
            fr: '法文',
            ja: '日文',
            cn: '中文',
            ko: '韩文'
          },
          ko: {
            en: '영어',
            de: '독일어',
            fr: '프랑스어',
            ja: '일본어',
            cn: '중국어',
            ko: '한국어'
          }
        };
        const isLang = lang => {
          const langStrs = languages;
          if (lang === undefined) return false;
          return langStrs.includes(lang);
        };
        const langToLocale = lang => {
          return {
            en: 'en',
            de: 'de',
            fr: 'fr',
            ja: 'ja',
            cn: 'zh-CN',
            ko: 'ko'
          }[lang];
        };
        const browserLanguagesToLang = languages => {
          const lang = [...navigator.languages, 'en'].map(l => l.slice(0, 2))
            // Remap `zh` to `cn` to match cactbot languages
            .map(l => l === 'zh' ? 'cn' : l).filter(l => languages.includes(l))[0];
          return isLang(lang) ? lang : 'en';
        };

        /***/
      }),

/***/ 21:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "W": () => (/* binding */ logDefinitionsVersions),
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
        // Specifies a fieldName key with one or more possible values and a `canAnonyize` override
        // if that field and value are present on the log line. See 'GameLog' for an example.
        // Options for including these lines in a filtered log via the log splitter's analysis option.
        // `include:` specifies the level of inclusion:
        //   - 'all' will include all lines with no filtering.
        //   - 'filter' will include only those lines that match at least one of the specified `filters`.
        //   - 'never' is an override; just like if the property were omitted, no log lines will be included
        //      in the filter; however, if 'never' is used, the automated workflow will not attempt to
        //      change it to 'all' upon finding active triggers using this line type.
        // `filters:` contains Netregex-style filter criteria. Lines satisfying at least one filter will be
        //   included. If `include:` = 'filter', `filters` must be present; otherwise, it must be omitted.
        // `combatantIdFields:` are field indices containing combatantIds. If specified, these fields
        //   will be checked for ignored combatants (e.g. pets) during log filtering.
        // TODO: Maybe bring in a helper library that can compile-time extract these keys instead?
        const combatantMemoryKeys = ['CurrentWorldID', 'WorldID', 'WorldName', 'BNpcID', 'BNpcNameID', 'PartyType', 'ID', 'OwnerID', 'WeaponId', 'Type', 'Job', 'Level', 'Name', 'CurrentHP', 'MaxHP', 'CurrentMP', 'MaxMP', 'PosX', 'PosY', 'PosZ', 'Heading', 'MonsterType', 'Status', 'ModelStatus', 'AggressionStatus', 'TargetID', 'IsTargetable', 'Radius', 'Distance', 'EffectiveDistance', 'NPCTargetID', 'CurrentGP', 'MaxGP', 'CurrentCP', 'MaxCP', 'PCTargetID', 'IsCasting1', 'IsCasting2', 'CastBuffID', 'CastTargetID', 'CastGroundTargetX', 'CastGroundTargetY', 'CastGroundTargetZ', 'CastDurationCurrent', 'CastDurationMax', 'TransformationId'];
        const latestLogDefinitions = {
          GameLog: {
            type: '00',
            name: 'GameLog',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'ChatLog',
            fields: {
              type: 0,
              timestamp: 1,
              code: 2,
              name: 3,
              line: 4
            },
            subFields: {
              code: {
                '0039': {
                  name: 'message',
                  canAnonymize: true
                },
                '0038': {
                  name: 'echo',
                  canAnonymize: true
                },
                '0044': {
                  name: 'dialog',
                  canAnonymize: true
                },
                '0839': {
                  name: 'message',
                  canAnonymize: true
                }
              }
            },
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                code: ['0044', '0839']
              }
            }
          },
          ChangeZone: {
            type: '01',
            name: 'ChangeZone',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Territory',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3
            },
            lastInclude: true,
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all'
            }
          },
          ChangedPlayer: {
            type: '02',
            name: 'ChangedPlayer',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'ChangePrimaryPlayer',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3
            },
            playerIds: {
              2: 3
            },
            lastInclude: true,
            canAnonymize: true,
            firstOptionalField: undefined
          },
          AddedCombatant: {
            type: '03',
            name: 'AddedCombatant',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'AddCombatant',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3,
              job: 4,
              level: 5,
              ownerId: 6,
              worldId: 7,
              world: 8,
              npcNameId: 9,
              npcBaseId: 10,
              currentHp: 11,
              hp: 12,
              currentMp: 13,
              mp: 14,
              // maxTp: 15,
              // tp: 16,
              x: 17,
              y: 18,
              z: 19,
              heading: 20
            },
            playerIds: {
              2: 3,
              6: null
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                id: '4.{7}'
              },
              // NPC combatants only
              combatantIdFields: 2
            }
          },
          RemovedCombatant: {
            type: '04',
            name: 'RemovedCombatant',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'RemoveCombatant',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3,
              job: 4,
              level: 5,
              owner: 6,
              world: 8,
              npcNameId: 9,
              npcBaseId: 10,
              currentHp: 11,
              hp: 12,
              currentMp: 13,
              mp: 14,
              // currentTp: 15,
              // maxTp: 16,
              x: 17,
              y: 18,
              z: 19,
              heading: 20
            },
            playerIds: {
              2: 3,
              6: null
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                id: '4.{7}'
              },
              // NPC combatants only
              combatantIdFields: 2
            }
          },
          PartyList: {
            type: '11',
            name: 'PartyList',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'PartyList',
            fields: {
              type: 0,
              timestamp: 1,
              partyCount: 2,
              id0: 3,
              id1: 4,
              id2: 5,
              id3: 6,
              id4: 7,
              id5: 8,
              id6: 9,
              id7: 10,
              id8: 11,
              id9: 12,
              id10: 13,
              id11: 14,
              id12: 15,
              id13: 16,
              id14: 17,
              id15: 18,
              id16: 19,
              id17: 20,
              id18: 21,
              id19: 22,
              id20: 23,
              id21: 24,
              id22: 25,
              id23: 26
            },
            playerIds: {
              3: null,
              4: null,
              5: null,
              6: null,
              7: null,
              8: null,
              9: null,
              10: null,
              11: null,
              12: null,
              13: null,
              14: null,
              15: null,
              16: null,
              17: null,
              18: null,
              19: null,
              20: null,
              21: null,
              22: null,
              23: null,
              24: null,
              25: null,
              26: null
            },
            firstOptionalField: 3,
            canAnonymize: true,
            lastInclude: true
          },
          PlayerStats: {
            type: '12',
            name: 'PlayerStats',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'PlayerStats',
            fields: {
              type: 0,
              timestamp: 1,
              job: 2,
              strength: 3,
              dexterity: 4,
              vitality: 5,
              intelligence: 6,
              mind: 7,
              piety: 8,
              attackPower: 9,
              directHit: 10,
              criticalHit: 11,
              attackMagicPotency: 12,
              healMagicPotency: 13,
              determination: 14,
              skillSpeed: 15,
              spellSpeed: 16,
              tenacity: 18,
              localContentId: 19
            },
            canAnonymize: true,
            lastInclude: true,
            firstOptionalField: undefined
          },
          StartsUsing: {
            type: '20',
            name: 'StartsUsing',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'StartsCasting',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              source: 3,
              id: 4,
              ability: 5,
              targetId: 6,
              target: 7,
              castTime: 8,
              x: 9,
              y: 10,
              z: 11,
              heading: 12
            },
            possibleRsvFields: 5,
            blankFields: [6],
            playerIds: {
              2: 3,
              6: 7
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                sourceId: '4.{7}'
              },
              // NPC casts only
              combatantIdFields: [2, 6]
            }
          },
          Ability: {
            type: '21',
            name: 'Ability',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'ActionEffect',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              source: 3,
              id: 4,
              ability: 5,
              targetId: 6,
              target: 7,
              flags: 8,
              damage: 9,
              targetCurrentHp: 24,
              targetMaxHp: 25,
              targetCurrentMp: 26,
              targetMaxMp: 27,
              // targetCurrentTp: 28,
              // targetMaxTp: 29,
              targetX: 30,
              targetY: 31,
              targetZ: 32,
              targetHeading: 33,
              currentHp: 34,
              maxHp: 35,
              currentMp: 36,
              maxMp: 37,
              // currentTp: 38;
              // maxTp: 39;
              x: 40,
              y: 41,
              z: 42,
              heading: 43,
              sequence: 44,
              targetIndex: 45,
              targetCount: 46,
              ownerId: 47,
              ownerName: 48,
              effectDisplayType: 49,
              actionId: 50,
              actionAnimationId: 51,
              animationLockTime: 52,
              rotationHex: 53
            },
            possibleRsvFields: 5,
            playerIds: {
              2: 3,
              6: 7,
              47: 48
            },
            blankFields: [6, 47, 48],
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                sourceId: '4.{7}'
              },
              // NPC abilities only
              combatantIdFields: [2, 6]
            }
          },
          NetworkAOEAbility: {
            type: '22',
            name: 'NetworkAOEAbility',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'AOEActionEffect',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              source: 3,
              id: 4,
              ability: 5,
              targetId: 6,
              target: 7,
              flags: 8,
              damage: 9,
              targetCurrentHp: 24,
              targetMaxHp: 25,
              targetCurrentMp: 26,
              targetMaxMp: 27,
              // targetCurrentTp: 28,
              // targetMaxTp: 29,
              targetX: 30,
              targetY: 31,
              targetZ: 32,
              targetHeading: 33,
              currentHp: 34,
              maxHp: 35,
              currentMp: 36,
              maxMp: 37,
              // currentTp: 38;
              // maxTp: 39;
              x: 40,
              y: 41,
              z: 42,
              heading: 43,
              sequence: 44,
              targetIndex: 45,
              targetCount: 46,
              ownerId: 47,
              ownerName: 48,
              effectDisplayType: 49,
              actionId: 50,
              actionAnimationId: 51,
              animationLockTime: 52,
              rotationHex: 53
            },
            possibleRsvFields: 5,
            playerIds: {
              2: 3,
              6: 7,
              47: 48
            },
            blankFields: [6, 47, 48],
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                sourceId: '4.{7}'
              },
              // NPC abilities only
              combatantIdFields: [2, 6]
            }
          },
          NetworkCancelAbility: {
            type: '23',
            name: 'NetworkCancelAbility',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'CancelAction',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              source: 3,
              id: 4,
              name: 5,
              reason: 6
            },
            possibleRsvFields: 5,
            playerIds: {
              2: 3
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                sourceId: '4.{7}'
              },
              // NPC combatants only
              combatantIdFields: 2
            }
          },
          NetworkDoT: {
            type: '24',
            name: 'NetworkDoT',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'DoTHoT',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3,
              which: 4,
              effectId: 5,
              damage: 6,
              currentHp: 7,
              maxHp: 8,
              currentMp: 9,
              maxMp: 10,
              // currentTp: 11,
              // maxTp: 12,
              x: 13,
              y: 14,
              z: 15,
              heading: 16,
              sourceId: 17,
              source: 18,
              // An id number lookup into the AttackType table
              damageType: 19,
              sourceCurrentHp: 20,
              sourceMaxHp: 21,
              sourceCurrentMp: 22,
              sourceMaxMp: 23,
              // sourceCurrentTp: 24,
              // sourceMaxTp: 25,
              sourceX: 26,
              sourceY: 27,
              sourceZ: 28,
              sourceHeading: 29
            },
            playerIds: {
              2: 3,
              17: 18
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                // DoT on player with valid effectId
                id: '1.{7}',
                which: 'DoT',
                effectId: '0*?[1-9A-F][0-9A-F]*' // non-zero, non-empty, possibly-padded value
              },

              combatantIdFields: [2, 17]
            }
          },
          WasDefeated: {
            type: '25',
            name: 'WasDefeated',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Death',
            fields: {
              type: 0,
              timestamp: 1,
              targetId: 2,
              target: 3,
              sourceId: 4,
              source: 5
            },
            playerIds: {
              2: 3,
              4: 5
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                targetId: '4.{7}'
              },
              // NPC combatants only
              combatantIdFields: 2 // don't apply to sourceId; an ignored combatant is a valid source
            }
          },

          GainsEffect: {
            type: '26',
            name: 'GainsEffect',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'StatusAdd',
            fields: {
              type: 0,
              timestamp: 1,
              effectId: 2,
              effect: 3,
              duration: 4,
              sourceId: 5,
              source: 6,
              targetId: 7,
              target: 8,
              count: 9,
              targetMaxHp: 10,
              sourceMaxHp: 11
            },
            possibleRsvFields: 3,
            playerIds: {
              5: 6,
              7: 8
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: [{
                // effect from environment/NPC applied to player
                sourceId: '[E4].{7}',
                targetId: '1.{7}'
              }, {
                // effect from environment/NPC applied to NPC (including itself)
                sourceId: '[E4].{7}',
                targetId: '4.{7}'
              }, {
                // known effectIds of interest
                effectId: ['B9A', '808']
              }],
              combatantIdFields: [5, 7]
            }
          },
          HeadMarker: {
            type: '27',
            name: 'HeadMarker',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'TargetIcon',
            fields: {
              type: 0,
              timestamp: 1,
              targetId: 2,
              target: 3,
              id: 6,
              data0: 7
            },
            playerIds: {
              2: 3
            },
            possiblePlayerIds: [7],
            canAnonymize: true,
            firstOptionalField: 7,
            analysisOptions: {
              include: 'all',
              combatantIdFields: 2
            }
          },
          NetworkRaidMarker: {
            type: '28',
            name: 'NetworkRaidMarker',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'WaymarkMarker',
            fields: {
              type: 0,
              timestamp: 1,
              operation: 2,
              waymark: 3,
              id: 4,
              name: 5,
              x: 6,
              y: 7,
              z: 8
            },
            playerIds: {
              4: 5
            },
            canAnonymize: true,
            firstOptionalField: undefined
          },
          NetworkTargetMarker: {
            type: '29',
            name: 'NetworkTargetMarker',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'SignMarker',
            fields: {
              type: 0,
              timestamp: 1,
              operation: 2,
              // Add, Update, Delete
              waymark: 3,
              id: 4,
              name: 5,
              targetId: 6,
              targetName: 7
            },
            playerIds: {
              4: 5,
              6: 7
            },
            firstOptionalField: undefined
          },
          LosesEffect: {
            type: '30',
            name: 'LosesEffect',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'StatusRemove',
            fields: {
              type: 0,
              timestamp: 1,
              effectId: 2,
              effect: 3,
              sourceId: 5,
              source: 6,
              targetId: 7,
              target: 8,
              count: 9
            },
            possibleRsvFields: 3,
            playerIds: {
              5: 6,
              7: 8
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: [{
                // effect from environment/NPC applied to player
                sourceId: '[E4].{7}',
                targetId: '1.{7}'
              }, {
                // effect from environment/NPC applied to NPC (including itself)
                sourceId: '[E4].{7}',
                targetId: '4.{7}'
              }, {
                // known effectIds of interest
                effectId: ['B9A', '808']
              }],
              combatantIdFields: [5, 7]
            }
          },
          NetworkGauge: {
            type: '31',
            name: 'NetworkGauge',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Gauge',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              data0: 3,
              data1: 4,
              data2: 5,
              data3: 6
            },
            playerIds: {
              2: null
            },
            // Sometimes this last field looks like a player id.
            // For safety, anonymize all of the gauge data.
            firstUnknownField: 3,
            canAnonymize: true,
            firstOptionalField: undefined
          },
          NetworkWorld: {
            type: '32',
            name: 'NetworkWorld',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'World',
            fields: {
              type: 0,
              timestamp: 1
            },
            isUnknown: true,
            firstOptionalField: undefined
          },
          ActorControl: {
            type: '33',
            name: 'ActorControl',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Director',
            fields: {
              type: 0,
              timestamp: 1,
              instance: 2,
              command: 3,
              data0: 4,
              data1: 5,
              data2: 6,
              data3: 7
            },
            possiblePlayerIds: [4, 5, 6, 7],
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'never'
            }
          },
          NameToggle: {
            type: '34',
            name: 'NameToggle',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'NameToggle',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3,
              targetId: 4,
              targetName: 5,
              toggle: 6
            },
            playerIds: {
              2: 3,
              4: 5
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'never'
            }
          },
          Tether: {
            type: '35',
            name: 'Tether',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Tether',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              source: 3,
              targetId: 4,
              target: 5,
              id: 8
            },
            playerIds: {
              2: 3,
              4: 5
            },
            canAnonymize: true,
            firstUnknownField: 9,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all',
              combatantIdFields: [2, 4]
            }
          },
          LimitBreak: {
            type: '36',
            name: 'LimitBreak',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'LimitBreak',
            fields: {
              type: 0,
              timestamp: 1,
              valueHex: 2,
              bars: 3
            },
            canAnonymize: true,
            firstOptionalField: undefined
          },
          NetworkEffectResult: {
            type: '37',
            name: 'NetworkEffectResult',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'EffectResult',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3,
              sequenceId: 4,
              currentHp: 5,
              maxHp: 6,
              currentMp: 7,
              maxMp: 8,
              currentShield: 9,
              // Field index 10 is always `0`
              x: 11,
              y: 12,
              z: 13,
              heading: 14
            },
            playerIds: {
              2: 3
            },
            firstUnknownField: 22,
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'never'
            }
          },
          StatusEffect: {
            type: '38',
            name: 'StatusEffect',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'StatusList',
            fields: {
              type: 0,
              timestamp: 1,
              targetId: 2,
              target: 3,
              jobLevelData: 4,
              hp: 5,
              maxHp: 6,
              mp: 7,
              maxMp: 8,
              currentShield: 9,
              // Field index 10 is always `0`
              x: 11,
              y: 12,
              z: 13,
              heading: 14,
              data0: 15,
              data1: 16,
              data2: 17,
              data3: 18,
              data4: 19,
              data5: 20
              // Variable number of triplets here, but at least one.
            },

            playerIds: {
              2: 3
            },
            firstUnknownField: 18,
            canAnonymize: true,
            firstOptionalField: 18
          },
          NetworkUpdateHP: {
            type: '39',
            name: 'NetworkUpdateHP',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'UpdateHp',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3,
              currentHp: 4,
              maxHp: 5,
              currentMp: 6,
              maxMp: 7,
              // currentTp: 8,
              // maxTp: 9,
              x: 10,
              y: 11,
              z: 12,
              heading: 13
            },
            playerIds: {
              2: 3
            },
            canAnonymize: true,
            firstOptionalField: undefined
          },
          Map: {
            type: '40',
            name: 'Map',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'ChangeMap',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              regionName: 3,
              placeName: 4,
              placeNameSub: 5
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            lastInclude: true,
            analysisOptions: {
              include: 'all'
            }
          },
          SystemLogMessage: {
            type: '41',
            name: 'SystemLogMessage',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'SystemLogMessage',
            fields: {
              type: 0,
              timestamp: 1,
              instance: 2,
              id: 3,
              param0: 4,
              param1: 5,
              param2: 6
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all'
            }
          },
          StatusList3: {
            type: '42',
            name: 'StatusList3',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'StatusList3',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              name: 3
              // triplets of fields from here (effectId, data, playerId)?
            },

            playerIds: {
              2: 3
            },
            canAnonymize: true,
            firstOptionalField: 4,
            firstUnknownField: 4
          },
          ParserInfo: {
            type: '249',
            name: 'ParserInfo',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Settings',
            fields: {
              type: 0,
              timestamp: 1
            },
            globalInclude: true,
            canAnonymize: true,
            firstOptionalField: undefined
          },
          ProcessInfo: {
            type: '250',
            name: 'ProcessInfo',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Process',
            fields: {
              type: 0,
              timestamp: 1
            },
            globalInclude: true,
            canAnonymize: true,
            firstOptionalField: undefined
          },
          Debug: {
            type: '251',
            name: 'Debug',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Debug',
            fields: {
              type: 0,
              timestamp: 1
            },
            globalInclude: true,
            canAnonymize: false,
            firstOptionalField: undefined
          },
          PacketDump: {
            type: '252',
            name: 'PacketDump',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'PacketDump',
            fields: {
              type: 0,
              timestamp: 1
            },
            canAnonymize: false,
            firstOptionalField: undefined
          },
          Version: {
            type: '253',
            name: 'Version',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Version',
            fields: {
              type: 0,
              timestamp: 1
            },
            globalInclude: true,
            canAnonymize: true,
            firstOptionalField: undefined
          },
          Error: {
            type: '254',
            name: 'Error',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'Error',
            fields: {
              type: 0,
              timestamp: 1
            },
            canAnonymize: false,
            firstOptionalField: undefined
          },
          None: {
            type: '[0-9]+',
            name: 'None',
            source: 'FFXIV_ACT_Plugin',
            messageType: 'None',
            fields: {
              type: 0,
              timestamp: 1
            },
            isUnknown: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'never'
            }
          },
          // OverlayPlugin log lines
          LineRegistration: {
            type: '256',
            name: 'LineRegistration',
            source: 'OverlayPlugin',
            messageType: '256',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              source: 3,
              name: 4,
              version: 5
            },
            globalInclude: true,
            canAnonymize: true,
            firstOptionalField: undefined
          },
          MapEffect: {
            type: '257',
            name: 'MapEffect',
            source: 'OverlayPlugin',
            messageType: '257',
            fields: {
              type: 0,
              timestamp: 1,
              instance: 2,
              flags: 3,
              // values for the location field seem to vary between instances
              // (e.g. a location of '08' in P5S does not appear to be the same location in P5S as in P6S)
              // but this field does appear to consistently contain position info for the effect rendering
              location: 4,
              data0: 5,
              data1: 6
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all'
            }
          },
          FateDirector: {
            type: '258',
            name: 'FateDirector',
            source: 'OverlayPlugin',
            messageType: '258',
            // fateId and progress are in hex.
            fields: {
              type: 0,
              timestamp: 1,
              category: 2,
              // padding0: 3,
              fateId: 4,
              progress: 5
              // param3: 6,
              // param4: 7,
              // param5: 8,
              // param6: 9,
              // padding1: 10,
            },

            canAnonymize: true,
            firstOptionalField: undefined
          },
          CEDirector: {
            type: '259',
            name: 'CEDirector',
            source: 'OverlayPlugin',
            messageType: '259',
            // all fields are in hex
            fields: {
              type: 0,
              timestamp: 1,
              popTime: 2,
              timeRemaining: 3,
              // unknown0: 4,
              ceKey: 5,
              numPlayers: 6,
              status: 7,
              // unknown1: 8,
              progress: 9
              // unknown2: 10,
              // unknown3: 11,
              // unknown4: 12,
            },

            canAnonymize: true,
            firstOptionalField: undefined
          },
          InCombat: {
            type: '260',
            name: 'InCombat',
            source: 'OverlayPlugin',
            messageType: '260',
            fields: {
              type: 0,
              timestamp: 1,
              inACTCombat: 2,
              inGameCombat: 3,
              isACTChanged: 4,
              isGameChanged: 5
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all'
            }
          },
          CombatantMemory: {
            type: '261',
            name: 'CombatantMemory',
            source: 'OverlayPlugin',
            messageType: '261',
            fields: {
              type: 0,
              timestamp: 1,
              change: 2,
              id: 3
              // from here, pairs of field name/values
            },

            canAnonymize: true,
            firstOptionalField: 5,
            // doesn't use `playerIds`, as the `id` field must be handled with the 'Name' repeating field
            repeatingFields: {
              startingIndex: 4,
              label: 'pair',
              names: ['key', 'value'],
              sortKeys: true,
              primaryKey: 'key',
              possibleKeys: combatantMemoryKeys,
              keysToAnonymize: {
                // eslint-disable-next-line quote-props
                3: 'Name',
                // 'ID' repeating field not used? need to use non-repeating `id` (3) field
                'OwnerID': null,
                'TargetID': null,
                'PCTargetID': null,
                'NPCTargetID': null,
                'CastTargetID': null
              }
            },
            analysisOptions: {
              include: 'filter',
              // TODO: This is an initial attempt to capture field changes that are relevant to analysis,
              // but this will likely need to be refined over time
              filters: [{
                // TODO: ModelStatus can be a little spammy. Should try to refine this further.
                id: '4.{7}',
                change: 'Change',
                pair: [{
                  key: 'ModelStatus',
                  value: '.*'
                }]
              }, {
                id: '4.{7}',
                change: 'Change',
                pair: [{
                  key: 'WeaponId',
                  value: '.*'
                }]
              }, {
                id: '4.{7}',
                change: 'Change',
                pair: [{
                  key: 'TransformationId',
                  value: '.*'
                }]
              }],
              combatantIdFields: 3
            }
          },
          RSVData: {
            type: '262',
            name: 'RSVData',
            source: 'OverlayPlugin',
            messageType: '262',
            fields: {
              type: 0,
              timestamp: 1,
              locale: 2,
              // unknown0: 3,
              key: 4,
              value: 5
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              // RSV substitutions are performed automatically by the filter
              include: 'never'
            }
          },
          StartsUsingExtra: {
            type: '263',
            name: 'StartsUsingExtra',
            source: 'OverlayPlugin',
            messageType: '263',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              id: 3,
              x: 4,
              y: 5,
              z: 6,
              heading: 7
            },
            playerIds: {
              2: null
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                sourceId: '4.{7}'
              },
              // NPC casts only
              combatantIdFields: 2
            }
          },
          AbilityExtra: {
            type: '264',
            name: 'AbilityExtra',
            source: 'OverlayPlugin',
            messageType: '264',
            fields: {
              type: 0,
              timestamp: 1,
              sourceId: 2,
              id: 3,
              globalEffectCounter: 4,
              dataFlag: 5,
              x: 6,
              y: 7,
              z: 8,
              heading: 9,
              animationTargetId: 10
            },
            blankFields: [6, 7, 8],
            playerIds: {
              2: null
            },
            canAnonymize: true,
            firstOptionalField: undefined
          },
          ContentFinderSettings: {
            type: '265',
            name: 'ContentFinderSettings',
            source: 'OverlayPlugin',
            messageType: '265',
            fields: {
              type: 0,
              timestamp: 1,
              zoneId: 2,
              zoneName: 3,
              inContentFinderContent: 4,
              unrestrictedParty: 5,
              minimalItemLevel: 6,
              silenceEcho: 7,
              explorerMode: 8,
              levelSync: 9
            },
            canAnonymize: true,
            firstOptionalField: undefined
          },
          NpcYell: {
            type: '266',
            name: 'NpcYell',
            source: 'OverlayPlugin',
            messageType: '266',
            fields: {
              type: 0,
              timestamp: 1,
              npcId: 2,
              npcNameId: 3,
              npcYellId: 4
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all',
              combatantIdFields: 2
            }
          },
          BattleTalk2: {
            type: '267',
            name: 'BattleTalk2',
            source: 'OverlayPlugin',
            messageType: '267',
            fields: {
              type: 0,
              timestamp: 1,
              npcId: 2,
              instance: 3,
              npcNameId: 4,
              instanceContentTextId: 5,
              displayMs: 6
              // unknown1: 7,
              // unknown2: 8,
              // unknown3: 9,
              // unknown4: 10,
            },

            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all',
              combatantIdFields: 2
            }
          },
          Countdown: {
            type: '268',
            name: 'Countdown',
            source: 'OverlayPlugin',
            messageType: '268',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              worldId: 3,
              countdownTime: 4,
              result: 5,
              name: 6
            },
            playerIds: {
              2: 6
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'never'
            }
          },
          CountdownCancel: {
            type: '269',
            name: 'CountdownCancel',
            source: 'OverlayPlugin',
            messageType: '269',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              worldId: 3,
              name: 4
            },
            playerIds: {
              2: 4
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'never'
            }
          },
          ActorMove: {
            type: '270',
            name: 'ActorMove',
            source: 'OverlayPlugin',
            messageType: '270',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              heading: 3,
              // OP calls this 'rotation', but cactbot consistently uses 'heading'
              // unknown1: 4,
              // unknown2: 5,
              x: 6,
              y: 7,
              z: 8
            },
            playerIds: {
              2: null
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              // no real way to filter noise, even if (infrequently) used for triggers
              include: 'never'
            }
          },
          ActorSetPos: {
            type: '271',
            name: 'ActorSetPos',
            source: 'OverlayPlugin',
            messageType: '271',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              heading: 3,
              // OP calls this 'rotation', but cactbot consistently uses 'heading'
              // unknown1: 4,
              // unknown2: 5,
              x: 6,
              y: 7,
              z: 8
            },
            playerIds: {
              2: null
            },
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'filter',
              filters: {
                id: '4.{7}'
              },
              // NPCs only
              combatantIdFields: 2
            }
          },
          SpawnNpcExtra: {
            type: '272',
            name: 'SpawnNpcExtra',
            source: 'OverlayPlugin',
            messageType: '272',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              parentId: 3,
              tetherId: 4,
              animationState: 5
            },
            playerIds: {
              3: null // `id` is an npc, but parentId could be a tethered player?
            },

            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all',
              combatantIdFields: [2, 3]
            }
          },
          ActorControlExtra: {
            type: '273',
            name: 'ActorControlExtra',
            source: 'OverlayPlugin',
            messageType: '273',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              category: 3,
              param1: 4,
              param2: 5,
              param3: 6,
              param4: 7
            },
            playerIds: {
              2: null
            },
            possiblePlayerIds: [4, 5, 6, 7],
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all',
              combatantIdFields: 2
            }
          },
          ActorControlSelfExtra: {
            type: '274',
            name: 'ActorControlSelfExtra',
            source: 'OverlayPlugin',
            messageType: '274',
            fields: {
              type: 0,
              timestamp: 1,
              id: 2,
              category: 3,
              param1: 4,
              param2: 5,
              param3: 6,
              param4: 7,
              param5: 8,
              param6: 9
            },
            playerIds: {
              2: null
            },
            possiblePlayerIds: [4, 5, 6, 7, 8, 9],
            canAnonymize: true,
            firstOptionalField: undefined,
            analysisOptions: {
              include: 'all',
              combatantIdFields: 2
            }
          }
        };
        const logDefinitionsVersions = {
          'latest': latestLogDefinitions
        };

        // Verify that this has the right type, but export `as const`.
        const assertLogDefinitions = latestLogDefinitions;
        console.assert(assertLogDefinitions);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logDefinitionsVersions['latest']);

        /***/
      }),

/***/ 622:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bx": () => (/* binding */ actorControlType),
/* harmony export */   "ZP": () => (/* binding */ NetRegexes),
/* harmony export */   "k3": () => (/* binding */ gameLogCodes)
        /* harmony export */
      });
/* unused harmony exports keysThatRequireTranslation, buildRegex, commonNetRegex, buildNetRegexForTrigger */
/* harmony import */ var _netlog_defs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21);
/* harmony import */ var _not_reached__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62);
/* harmony import */ var _regexes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(402);



        const separator = '\\|';
        const matchDefault = '[^|]*';

        // If NetRegexes.setFlagTranslationsNeeded is set to true, then any
        // regex created that requires a translation will begin with this string
        // and match the magicStringRegex.  This is maybe a bit goofy, but is
        // a pretty straightforward way to mark regexes for translations.
        // If issue #1306 is ever resolved, we can remove this.
        const magicTranslationString = `^^`;
        const magicStringRegex = /^\^\^/;

        // can't simply export this, see https://github.com/OverlayPlugin/cactbot/pull/4957#discussion_r1002590589
        const keysThatRequireTranslationAsConst = ['ability', 'name', 'source', 'target', 'line'];
        const keysThatRequireTranslation = keysThatRequireTranslationAsConst;
        const gameLogCodes = {
          echo: '0038',
          dialog: '0044',
          message: '0839'
        };

        // See docs/LogGuide.md for more info about these categories
        const actorControlType = {
          setAnimState: '003E',
          publicContentText: '0834',
          logMsg: '020F',
          logMsgParams: '0210'
        };
        const defaultParams = (type, version, include) => {
          const logType = _netlog_defs__WEBPACK_IMPORTED_MODULE_0__/* .logDefinitionsVersions */.W[version][type];
          if (include === undefined) {
            include = Object.keys(logType.fields);
            if ('repeatingFields' in logType) {
              include.push(logType.repeatingFields.label);
            }
          }
          const params = {};
          const firstOptionalField = logType.firstOptionalField;
          for (const [prop, index] of Object.entries(logType.fields)) {
            if (!include.includes(prop)) continue;
            const param = {
              field: prop,
              optional: firstOptionalField !== undefined && index >= firstOptionalField
            };
            if (prop === 'type') param.value = logType.type;
            params[index] = param;
          }
          if ('repeatingFields' in logType && include.includes(logType.repeatingFields.label)) {
            params[logType.repeatingFields.startingIndex] = {
              field: logType.repeatingFields.label,
              optional: firstOptionalField !== undefined && logType.repeatingFields.startingIndex >= firstOptionalField,
              repeating: true,
              repeatingKeys: [...logType.repeatingFields.names],
              sortKeys: logType.repeatingFields.sortKeys,
              primaryKey: logType.repeatingFields.primaryKey,
              possibleKeys: [...logType.repeatingFields.possibleKeys]
            };
          }
          return params;
        };
        const isRepeatingField = (repeating, value) => {
          if (repeating !== true) return false;
          // Allow excluding the field to match for extraction
          if (value === undefined) return true;
          if (!Array.isArray(value)) return false;
          for (const e of value) {
            if (typeof e !== 'object') return false;
          }
          return true;
        };
        const parseHelper = (params, funcName, fields) => {
          params = params ?? {};
          const validFields = [];
          for (const index in fields) {
            const field = fields[index];
            if (field) validFields.push(field.field);
          }
          _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].validateParams */.Z.validateParams(params, funcName, ['capture', ...validFields]);

          // Find the last key we care about, so we can shorten the regex if needed.
          const capture = _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].trueIfUndefined */.Z.trueIfUndefined(params.capture);
          const fieldKeys = Object.keys(fields).sort((a, b) => parseInt(a) - parseInt(b));
          let maxKeyStr;
          if (capture) {
            const keys = [];
            for (const key in fields) keys.push(key);
            let tmpKey = keys.pop();
            if (tmpKey === undefined) {
              maxKeyStr = fieldKeys[fieldKeys.length - 1] ?? '0';
            } else {
              while (fields[tmpKey]?.optional && !((fields[tmpKey]?.field ?? '') in params)) tmpKey = keys.pop();
              maxKeyStr = tmpKey ?? '0';
            }
          } else {
            maxKeyStr = '0';
            for (const key in fields) {
              const value = fields[key] ?? {};
              if (typeof value !== 'object') continue;
              const fieldName = fields[key]?.field;
              if (fieldName !== undefined && fieldName in params) maxKeyStr = key;
            }
          }
          const maxKey = parseInt(maxKeyStr);

          // For testing, it's useful to know if this is a regex that requires
          // translation.  We test this by seeing if there are any specified
          // fields, and if so, inserting a magic string that we can detect.
          // This lets us differentiate between "regex that should be translated"
          // e.g. a regex with `target` specified, and "regex that shouldn't"
          // e.g. a gains effect with just effectId specified.
          const transParams = Object.keys(params).filter(k => keysThatRequireTranslation.includes(k));
          const needsTranslations = NetRegexes.flagTranslationsNeeded && transParams.length > 0;

          // Build the regex from the fields.
          let str = needsTranslations ? magicTranslationString : '^';
          let lastKey = -1;
          for (const keyStr in fields) {
            const key = parseInt(keyStr);
            // Fill in blanks.
            const missingFields = key - lastKey - 1;
            if (missingFields === 1) str += '\\y{NetField}'; else if (missingFields > 1) str += `\\y{NetField}{${missingFields}}`;
            lastKey = key;
            const value = fields[keyStr];
            if (typeof value !== 'object') throw new Error(`${funcName}: invalid value: ${JSON.stringify(value)}`);
            const fieldName = value.field;
            const defaultFieldValue = value.value?.toString() ?? matchDefault;
            const fieldValue = params[fieldName];
            if (isRepeatingField(fields[keyStr]?.repeating, fieldValue)) {
              let repeatingArray = fieldValue;
              const sortKeys = fields[keyStr]?.sortKeys;
              const primaryKey = fields[keyStr]?.primaryKey;
              const possibleKeys = fields[keyStr]?.possibleKeys;

              // primaryKey is required if this is a repeating field per typedef in netlog_defs.ts
              // Same with possibleKeys
              if (primaryKey === undefined || possibleKeys === undefined) throw new _not_reached__WEBPACK_IMPORTED_MODULE_1__/* .UnreachableCode */.$();

              // Allow sorting if needed
              if (sortKeys) {
                // Also sort our valid keys list
                possibleKeys.sort((left, right) => left.toLowerCase().localeCompare(right.toLowerCase()));
                if (repeatingArray !== undefined) {
                  repeatingArray = [...repeatingArray].sort((left, right) => {
                    // We check the validity of left/right because they're user-supplied
                    if (typeof left !== 'object' || left[primaryKey] === undefined) {
                      console.warn('Invalid argument passed to trigger:', left);
                      return 0;
                    }
                    const leftValue = left[primaryKey];
                    if (typeof leftValue !== 'string' || !possibleKeys?.includes(leftValue)) {
                      console.warn('Invalid argument passed to trigger:', left);
                      return 0;
                    }
                    if (typeof right !== 'object' || right[primaryKey] === undefined) {
                      console.warn('Invalid argument passed to trigger:', right);
                      return 0;
                    }
                    const rightValue = right[primaryKey];
                    if (typeof rightValue !== 'string' || !possibleKeys?.includes(rightValue)) {
                      console.warn('Invalid argument passed to trigger:', right);
                      return 0;
                    }
                    return leftValue.toLowerCase().localeCompare(rightValue.toLowerCase());
                  });
                }
              }
              const anonReps = repeatingArray;
              // Loop over our possible keys
              // Build a regex that can match any possible key with required values substituted in
              possibleKeys.forEach(possibleKey => {
                const rep = anonReps?.find(rep => primaryKey in rep && rep[primaryKey] === possibleKey);
                let fieldRegex = '';
                // Rather than looping over the keys defined on the object,
                // loop over the base type def's keys. This enforces the correct order.
                fields[keyStr]?.repeatingKeys?.forEach(key => {
                  let val = rep?.[key];
                  if (rep === undefined || !(key in rep)) {
                    // If we don't have a value for this key
                    // insert a placeholder, unless it's the primary key
                    if (key === primaryKey) val = possibleKey; else val = matchDefault;
                  }
                  if (typeof val !== 'string') {
                    if (!Array.isArray(val)) val = matchDefault; else if (val.length < 1) val = matchDefault; else if (val.some(v => typeof v !== 'string')) val = matchDefault;
                  }
                  fieldRegex += _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].maybeCapture */.Z.maybeCapture(key === primaryKey ? false : capture,
                    // All capturing groups are `fieldName` + `possibleKey`, e.g. `pairIsCasting1`
                    fieldName + possibleKey, val, defaultFieldValue) + separator;
                });
                if (fieldRegex.length > 0) {
                  str += `(?:${fieldRegex})${rep !== undefined ? '' : '?'}`;
                }
              });
            } else if (fields[keyStr]?.repeating) {
              // If this is a repeating field but the actual value is empty or otherwise invalid,
              // don't process further. We can't use `continue` in the above block because that
              // would skip the early-out break at the end of the loop.
            } else {
              if (fieldName !== undefined) {
                str += _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].maybeCapture */.Z.maybeCapture(
                  // more accurate type instead of `as` cast
                  // maybe this function needs a refactoring
                  capture, fieldName, fieldValue, defaultFieldValue) + separator;
              } else {
                str += defaultFieldValue + separator;
              }
            }

            // Stop if we're not capturing and don't care about future fields.
            if (key >= maxKey) break;
          }
          return _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].parse */.Z.parse(str);
        };
        const buildRegex = (type, params) => {
          return parseHelper(params, type, defaultParams(type, NetRegexes.logVersion));
        };
        class NetRegexes {
          static logVersion = 'latest';
          static flagTranslationsNeeded = false;
          static setFlagTranslationsNeeded(value) {
            NetRegexes.flagTranslationsNeeded = value;
          }
          static doesNetRegexNeedTranslation(regex) {
            // Need to `setFlagTranslationsNeeded` before calling this function.
            console.assert(NetRegexes.flagTranslationsNeeded);
            const str = typeof regex === 'string' ? regex : regex.source;
            return !!magicStringRegex.exec(str);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-20-0x14-networkstartscasting
           */
          static startsUsing(params) {
            return buildRegex('StartsUsing', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-21-0x15-networkability
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-22-0x16-networkaoeability
           */
          static ability(params) {
            return parseHelper(params, 'Ability', {
              ...defaultParams('Ability', NetRegexes.logVersion),
              // Override type
              0: {
                field: 'type',
                value: '2[12]',
                optional: false
              }
            });
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-21-0x15-networkability
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-22-0x16-networkaoeability
           *
           * @deprecated Use `ability` instead
           */
          static abilityFull(params) {
            return this.ability(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-27-0x1b-networktargeticon-head-marker
           */
          static headMarker(params) {
            return buildRegex('HeadMarker', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-03-0x03-addcombatant
           */
          static addedCombatant(params) {
            return parseHelper(params, 'AddedCombatant', defaultParams('AddedCombatant', NetRegexes.logVersion));
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-03-0x03-addcombatant
           * @deprecated Use `addedCombatant` instead
           */
          static addedCombatantFull(params) {
            return NetRegexes.addedCombatant(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-04-0x04-removecombatant
           */
          static removingCombatant(params) {
            return buildRegex('RemovedCombatant', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-26-0x1a-networkbuff
           */
          static gainsEffect(params) {
            return buildRegex('GainsEffect', params);
          }

          /**
           * Prefer gainsEffect over this function unless you really need extra data.
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-38-0x26-networkstatuseffects
           */
          static statusEffectExplicit(params) {
            return buildRegex('StatusEffect', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-30-0x1e-networkbuffremove
           */
          static losesEffect(params) {
            return buildRegex('LosesEffect', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-35-0x23-networktether
           */
          static tether(params) {
            return buildRegex('Tether', params);
          }

          /**
           * 'target' was defeated by 'source'
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-25-0x19-networkdeath
           */
          static wasDefeated(params) {
            return buildRegex('WasDefeated', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-24-0x18-networkdot
           */
          static networkDoT(params) {
            return buildRegex('NetworkDoT', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static echo(params) {
            if (typeof params === 'undefined') params = {};
            _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].validateParams */.Z.validateParams(params, 'Echo', ['type', 'timestamp', 'code', 'name', 'line', 'capture']);
            return NetRegexes.gameLog({
              ...params,
              code: gameLogCodes.echo
            });
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static dialog(params) {
            if (typeof params === 'undefined') params = {};
            _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].validateParams */.Z.validateParams(params, 'Dialog', ['type', 'timestamp', 'code', 'name', 'line', 'capture']);
            return NetRegexes.gameLog({
              ...params,
              code: gameLogCodes.dialog
            });
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static message(params) {
            if (typeof params === 'undefined') params = {};
            _regexes__WEBPACK_IMPORTED_MODULE_2__/* ["default"].validateParams */.Z.validateParams(params, 'Message', ['type', 'timestamp', 'code', 'name', 'line', 'capture']);
            return NetRegexes.gameLog({
              ...params,
              code: gameLogCodes.message
            });
          }

          /**
           * fields: code, name, line, capture
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static gameLog(params) {
            return buildRegex('GameLog', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static gameNameLog(params) {
            // Backwards compatability.
            return NetRegexes.gameLog(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-12-0x0c-playerstats
           */
          static statChange(params) {
            return buildRegex('PlayerStats', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-01-0x01-changezone
           */
          static changeZone(params) {
            return buildRegex('ChangeZone', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-33-0x21-network6d-actor-control
           */
          static network6d(params) {
            return buildRegex('ActorControl', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-34-0x22-networknametoggle
           */
          static nameToggle(params) {
            return buildRegex('NameToggle', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-40-0x28-map
           */
          static map(params) {
            return buildRegex('Map', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-41-0x29-systemlogmessage
           */
          static systemLogMessage(params) {
            return buildRegex('SystemLogMessage', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-257-0x101-mapeffect
           */
          static mapEffect(params) {
            return buildRegex('MapEffect', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-258-0x102-fatedirector
           */
          static fateDirector(params) {
            return buildRegex('FateDirector', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-259-0x103-cedirector
           */
          static ceDirector(params) {
            return buildRegex('CEDirector', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-260-0x104-incombat
           */
          static inCombat(params) {
            return buildRegex('InCombat', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-261-0x105-combatantmemory
           */
          static combatantMemory(params) {
            return buildRegex('CombatantMemory', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-263-0x107-startsusingextra
           */
          static startsUsingExtra(params) {
            return buildRegex('StartsUsingExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-264-0x108-abilityextra
           */
          static abilityExtra(params) {
            return buildRegex('AbilityExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-265-0x109-contentfindersettings
           */
          static contentFinderSettings(params) {
            return buildRegex('ContentFinderSettings', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-266-0x10a-npcyell
           */
          static npcYell(params) {
            return buildRegex('NpcYell', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-267-0x10b-battletalk2
           */
          static battleTalk2(params) {
            return buildRegex('BattleTalk2', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-268-0x10c-countdown
           */
          static countdown(params) {
            return buildRegex('Countdown', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-269-0x10d-countdowncancel
           */
          static countdownCancel(params) {
            return buildRegex('CountdownCancel', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-270-0x10e-actormove
           */
          static actorMove(params) {
            return buildRegex('ActorMove', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-271-0x10f-actorsetpos
           */
          static actorSetPos(params) {
            return buildRegex('ActorSetPos', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-272-0x110-spawnnpcextra
           */
          static spawnNpcExtra(params) {
            return buildRegex('SpawnNpcExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-273-0x111-actorcontrolextra
           */
          static actorControlExtra(params) {
            return buildRegex('ActorControlExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-274-0x112-actorcontrolselfextra
           */
          static actorControlSelfExtra(params) {
            return buildRegex('ActorControlSelfExtra', params);
          }
        }
        const commonNetRegex = {
          // TODO(6.2): remove 40000010 after everybody is on 6.2.
          // TODO: or maybe keep around for playing old log files??
          wipe: NetRegexes.network6d({
            command: ['40000010', '4000000F']
          }),
          cactbotWipeEcho: NetRegexes.echo({
            line: 'cactbot wipe.*?'
          }),
          userWipeEcho: NetRegexes.echo({
            line: 'end'
          })
        };
        const buildNetRegexForTrigger = (type, params) => {
          if (type === 'Ability')
            // ts can't narrow T to `Ability` here, need casting.
            return NetRegexes.ability(params);
          return buildRegex(type, params);
        };

        /***/
      }),

/***/ 62:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$": () => (/* binding */ UnreachableCode)
        /* harmony export */
      });
        // Helper Error for TypeScript situations where the programmer thinks they
        // know better than TypeScript that some situation will never occur.

        // The intention here is that the programmer does not expect a particular
        // bit of code to happen, and so has not written careful error handling.
        // If it does occur, at least there will be an error and we can figure out why.
        // This is preferable to casting or disabling TypeScript altogether in order to
        // avoid syntax errors.

        // One common example is a regex, where if the regex matches then all of the
        // (non-optional) regex groups will also be valid, but TypeScript doesn't know.
        class UnreachableCode extends Error {
          constructor() {
            super('This code shouldn\'t be reached');
          }
        }

        /***/
      }),

/***/ 81:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
        // Output strings for now require a field for every language, so this is a
        // helper function to generate one for literal numbers.
        const numberToOutputString = function (n) {
          const str = n.toString();
          return {
            en: str,
            de: str,
            fr: str,
            ja: str,
            cn: str,
            ko: str
          };
        };

// General guidelines:
// * property names should closely match English text
// * use OnPlayer suffix for things with `${player}`
// * use OnTarget suffix for things with `${name}`
// * any other parameters (of which there are none, currently) should use consistent suffixes.
// * the value of each property should be a single object with localized keys
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
          aoe: {
            en: 'aoe',
            de: 'AoE',
            fr: 'AoE',
            ja: '全体攻撃',
            cn: 'AoE',
            ko: '전체 공격'
          },
          bigAoe: {
            en: 'big aoe!',
            de: 'Große AoE!',
            fr: 'Grosse AoE !',
            ja: '強力な全体攻撃',
            cn: '大AoE伤害！',
            ko: '강한 전체 공격!'
          },
          bleedAoe: {
            en: 'AoE + Bleed',
            de: 'AoE + Blutung',
            fr: 'AoE + Saignement',
            ja: '全体攻撃 + DoT',
            cn: 'AOE + 流血',
            ko: '전체 공격 + 도트'
          },
          tankBuster: {
            en: 'Tank Buster',
            de: 'Tank buster',
            fr: 'Tank buster',
            ja: 'タンク強攻撃',
            cn: '坦克死刑',
            ko: '탱버'
          },
          miniBuster: {
            en: 'Mini Buster',
            de: 'Kleiner Tankbuster',
            fr: 'Mini Buster',
            ja: 'タンク攻撃',
            cn: '小死刑',
            ko: '약한 탱버'
          },
          tankBusterOnPlayer: {
            en: 'Tank Buster on ${player}',
            de: 'Tank buster auf ${player}',
            fr: 'Tank buster sur ${player}',
            ja: '${player}に強攻撃',
            cn: '死刑 点 ${player}',
            ko: '"${player}" 탱버'
          },
          tankBusterOnYou: {
            en: 'Tank Buster on YOU',
            de: 'Tank buster auf DIR',
            fr: 'Tank buster sur VOUS',
            ja: '自分に強攻撃',
            cn: '死刑点名',
            ko: '탱버 대상자'
          },
          // when there are multiple tankbusters going out
          tankBusters: {
            en: 'Tank Busters',
            de: 'Tank busters',
            fr: 'Tank busters',
            ja: 'タンク強攻撃',
            cn: '坦克死刑',
            ko: '탱버'
          },
          tetherBusters: {
            en: 'Tank Tethers',
            de: 'Tank-Verbindungen',
            fr: 'Liens Tank',
            ja: 'タンク線取り',
            cn: '坦克截线',
            ko: '탱커가 선 가로채기'
          },
          avoidTetherBusters: {
            en: 'Avoid Tank Tethers',
            de: 'Vermeide Tank Verbindungen',
            fr: 'Évitez les liens des Tanks',
            ja: 'タンクの線を避けて',
            cn: '远离坦克连线',
            ko: '탱커 선 피하기'
          },
          tankCleave: {
            en: 'Tank cleave',
            de: 'Tank Cleave',
            fr: 'Tank cleave',
            ja: 'タンク範囲攻撃',
            cn: '范围死刑',
            ko: '광역 탱버'
          },
          tankBusterCleaves: {
            en: 'Tank Buster Cleaves',
            de: 'Tankbuster Cleaves',
            fr: 'Tankbuster cleaves',
            ja: 'MT・ST同時範囲攻撃',
            cn: '坦克范围死刑',
            ko: '동시 광역 탱버'
          },
          tankBusterCleavesOnYou: {
            en: 'Tank Cleaves on YOU',
            de: 'Tank Cleaves auf DIR',
            fr: 'Tank cleaves sur VOUS',
            ja: 'MT・ST同時範囲攻撃(自分対象)',
            cn: '坦克范围死刑点名',
            ko: '광역 탱버 대상자'
          },
          avoidTankCleave: {
            en: 'Avoid tank cleave',
            de: 'Tank Cleave ausweichen',
            fr: 'Évitez le tank cleave',
            ja: 'タンク範囲攻撃を避ける',
            cn: '远离范围死刑',
            ko: '광역 탱버 피하기'
          },
          avoidTankCleaves: {
            en: 'Avoid Tank Cleaves',
            de: 'Tankbuster Cleaves ausweichen',
            fr: 'Évitez les cleaves (tankbusters)',
            ja: '範囲攻撃を避けて',
            cn: '远离坦克范围死刑',
            ko: '광역 탱버 피하기'
          },
          tankCleaveOnYou: {
            en: 'Tank cleave on YOU',
            de: 'Tank Cleave aud DIR',
            fr: 'Tank cleave sur VOUS',
            ja: '自分に範囲攻撃',
            cn: '范围死刑点名',
            ko: '나에게 광역 탱버'
          },
          sharedTankbuster: {
            en: 'Shared Tank Buster',
            de: 'Geteilter Tankbuster',
            fr: 'Partagez le Tank buster',
            ja: 'タンク頭割り',
            cn: '分摊死刑',
            ko: '쉐어 탱버'
          },
          sharedTankbusterOnYou: {
            en: 'Shared Tank Buster on YOU',
            de: 'geteilter Tankbuster auf DIR',
            fr: 'Tank buster à partager sur VOUS',
            ja: '自分にタンク頭割り',
            cn: '分摊死刑点名',
            ko: '쉐어 탱버 대상자'
          },
          sharedTankbusterOnPlayer: {
            en: 'Shared Tank Buster on ${player}',
            de: 'geteilter Tankbuster on ${player}',
            fr: 'Tank buster à partager sur ${player}',
            ja: '${player} にタンク頭割り',
            cn: '分摊死刑点 ${player}',
            ko: '"${player}" 쉐어 탱버'
          },
          tankSwap: {
            en: 'Tank Swap!',
            de: 'Tankwechsel!',
            fr: 'Tank swap !',
            ja: 'タンクスイッチ!',
            cn: '换T！',
            ko: '탱 교대'
          },
          spread: {
            en: 'Spread',
            de: 'Verteilen',
            fr: 'Dispersez-vous',
            ja: '散開',
            cn: '分散',
            ko: '산개'
          },
          defamationOnYou: {
            en: 'Defamation on YOU',
            de: 'Ehrenstrafe aud DIR',
            fr: 'Diffamation sur VOUS',
            ja: '自分に巨大な爆発',
            cn: '大圈点名',
            ko: '광역징 대상자'
          },
          protean: {
            en: 'Protean',
            de: 'Himmelsrichtungen',
            fr: 'Positions',
            ja: '基本散会',
            cn: '八方分散',
            ko: '8방향 산개'
          },
          stackMarker: {
            // for stack marker situations
            en: 'Stack',
            de: 'Sammeln',
            fr: 'Packez-vous',
            ja: '頭割り',
            cn: '分摊',
            ko: '쉐어뎀'
          },
          getTogether: {
            // for getting together without stack marker
            en: 'Stack',
            de: 'Sammeln',
            fr: 'Packez-vous',
            ja: '集合',
            cn: '集合',
            ko: '모이기'
          },
          healerGroups: {
            en: 'Healer Groups',
            de: 'Heiler-Gruppen',
            fr: 'Groupes sur les heals',
            ja: 'ヒラに頭割り',
            cn: '双奶分组分摊',
            ko: '힐러 그룹 쉐어'
          },
          stackOnYou: {
            en: 'Stack on YOU',
            de: 'Auf DIR sammeln',
            fr: 'Package sur VOUS',
            ja: '自分に頭割り',
            cn: '分摊点名',
            ko: '쉐어징 대상자'
          },
          stackOnPlayer: {
            en: 'Stack on ${player}',
            de: 'Auf ${player} sammeln',
            fr: 'Packez-vous sur ${player}',
            ja: '${player}に頭割り',
            cn: '靠近 ${player}分摊',
            ko: '"${player}" 쉐어징'
          },
          stackPartner: {
            en: 'Stack With Partner',
            de: 'Mit Partner stacken',
            fr: 'Packez-vous avec votre partenaire',
            ja: 'ペア',
            cn: '与搭档分摊',
            ko: '파트너와 쉐어'
          },
          stackMiddle: {
            en: 'Stack in middle',
            de: 'In der Mitte sammeln',
            fr: 'Packez-vous au milieu',
            ja: '中央で頭割り',
            cn: '中间集合',
            ko: '중앙에서 쉐어'
          },
          baitPuddles: {
            en: 'Bait puddles',
            de: 'Flächen Ködern',
            fr: 'Attirez les flaques',
            ja: 'AOE誘導',
            cn: '诱导放圈',
            ko: '장판 유도'
          },
          // For general more-than-one-stack-at-a-time situations
          stacks: {
            en: 'Stacks',
            de: 'Sammeln',
            fr: 'Package',
            ja: '頭割り',
            cn: '分摊',
            ko: '쉐어'
          },
          doritoStack: {
            en: 'Dorito Stack',
            de: 'Mit Marker sammeln',
            fr: 'Packez les marques',
            ja: 'マーカー同士で頭割り',
            cn: '点名集合',
            ko: '징끼리 모이기'
          },
          spreadThenStack: {
            en: 'Spread => Stack',
            de: 'Verteilen => Sammeln',
            fr: 'Dispersion => Package',
            ja: '散開 => 頭割り',
            cn: '分散 => 集合',
            ko: '산개 => 집합'
          },
          stackThenSpread: {
            en: 'Stack => Spread',
            de: 'Sammeln => Verteilen',
            fr: 'Package => Dispersion',
            ja: '頭割り => 散開',
            cn: '集合 => 分散',
            ko: '집합 => 산개'
          },
          drawIn: {
            // Opposite of a knockback.
            en: 'Draw In',
            de: 'Einzug',
            fr: 'Attraction',
            ja: '吸込み',
            cn: '吸引',
            ko: '끌어당김'
          },
          knockback: {
            en: 'Knockback',
            de: 'Rückstoß',
            fr: 'Poussée',
            ja: 'ノックバック',
            cn: '击退',
            ko: '넉백'
          },
          knockbackOnYou: {
            en: 'Knockback on YOU',
            de: 'Rückstoß auf DIR',
            fr: 'Poussée sur VOUS',
            ja: '自分にノックバック',
            cn: '击退点名',
            ko: '넉백징 대상자'
          },
          knockbackOnPlayer: {
            en: 'Knockback on ${player}',
            de: 'Rückstoß auf ${player}',
            fr: 'Poussée sur ${player}',
            ja: '${player}にノックバック',
            cn: '击退点名${player}',
            ko: '"${player}" 넉백징'
          },
          lookTowardsBoss: {
            en: 'Look Towards Boss',
            de: 'Anschauen Boss',
            fr: 'Regardez le boss',
            ja: 'ボスを見る',
            cn: '面向Boss',
            ko: '쳐다보기'
          },
          lookAway: {
            en: 'Look Away',
            de: 'Wegschauen',
            fr: 'Regardez ailleurs',
            ja: 'ボスを見ない',
            cn: '背对Boss',
            ko: '뒤돌기'
          },
          lookAwayFromPlayer: {
            en: 'Look Away from ${player}',
            de: 'Schau weg von ${player}',
            fr: 'Ne regardez pas ${player}',
            ja: '${player}を見ない',
            cn: '背对${player}',
            ko: '${player}에게서 뒤돌기'
          },
          lookAwayFromTarget: {
            en: 'Look Away from ${name}',
            de: 'Schau weg von ${name}',
            fr: 'Ne regardez pas ${name}',
            ja: '${name}を見ない',
            cn: '背对${name}',
            ko: '${name}에게서 뒤돌기'
          },
          getBehind: {
            en: 'Get Behind',
            de: 'Hinter ihn',
            fr: 'Passez derrière',
            ja: '背面へ',
            cn: '去背后',
            ko: '보스 뒤로'
          },
          goFrontOrSides: {
            en: 'Go Front / Sides',
            de: 'Gehe nach Vorne/ zu den Seiten',
            fr: 'Allez Devant / Côtés',
            ja: '前／横へ',
            cn: '去前侧方',
            ko: '보스 후방 피하기'
          },
          goFront: {
            en: 'Go Front',
            de: 'Geh nach vorn',
            fr: 'Allez Devant',
            ja: '前へ',
            cn: '去前面',
            ko: '앞으로'
          },
          // getUnder is used when you have to get into the bosses hitbox
          getUnder: {
            en: 'Get Under',
            de: 'Unter ihn',
            fr: 'En dessous',
            ja: 'ボスに貼り付く',
            cn: '去脚下',
            ko: '보스 아래로'
          },
          // in is more like "get close but maybe even melee range is fine"
          in: {
            en: 'In',
            de: 'Rein',
            fr: 'Intérieur',
            ja: '中へ',
            cn: '靠近',
            ko: '안으로'
          },
          // out means get far away
          out: {
            en: 'Out',
            de: 'Raus',
            fr: 'Extérieur',
            ja: '外へ',
            cn: '远离',
            ko: '밖으로'
          },
          outOfMelee: {
            en: 'Out of melee',
            de: 'Raus aus Nahkampf',
            fr: 'Sortez de la mêlée',
            ja: '近接の範囲から離れる',
            cn: '离开近战距离',
            ko: '근접범위 밖으로'
          },
          // be just outside the boss's target circle
          outOfHitbox: {
            en: 'Out of hitbox',
            de: 'Raus aus der Hitbox',
            fr: 'Extérieur de la hitbox',
            cn: '离开目标圈',
            ko: '히트박스 밖으로'
          },
          inThenOut: {
            en: 'In => out',
            de: 'Rein, dann raus',
            fr: 'Intérieur, puis extérieur',
            ja: '中 => 外',
            cn: '先靠近，再远离',
            ko: '안으로 => 밖으로'
          },
          outThenIn: {
            en: 'Out => in',
            de: 'Raus, dann rein',
            fr: 'Extérieur, puis intérieur',
            ja: '外 => 中',
            cn: '先远离，再靠近',
            ko: '밖으로 => 안으로'
          },
          backThenFront: {
            en: 'Back => Front',
            de: 'Nach Hinten, danach nach Vorne',
            fr: 'Derrière puis devant',
            ja: '後ろ => 前',
            cn: '后 => 前',
            ko: '뒤로 => 앞으로'
          },
          frontThenBack: {
            en: 'Front => Back',
            de: 'Nach Vorne, danach nach Hinten',
            fr: 'Devant puis derrière',
            ja: '前 => 後ろ',
            cn: '前 => 后',
            ko: '앞으로 => 뒤로'
          },
          goIntoMiddle: {
            en: 'Get Middle',
            de: 'in die Mitte gehen',
            fr: 'Allez au milieu',
            ja: '中へ',
            cn: '去中间',
            ko: '중앙으로'
          },
          front: {
            en: 'Front',
            de: 'Vorne',
            fr: 'Devant',
            ja: '前',
            cn: '前',
            ko: '앞'
          },
          back: {
            en: 'Back',
            de: 'Hinten',
            fr: 'Derrière',
            ja: '後ろ',
            cn: '后',
            ko: '뒤'
          },
          right: {
            en: 'Right',
            de: 'Rechts',
            fr: 'À droite',
            ja: '右へ',
            cn: '右',
            ko: '오른쪽'
          },
          left: {
            en: 'Left',
            de: 'Links',
            fr: 'À gauche',
            ja: '左へ',
            cn: '左',
            ko: '왼쪽'
          },
          getLeftAndWest: {
            en: '<= Get Left/West',
            de: '<= Nach Links/Westen',
            fr: '<= Allez à Gauche/Ouest',
            ja: '<= 左/西へ',
            cn: '<= 去左半场',
            ko: '<= 왼쪽/서쪽'
          },
          getRightAndEast: {
            en: 'Get Right/East =>',
            de: 'Nach Rechts/Osten =>',
            fr: 'Allez à Droite/Est =>',
            ja: '右/東へ =>',
            cn: '去右半场 =>',
            ko: '오른쪽/동쪽 =>'
          },
          leftThenRight: {
            en: 'Left => Right',
            de: 'Links => Rechts',
            fr: 'À gauche => À droite',
            ja: '左 => 右',
            cn: '左 => 右',
            ko: '왼쪽 => 오른쪽'
          },
          rightThenLeft: {
            en: 'Right => Left',
            de: 'Rechts => Links',
            fr: 'À droite => À gauche',
            ja: '右 => 左',
            cn: '右 => 左',
            ko: '오른쪽 => 왼쪽'
          },
          goFrontBack: {
            en: 'Go Front/Back',
            de: 'Geh nach Vorne/Hinten',
            fr: 'Allez Devant/Derrière',
            ja: '縦へ',
            cn: '去前后',
            ko: '앞/뒤로'
          },
          sides: {
            en: 'Sides',
            de: 'Seiten',
            fr: 'Côtés',
            ja: '横へ',
            cn: '去两侧',
            ko: '양옆으로'
          },
          middle: {
            en: 'Middle',
            de: 'Mitte',
            fr: 'Milieu',
            ja: '中へ',
            cn: '中间',
            ko: '중앙'
          },
          clockwise: {
            en: 'Clockwise',
            de: 'Im Uhrzeigersinn',
            fr: 'Sens horaire',
            ja: '時針回り',
            cn: '顺时针',
            ko: '시계방향'
          },
          counterclockwise: {
            en: 'Counter-clock',
            de: 'Gegen den Uhrzeigersinn',
            fr: 'Anti-horaire',
            ja: '反時針回り',
            cn: '逆时针',
            ko: '반시계방향'
          },
          // killAdds is used for adds that will always be available
          killAdds: {
            en: 'Kill adds',
            de: 'Adds besiegen',
            fr: 'Tuez les adds',
            ja: '雑魚から倒して',
            cn: '击杀小怪',
            ko: '쫄 잡기'
          },
          // killExtraAdd is used for adds that appear if a mechanic was not played correctly
          killExtraAdd: {
            en: 'Kill Extra Add',
            de: 'Add besiegen',
            fr: 'Tuez l\'add',
            ja: '雑魚から倒して',
            cn: '击杀小怪',
            ko: '쫄 잡기'
          },
          awayFromFront: {
            en: 'Away From Front',
            de: 'Weg von Vorne',
            fr: 'Éloignez-vous du devant',
            ja: '前方から離れる',
            cn: '远离正面',
            ko: '보스 전방 피하기'
          },
          sleepTarget: {
            en: 'Sleep ${name}',
            de: 'Schlaf auf ${name}',
            fr: 'Sommeil sur ${name}',
            ja: '${name} にスリプル',
            cn: '催眠 ${name}',
            ko: '${name} 슬리플'
          },
          stunTarget: {
            en: 'Stun ${name}',
            de: 'Betäubung auf ${name}',
            fr: 'Étourdissez ${name}',
            ja: '${name} にスタン',
            cn: '眩晕 ${name}',
            ko: '${name}기절'
          },
          interruptTarget: {
            en: 'interrupt ${name}',
            de: 'unterbreche ${name}',
            fr: 'Interrompez ${name}',
            ja: '${name} に沈黙',
            cn: '打断${name}',
            ko: '${name}기술 시전 끊기'
          },
          preyOnYou: {
            en: 'Prey on YOU',
            de: 'Marker auf DIR',
            fr: 'Marquage sur VOUS',
            ja: '自分にマーキング',
            cn: '猎物点名',
            ko: '홍옥징 대상자'
          },
          preyOnPlayer: {
            en: 'Prey on ${player}',
            de: 'Marker auf ${player}',
            fr: 'Marquage sur ${player}',
            ja: '${player}にマーキング',
            cn: '${player} 的猎物点名',
            ko: '"${player}" 홍옥징'
          },
          awayFromGroup: {
            en: 'Away from Group',
            de: 'Weg von der Gruppe',
            fr: 'Éloignez-vous du groupe',
            ja: '外へ',
            cn: '远离人群',
            ko: '다른 사람들과 떨어지기'
          },
          awayFromPlayer: {
            en: 'Away from ${player}',
            de: 'Weg von ${player}',
            fr: 'Éloignez-vous de ${player}',
            ja: '${player}から離れる',
            cn: '远离${player}',
            ko: '"${player}"에게서 멀어지기'
          },
          meteorOnYou: {
            en: 'Meteor on YOU',
            de: 'Meteor auf DIR',
            fr: 'Météore sur VOUS',
            ja: '自分にメテオ',
            cn: '陨石点名',
            ko: '나에게 메테오징'
          },
          stopMoving: {
            en: 'Stop Moving!',
            de: 'Bewegung stoppen!',
            fr: 'Ne bougez pas !',
            ja: '移動禁止！',
            cn: '停止移动！',
            ko: '이동 멈추기!'
          },
          stopEverything: {
            en: 'Stop Everything!',
            de: 'Stoppe Alles!',
            fr: 'Arrêtez tout !',
            ja: '行動禁止！',
            cn: '停止行动！',
            ko: '행동 멈추기!'
          },
          moveAway: {
            // move away to dodge aoes
            en: 'Move!',
            de: 'Bewegen!',
            fr: 'Bougez !',
            ja: '避けて！',
            cn: '离开原地！',
            ko: '이동하기!'
          },
          moveAround: {
            // move around (e.g. jumping) to avoid being frozen
            en: 'Move!',
            de: 'Bewegen!',
            fr: 'Bougez !',
            ja: '動く！',
            cn: '保持运动！',
            ko: '움직이기!'
          },
          breakChains: {
            en: 'Break chains',
            de: 'Kette zerbrechen',
            fr: 'Brisez les chaines',
            ja: '線を切る',
            cn: '拉断连线',
            ko: '선 끊기'
          },
          moveChainsTogether: {
            en: 'Move chains together',
            de: 'Ketten zusammen bewegen',
            fr: 'Bougez les chaines ensemble',
            ja: '線同士で一緒に移動',
            cn: '连线一起移动',
            ko: '선 붙어서 같이 움직이기'
          },
          earthshakerOnYou: {
            en: 'Earth Shaker on YOU',
            de: 'Erdstoß auf DIR',
            fr: 'Marque de terre sur VOUS',
            ja: '自分にアースシェイカー',
            cn: '大地摇动点名',
            ko: '어스징 대상자'
          },
          wakeUp: {
            en: 'WAKE UP',
            de: 'AUFWACHEN',
            fr: 'RÉVEILLE-TOI',
            ja: '目を覚まして！',
            cn: '醒醒！动一动！！',
            ko: '일어나세요!'
          },
          closeTethersWithPlayer: {
            en: 'Close Tethers (${player})',
            de: 'Nahe Verbindungen (${player})',
            fr: 'Liens proches avec (${player})',
            ja: '${player}に近づく',
            cn: '近线 (${player})',
            ko: '상대와 가까이 붙기 (${player})'
          },
          farTethersWithPlayer: {
            en: 'Far Tethers (${player})',
            de: 'Entfernte Verbindungen (${player})',
            fr: 'Liens éloignés avec (${player})',
            ja: ' (${player})から離れる',
            cn: '远线 (${player})',
            ko: '상대와 떨어지기 (${player})'
          },
          getTowers: {
            en: 'Get Towers',
            de: 'Türme nehmen',
            fr: 'Allez dans les tours',
            ja: '塔を踏む',
            cn: '踩塔',
            ko: '기둥 들어가기'
          },
          unknown: {
            en: '???',
            de: '???',
            fr: '???',
            ja: '???',
            cn: '???',
            ko: '???'
          },
          cardinals: {
            en: 'Cardinals',
            de: 'Kardinal',
            fr: 'Cardinaux',
            ja: '十字回避',
            cn: '去正点',
            ko: '십자방향으로'
          },
          intercards: {
            en: 'Intercards',
            de: 'Interkardinal',
            fr: 'Intercardinal',
            ja: '斜めへ',
            cn: '去斜角',
            ko: '대각선 쪽으로'
          },
          north: {
            en: 'North',
            de: 'Norden',
            fr: 'Nord',
            ja: '北',
            cn: '上',
            ko: '북쪽'
          },
          south: {
            en: 'South',
            de: 'Süden',
            fr: 'Sud',
            ja: '南',
            cn: '下',
            ko: '남쪽'
          },
          east: {
            en: 'East',
            de: 'Osten',
            fr: 'Est',
            ja: '東',
            cn: '右',
            ko: '동쪽'
          },
          west: {
            en: 'West',
            de: 'Westen',
            fr: 'Ouest',
            ja: '西',
            cn: '左',
            ko: '서쪽'
          },
          northwest: {
            en: 'Northwest',
            de: 'Nordwesten',
            fr: 'Nord-Ouest',
            ja: '北西',
            cn: '左上',
            ko: '북서쪽'
          },
          northeast: {
            en: 'Northeast',
            de: 'Nordosten',
            fr: 'Nord-Est',
            ja: '北東',
            cn: '右上',
            ko: '북동쪽'
          },
          southwest: {
            en: 'Southwest',
            de: 'Südwesten',
            fr: 'Sud-Ouest',
            ja: '南西',
            cn: '左下',
            ko: '남서쪽'
          },
          southeast: {
            en: 'Southeast',
            de: 'Südosten',
            fr: 'Sud-Est',
            ja: '南東',
            cn: '右下',
            ko: '남동쪽'
          },
          dirN: {
            en: 'N',
            de: 'N',
            fr: 'N',
            ja: '北',
            cn: '上',
            ko: '북'
          },
          dirS: {
            en: 'S',
            de: 'S',
            fr: 'S',
            ja: '南',
            cn: '下',
            ko: '남'
          },
          dirE: {
            en: 'E',
            de: 'O',
            fr: 'E',
            ja: '東',
            cn: '右',
            ko: '동'
          },
          dirW: {
            en: 'W',
            de: 'W',
            fr: 'O',
            ja: '西',
            cn: '左',
            ko: '서'
          },
          dirNW: {
            en: 'NW',
            de: 'NW',
            fr: 'NO',
            ja: '北西',
            cn: '左上',
            ko: '북서'
          },
          dirNE: {
            en: 'NE',
            de: 'NO',
            fr: 'NE',
            ja: '北東',
            cn: '右上',
            ko: '북동'
          },
          dirSW: {
            en: 'SW',
            de: 'SW',
            fr: 'SO',
            ja: '南西',
            cn: '左下',
            ko: '남서'
          },
          dirSE: {
            en: 'SE',
            de: 'SO',
            fr: 'SE',
            ja: '南東',
            cn: '右下',
            ko: '남동'
          },
          dirNNE: {
            en: 'NNE',
            de: 'NNO',
            fr: 'NNE',
            ja: '北北東(1時)',
            cn: '上偏右',
            ko: '1시'
          },
          dirENE: {
            en: 'ENE',
            de: 'ONO',
            fr: 'ENE',
            ja: '東北東(2時)',
            cn: '右偏上',
            ko: '2시'
          },
          dirESE: {
            en: 'ESE',
            de: 'OSO',
            fr: 'ESE',
            ja: '東南東(4時)',
            cn: '右偏下',
            ko: '4시'
          },
          dirSSE: {
            en: 'SSE',
            de: 'SSO',
            fr: 'SSE',
            ja: '南南東(5時)',
            cn: '下偏右',
            ko: '5시'
          },
          dirSSW: {
            en: 'SSW',
            de: 'SSW',
            fr: 'SSO',
            ja: '南南西(7時)',
            cn: '下偏左',
            ko: '7시'
          },
          dirWSW: {
            en: 'WSW',
            de: 'WSW',
            fr: 'OSO',
            ja: '西南西(8時)',
            cn: '左偏下',
            ko: '8시'
          },
          dirWNW: {
            en: 'WNW',
            de: 'WNW',
            fr: 'ONO',
            ja: '西北西(10時)',
            cn: '左偏上',
            ko: '10시'
          },
          dirNNW: {
            en: 'NNW',
            de: 'NNW',
            fr: 'NNO',
            ja: '北北西(11時)',
            cn: '上偏左',
            ko: '11시'
          },
          tank: {
            en: 'Tank',
            de: 'Tank',
            fr: 'Tank',
            ja: 'タンク',
            cn: '坦克',
            ko: '탱'
          },
          healer: {
            en: 'Healer',
            de: 'Heiler',
            fr: 'Healer',
            ja: 'ヒーラー',
            cn: '治疗',
            ko: '힐'
          },
          dps: {
            en: 'DPS',
            de: 'DPS',
            fr: 'DPS',
            ja: 'DPS',
            cn: 'DPS',
            ko: '딜러'
          },
          // for sequenced mechanics
          next: {
            en: ' => ',
            de: ' => ',
            fr: ' => ',
            ja: ' => ',
            cn: ' => ',
            ko: ' => '
          },
          // for combo mechanics/names
          and: {
            en: ' + ',
            de: ' + ',
            fr: ' + ',
            cn: ' + ',
            ko: ' + '
          },
          // for either/or directions or mechanics
          or: {
            en: ' / ',
            de: ' / ',
            fr: ' / ',
            cn: ' / ',
            ko: ' / '
          },
          // Literal numbers.
          num0: numberToOutputString(0),
          num1: numberToOutputString(1),
          num2: numberToOutputString(2),
          num3: numberToOutputString(3),
          num4: numberToOutputString(4),
          num5: numberToOutputString(5),
          num6: numberToOutputString(6),
          num7: numberToOutputString(7),
          num8: numberToOutputString(8),
          num9: numberToOutputString(9)
        });

        /***/
      }),

/***/ 959:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PS": () => (/* binding */ addOverlayListener),
/* harmony export */   "ae": () => (/* binding */ callOverlayHandler)
        /* harmony export */
      });
        /* unused harmony exports dispatchOverlayEvent, removeOverlayListener, setOverlayHandlerOverride, init */
        // OverlayPlugin API setup

        let inited = false;
        let wsUrl = null;
        let ws = null;
        let queue = [];
        let rseqCounter = 0;
        const responsePromises = {};
        const subscribers = {};
        const sendMessage = (msg, cb) => {
          if (ws) {
            if (queue) queue.push(msg); else ws.send(JSON.stringify(msg));
          } else {
            if (queue) queue.push([msg, cb]); else window.OverlayPluginApi.callHandler(JSON.stringify(msg), cb);
          }
        };
        const processEvent = msg => {
          init();
          const subs = subscribers[msg.type];
          subs?.forEach(sub => {
            try {
              sub(msg);
            } catch (e) {
              console.error(e);
            }
          });
        };
        const dispatchOverlayEvent = processEvent;
        const addOverlayListener = (event, cb) => {
          init();
          if (!subscribers[event]) {
            subscribers[event] = [];
            if (!queue) {
              sendMessage({
                call: 'subscribe',
                events: [event]
              });
            }
          }
          subscribers[event]?.push(cb);
        };
        const removeOverlayListener = (event, cb) => {
          init();
          if (subscribers[event]) {
            const list = subscribers[event];
            const pos = list?.indexOf(cb);
            if (pos !== undefined && pos > -1) list?.splice(pos, 1);
          }
        };
        const callOverlayHandlerInternal = (_msg
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
        ) => {
          init();
          const msg = {
            ..._msg,
            rseq: 0
          };
          let p;
          if (ws) {
            msg.rseq = rseqCounter++;
            p = new Promise((resolve, reject) => {
              responsePromises[msg.rseq] = {
                resolve: resolve,
                reject: reject
              };
            });
            sendMessage(msg);
          } else {
            p = new Promise((resolve, reject) => {
              sendMessage(msg, data => {
                if (data === null) {
                  resolve(data);
                  return;
                }
                const parsed = JSON.parse(data);
                if (parsed['$error']) reject(parsed); else resolve(parsed);
              });
            });
          }
          return p;
        };
        const callOverlayHandlerOverrideMap = {};
        const callOverlayHandler = (_msg
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
        ) => {
          init();

          // If this `as` is incorrect, then it will not find an override.
          // TODO: we could also replace this with a type guard.
          const type = _msg.call;
          const callFunc = callOverlayHandlerOverrideMap[type] ?? callOverlayHandlerInternal;

          // The `IOverlayHandler` type guarantees that parameters/return type match
          // one of the overlay handlers.  The OverrideMap also only stores functions
          // that match by the discriminating `call` field, and so any overrides
          // should be correct here.
          // eslint-disable-next-line max-len
          // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument
          return callFunc(_msg);
        };
        const setOverlayHandlerOverride = (type, override) => {
          if (!override) {
            delete callOverlayHandlerOverrideMap[type];
            return;
          }
          callOverlayHandlerOverrideMap[type] = override;
        };
        const init = () => {
          if (inited) return;
          if (typeof window !== 'undefined') {
            wsUrl = new URLSearchParams(window.location.search).get('OVERLAY_WS');
            if (wsUrl !== null) {
              const connectWs = function (wsUrl) {
                ws = new WebSocket(wsUrl);
                ws.addEventListener('error', e => {
                  console.error(e);
                });
                ws.addEventListener('open', () => {
                  console.log('Connected!');
                  const q = queue ?? [];
                  queue = null;
                  sendMessage({
                    call: 'subscribe',
                    events: Object.keys(subscribers)
                  });
                  for (const msg of q) {
                    if (!Array.isArray(msg)) sendMessage(msg);
                  }
                });
                ws.addEventListener('message', _msg => {
                  try {
                    if (typeof _msg.data !== 'string') {
                      console.error('Invalid message data received: ', _msg);
                      return;
                    }
                    const msg = JSON.parse(_msg.data);
                    const promiseFuncs = msg?.rseq !== undefined ? responsePromises[msg.rseq] : undefined;
                    if (msg.rseq !== undefined && promiseFuncs) {
                      if (msg['$error']) promiseFuncs.reject(msg); else promiseFuncs.resolve(msg);
                      delete responsePromises[msg.rseq];
                    } else {
                      processEvent(msg);
                    }
                  } catch (e) {
                    console.error('Invalid message received: ', _msg);
                    return;
                  }
                });
                ws.addEventListener('close', () => {
                  queue = null;
                  console.log('Trying to reconnect...');
                  // Don't spam the server with retries.
                  window.setTimeout(() => {
                    connectWs(wsUrl);
                  }, 300);
                });
              };
              connectWs(wsUrl);
            } else {
              const waitForApi = function () {
                if (!window.OverlayPluginApi?.ready) {
                  window.setTimeout(waitForApi, 300);
                  return;
                }
                const q = queue ?? [];
                queue = null;
                window.__OverlayCallback = processEvent;
                sendMessage({
                  call: 'subscribe',
                  events: Object.keys(subscribers)
                });
                for (const item of q) {
                  if (Array.isArray(item)) sendMessage(item[0], item[1]);
                }
              };
              waitForApi();
            }

            // Here the OverlayPlugin API is registered to the window object,
            // but this is mainly for backwards compatibility. For cactbot's built-in files,
            // it is recommended to use the various functions exported in resources/overlay_plugin_api.ts.

            /* eslint-disable deprecation/deprecation */
            window.addOverlayListener = addOverlayListener;
            window.removeOverlayListener = removeOverlayListener;
            window.callOverlayHandler = callOverlayHandler;
            window.dispatchOverlayEvent = dispatchOverlayEvent;
            /* eslint-enable deprecation/deprecation */
          }

          inited = true;
        };

        /***/
      }),

/***/ 402:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ Regexes)
        /* harmony export */
      });
/* unused harmony export buildRegex */
/* harmony import */ var _netlog_defs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21);
/* harmony import */ var _not_reached__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62);


        const separator = ':';
        const matchDefault = '[^:]*';
        const matchWithColonsDefault = '(?:[^:]|: )*?';
        const fieldsWithPotentialColons = ['effect', 'ability'];
        const defaultParams = (type, version, include) => {
          const logType = _netlog_defs__WEBPACK_IMPORTED_MODULE_0__/* .logDefinitionsVersions */.W[version][type];
          if (include === undefined) {
            include = Object.keys(logType.fields);
            if ('repeatingFields' in logType) {
              include.push(logType.repeatingFields.label);
            }
          }
          const params = {};
          const firstOptionalField = logType.firstOptionalField;
          for (const [prop, index] of Object.entries(logType.fields)) {
            if (!include.includes(prop)) continue;
            const param = {
              field: prop,
              optional: firstOptionalField !== undefined && index >= firstOptionalField
            };
            if (prop === 'type') param.value = logType.type;
            params[index] = param;
          }
          if ('repeatingFields' in logType && include.includes(logType.repeatingFields.label)) {
            params[logType.repeatingFields.startingIndex] = {
              field: logType.repeatingFields.label,
              optional: firstOptionalField !== undefined && logType.repeatingFields.startingIndex >= firstOptionalField,
              repeating: true,
              repeatingKeys: [...logType.repeatingFields.names],
              sortKeys: logType.repeatingFields.sortKeys,
              primaryKey: logType.repeatingFields.primaryKey,
              possibleKeys: [...logType.repeatingFields.possibleKeys]
            };
          }
          return params;
        };
        const isRepeatingField = (repeating, value) => {
          if (repeating !== true) return false;
          // Allow excluding the field to match for extraction
          if (value === undefined) return true;
          if (!Array.isArray(value)) return false;
          for (const e of value) {
            if (typeof e !== 'object') return false;
          }
          return true;
        };
        const parseHelper = (params, defKey, fields) => {
          params = params ?? {};
          const validFields = [];
          for (const index in fields) {
            const field = fields[index];
            if (field) validFields.push(field.field);
          }
          Regexes.validateParams(params, defKey, ['capture', ...validFields]);

          // Find the last key we care about, so we can shorten the regex if needed.
          const capture = Regexes.trueIfUndefined(params.capture);
          const fieldKeys = Object.keys(fields).sort((a, b) => parseInt(a) - parseInt(b));
          let maxKeyStr;
          if (capture) {
            const keys = [];
            for (const key in fields) keys.push(key);
            let tmpKey = keys.pop();
            if (tmpKey === undefined) {
              maxKeyStr = fieldKeys[fieldKeys.length - 1] ?? '0';
            } else {
              while (fields[tmpKey]?.optional && !((fields[tmpKey]?.field ?? '') in params)) tmpKey = keys.pop();
              maxKeyStr = tmpKey ?? '0';
            }
          } else {
            maxKeyStr = '0';
            for (const key in fields) {
              const value = fields[key] ?? {};
              if (typeof value !== 'object') continue;
              const fieldName = fields[key]?.field;
              if (fieldName !== undefined && fieldName in params) maxKeyStr = key;
            }
          }
          const maxKey = parseInt(maxKeyStr);

          // Special case for Ability to handle aoe and non-aoe.
          const abilityMessageType = `(?:${_netlog_defs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].Ability.messageType */.Z.Ability.messageType}|${_netlog_defs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].NetworkAOEAbility.messageType */.Z.NetworkAOEAbility.messageType})`;
          const abilityHexCode = '(?:15|16)';

          // Build the regex from the fields.
          const prefix = defKey !== 'Ability' ? _netlog_defs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */.Z[defKey].messageType : abilityMessageType;

          // Hex codes are a minimum of two characters.  Abilities are special because
          // they need to support both 0x15 and 0x16.
          const typeAsHex = parseInt(_netlog_defs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */.Z[defKey].type).toString(16).toUpperCase();
          const defaultHexCode = typeAsHex.length < 2 ? `00${typeAsHex}`.slice(-2) : typeAsHex;
          const hexCode = defKey !== 'Ability' ? defaultHexCode : abilityHexCode;
          let str = '';
          if (capture) str += `(?<timestamp>\\y{Timestamp}) ${prefix} (?<type>${hexCode})`; else str += `\\y{Timestamp} ${prefix} ${hexCode}`;
          let lastKey = 1;
          for (const keyStr in fields) {
            const parseField = fields[keyStr];
            if (parseField === undefined) continue;
            const fieldName = parseField.field;

            // Regex handles these manually above in the `str` initialization.
            if (fieldName === 'timestamp' || fieldName === 'type') continue;
            const key = parseInt(keyStr);
            // Fill in blanks.
            const missingFields = key - lastKey - 1;
            if (missingFields === 1) str += `${separator}${matchDefault}`; else if (missingFields > 1) str += `(?:${separator}${matchDefault}){${missingFields}}`;
            lastKey = key;
            str += separator;
            if (typeof parseField !== 'object') throw new Error(`${defKey}: invalid value: ${JSON.stringify(parseField)}`);
            const fieldDefault = fieldName !== undefined && fieldsWithPotentialColons.includes(fieldName) ? matchWithColonsDefault : matchDefault;
            const defaultFieldValue = parseField.value?.toString() ?? fieldDefault;
            const fieldValue = params[fieldName];
            if (isRepeatingField(fields[keyStr]?.repeating, fieldValue)) {
              const repeatingFieldsSeparator = '(?:$|:)';
              let repeatingArray = fieldValue;
              const sortKeys = fields[keyStr]?.sortKeys;
              const primaryKey = fields[keyStr]?.primaryKey;
              const possibleKeys = fields[keyStr]?.possibleKeys;

              // primaryKey is required if this is a repeating field per typedef in netlog_defs.ts
              // Same with possibleKeys
              if (primaryKey === undefined || possibleKeys === undefined) throw new _not_reached__WEBPACK_IMPORTED_MODULE_1__/* .UnreachableCode */.$();

              // Allow sorting if needed
              if (sortKeys) {
                // Also sort our valid keys list
                possibleKeys.sort((left, right) => left.toLowerCase().localeCompare(right.toLowerCase()));
                if (repeatingArray !== undefined) {
                  repeatingArray = [...repeatingArray].sort((left, right) => {
                    // We check the validity of left/right because they're user-supplied
                    if (typeof left !== 'object' || left[primaryKey] === undefined) {
                      console.warn('Invalid argument passed to trigger:', left);
                      return 0;
                    }
                    const leftValue = left[primaryKey];
                    if (typeof leftValue !== 'string' || !possibleKeys?.includes(leftValue)) {
                      console.warn('Invalid argument passed to trigger:', left);
                      return 0;
                    }
                    if (typeof right !== 'object' || right[primaryKey] === undefined) {
                      console.warn('Invalid argument passed to trigger:', right);
                      return 0;
                    }
                    const rightValue = right[primaryKey];
                    if (typeof rightValue !== 'string' || !possibleKeys?.includes(rightValue)) {
                      console.warn('Invalid argument passed to trigger:', right);
                      return 0;
                    }
                    return leftValue.toLowerCase().localeCompare(rightValue.toLowerCase());
                  });
                }
              }
              const anonReps = repeatingArray;
              // Loop over our possible keys
              // Build a regex that can match any possible key with required values substituted in
              possibleKeys.forEach(possibleKey => {
                const rep = anonReps?.find(rep => primaryKey in rep && rep[primaryKey] === possibleKey);
                let fieldRegex = '';
                // Rather than looping over the keys defined on the object,
                // loop over the base type def's keys. This enforces the correct order.
                fields[keyStr]?.repeatingKeys?.forEach(key => {
                  let val = rep?.[key];
                  if (rep === undefined || !(key in rep)) {
                    // If we don't have a value for this key
                    // insert a placeholder, unless it's the primary key
                    if (key === primaryKey) val = possibleKey; else val = matchDefault;
                  }
                  if (typeof val !== 'string') {
                    if (!Array.isArray(val)) val = matchDefault; else if (val.length < 1) val = matchDefault; else if (val.some(v => typeof v !== 'string')) val = matchDefault;
                  }
                  fieldRegex += Regexes.maybeCapture(key === primaryKey ? false : capture,
                    // All capturing groups are `fieldName` + `possibleKey`, e.g. `pairIsCasting1`
                    fieldName + possibleKey, val, defaultFieldValue) + repeatingFieldsSeparator;
                });
                if (fieldRegex.length > 0) {
                  str += `(?:${fieldRegex})${rep !== undefined ? '' : '?'}`;
                }
              });
            } else if (fields[keyStr]?.repeating) {
              // If this is a repeating field but the actual value is empty or otherwise invalid,
              // don't process further. We can't use `continue` in the above block because that
              // would skip the early-out break at the end of the loop.
            } else {
              if (fieldName !== undefined) {
                str += Regexes.maybeCapture(
                  // more accurate type instead of `as` cast
                  // maybe this function needs a refactoring
                  capture, fieldName, fieldValue, defaultFieldValue);
              } else {
                // FIXME: handle lint error here
                // ref: https://github.com/OverlayPlugin/cactbot/pull/274#discussion_r1692439720
                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands
                str += fieldValue;
              }
            }

            // Stop if we're not capturing and don't care about future fields.
            if (key >= maxKey) break;
          }
          str += '(?:$|:)';
          return Regexes.parse(str);
        };
        const buildRegex = (type, params) => {
          return parseHelper(params, type, defaultParams(type, Regexes.logVersion));
        };
        class Regexes {
          static logVersion = 'latest';

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-20-0x14-networkstartscasting
           */
          static startsUsing(params) {
            return buildRegex('StartsUsing', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-21-0x15-networkability
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-22-0x16-networkaoeability
           */
          static ability(params) {
            return buildRegex('Ability', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-21-0x15-networkability
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-22-0x16-networkaoeability
           *
           * @deprecated Use `ability` instead
           */
          static abilityFull(params) {
            return this.ability(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-27-0x1b-networktargeticon-head-marker
           */
          static headMarker(params) {
            return buildRegex('HeadMarker', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-03-0x03-addcombatant
           */
          static addedCombatant(params) {
            return buildRegex('AddedCombatant', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-03-0x03-addcombatant
           */
          static addedCombatantFull(params) {
            return this.addedCombatant(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-04-0x04-removecombatant
           */
          static removingCombatant(params) {
            return buildRegex('RemovedCombatant', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-26-0x1a-networkbuff
           */
          static gainsEffect(params) {
            return buildRegex('GainsEffect', params);
          }

          /**
           * Prefer gainsEffect over this function unless you really need extra data.
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-38-0x26-networkstatuseffects
           */
          static statusEffectExplicit(params) {
            return buildRegex('StatusEffect', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-30-0x1e-networkbuffremove
           */
          static losesEffect(params) {
            return buildRegex('LosesEffect', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-35-0x23-networktether
           */
          static tether(params) {
            return buildRegex('Tether', params);
          }

          /**
           * 'target' was defeated by 'source'
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-25-0x19-networkdeath
           */
          static wasDefeated(params) {
            return buildRegex('WasDefeated', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-24-0x18-networkdot
           */
          static networkDoT(params) {
            return buildRegex('NetworkDoT', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static echo(params) {
            if (typeof params === 'undefined') params = {};
            Regexes.validateParams(params, 'echo', ['type', 'timestamp', 'code', 'name', 'line', 'capture']);
            params.code = '0038';
            return Regexes.gameLog(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static dialog(params) {
            if (typeof params === 'undefined') params = {};
            Regexes.validateParams(params, 'dialog', ['type', 'timestamp', 'code', 'name', 'line', 'capture']);
            params.code = '0044';
            return Regexes.gameLog(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static message(params) {
            if (typeof params === 'undefined') params = {};
            Regexes.validateParams(params, 'message', ['type', 'timestamp', 'code', 'name', 'line', 'capture']);
            params.code = '0839';
            return Regexes.gameLog(params);
          }

          /**
           * fields: code, name, line, capture
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static gameLog(params) {
            return buildRegex('GameLog', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-00-0x00-logline
           */
          static gameNameLog(params) {
            // Backwards compatability.
            return Regexes.gameLog(params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-12-0x0c-playerstats
           */
          static statChange(params) {
            return buildRegex('PlayerStats', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-01-0x01-changezone
           */
          static changeZone(params) {
            return buildRegex('ChangeZone', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-33-0x21-network6d-actor-control
           */
          static network6d(params) {
            return buildRegex('ActorControl', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-34-0x22-networknametoggle
           */
          static nameToggle(params) {
            return buildRegex('NameToggle', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-40-0x28-map
           */
          static map(params) {
            return buildRegex('Map', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-41-0x29-systemlogmessage
           */
          static systemLogMessage(params) {
            return buildRegex('SystemLogMessage', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-257-0x101-mapeffect
           */
          static mapEffect(params) {
            return buildRegex('MapEffect', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-258-0x102-fatedirector
           */
          static fateDirector(params) {
            return buildRegex('FateDirector', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-259-0x103-cedirector
           */
          static ceDirector(params) {
            return buildRegex('CEDirector', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-260-0x104-incombat
           */
          static inCombat(params) {
            return buildRegex('InCombat', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-261-0x105-combatantmemory
           */
          static combatantMemory(params) {
            return buildRegex('CombatantMemory', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-263-0x107-startsusingextra
           */
          static startsUsingExtra(params) {
            return buildRegex('StartsUsingExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-264-0x108-abilityextra
           */
          static abilityExtra(params) {
            return buildRegex('AbilityExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-265-0x109-contentfindersettings
           */
          static contentFinderSettings(params) {
            return buildRegex('ContentFinderSettings', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-266-0x10a-npcyell
           */
          static npcYell(params) {
            return buildRegex('NpcYell', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-267-0x10b-battletalk2
           */
          static battleTalk2(params) {
            return buildRegex('BattleTalk2', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-268-0x10c-countdown
           */
          static countdown(params) {
            return buildRegex('Countdown', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-269-0x10d-countdowncancel
           */
          static countdownCancel(params) {
            return buildRegex('CountdownCancel', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-270-0x10e-actormove
           */
          static actorMove(params) {
            return buildRegex('ActorMove', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-271-0x10f-actorsetpos
           */
          static actorSetPos(params) {
            return buildRegex('ActorSetPos', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-272-0x110-spawnnpcextra
           */
          static spawnNpcExtra(params) {
            return buildRegex('SpawnNpcExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-273-0x111-actorcontrolextra
           */
          static actorControlExtra(params) {
            return buildRegex('ActorControlExtra', params);
          }

          /**
           * matches: https://github.com/OverlayPlugin/cactbot/blob/main/docs/LogGuide.md#line-274-0x112-actorcontrolselfextra
           */
          static actorControlSelfExtra(params) {
            return buildRegex('ActorControlSelfExtra', params);
          }

          /**
           * Helper function for building named capture group
           */
          static maybeCapture(capture, name, value, defaultValue) {
            if (value === undefined) value = defaultValue ?? matchDefault;
            value = Regexes.anyOf(value);
            return capture ? Regexes.namedCapture(name, value) : value;
          }
          static optional(str) {
            return `(?:${str})?`;
          }

          // Creates a named regex capture group named |name| for the match |value|.
          static namedCapture(name, value) {
            if (name.includes('>')) console.error(`"${name}" contains ">".`);
            if (name.includes('<')) console.error(`"${name}" contains ">".`);
            return `(?<${name}>${value})`;
          }

          /**
           * Convenience for turning multiple args into a unioned regular expression.
           * anyOf(x, y, z) or anyOf([x, y, z]) do the same thing, and return (?:x|y|z).
           * anyOf(x) or anyOf(x) on its own simplifies to just x.
           * args may be strings or RegExp, although any additional markers to RegExp
           * like /insensitive/i are dropped.
           */
          static anyOf(...args) {
            const anyOfArray = array => {
              const [elem] = array;
              if (elem !== undefined && array.length === 1) return `${elem instanceof RegExp ? elem.source : elem}`;
              return `(?:${array.map(elem => elem instanceof RegExp ? elem.source : elem).join('|')})`;
            };
            let array = [];
            const [firstArg] = args;
            if (args.length === 1) {
              if (typeof firstArg === 'string' || firstArg instanceof RegExp) array = [firstArg]; else if (Array.isArray(firstArg)) array = firstArg; else array = [];
            } else {
              // TODO: more accurate type instead of `as` cast
              array = args;
            }
            return anyOfArray(array);
          }
          static parse(regexpString) {
            const kCactbotCategories = {
              Timestamp: '^.{14}',
              NetTimestamp: '.{33}',
              NetField: '(?:[^|]*\\|)',
              LogType: '[0-9A-Fa-f]{2}',
              AbilityCode: '[0-9A-Fa-f]{1,8}',
              ObjectId: '[0-9A-F]{8}',
              // Matches any character name (including empty strings which the FFXIV
              // ACT plugin can generate when unknown).
              Name: '(?:[^\\s:|]+(?: [^\\s:|]+)?|)',
              // Floats can have comma as separator in FFXIV plugin output: https://github.com/ravahn/FFXIV_ACT_Plugin/issues/137
              Float: '-?[0-9]+(?:[.,][0-9]+)?(?:E-?[0-9]+)?'
            };

            // All regexes in cactbot are case insensitive.
            // This avoids headaches as things like `Vice and Vanity` turns into
            // `Vice And Vanity`, especially for French and German.  It appears to
            // have a ~20% regex parsing overhead, but at least they work.
            let modifiers = 'i';
            if (regexpString instanceof RegExp) {
              modifiers += (regexpString.global ? 'g' : '') + (regexpString.multiline ? 'm' : '');
              regexpString = regexpString.source;
            }
            regexpString = regexpString.replace(/\\y\{(.*?)\}/g, (match, group) => {
              return kCactbotCategories[group] || match;
            });
            return new RegExp(regexpString, modifiers);
          }

          // Like Regex.Regexes.parse, but force global flag.
          static parseGlobal(regexpString) {
            const regex = Regexes.parse(regexpString);
            let modifiers = 'gi';
            if (regexpString instanceof RegExp) modifiers += regexpString.multiline ? 'm' : '';
            return new RegExp(regex.source, modifiers);
          }
          static trueIfUndefined(value) {
            if (typeof value === 'undefined') return true;
            return !!value;
          }
          static validateParams(f, funcName, params) {
            if (f === null) return;
            if (typeof f !== 'object') return;
            const keys = Object.keys(f);
            for (const key of keys) {
              if (!params.includes(key)) {
                throw new Error(`${funcName}: invalid parameter '${key}'.  ` + `Valid params: ${JSON.stringify(params)}`);
              }
            }
          }
        }

        /***/
      }),

/***/ 469:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "n3": () => (/* binding */ Responses)
        /* harmony export */
      });
/* unused harmony exports severityList, builtInResponseStr, triggerFunctions, triggerTextOutputFunctions, triggerOutputFunctions, severityMap */
/* harmony import */ var _outputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
        // This is meant to be used in a trigger as such:
        // {
        //   id: 'Some tankbuster',
        //   regex: Regexes.startsUsing({source: 'Ye Olde Bosse', id: '666'}),
        //   condition: Conditions.caresAboutMagical(data),
        //   response: Responses.tankbuster(),
        // },
        //
        // Note: Breaking out the condition like this lets people override it if they
        // always (or never) want to know about it, rather than hiding the logic inside
        // the tankbuster callback with a "is healer" check.
        //
        // If data.role is used, it should be only to differentiate between alert levels,
        // and not whether a message is sent at all.
        //
        // Although this is not true of `response: ` fields on triggers in general,
        // all responses in this file should either return an object or a single
        // function that sets outputStrings and returns an object without doing
        // anything with data or matches.  See `responses_test.js`.


        const severityList = (/* unused pure expression or super */ null && (['info', 'alert', 'alarm']));
        const builtInResponseStr = 'cactbot-builtin-response';

        // All valid trigger fields.
        const triggerFunctions = (/* unused pure expression or super */ null && (['alarmText', 'alertText', 'condition', 'delaySeconds', 'disabled', 'durationSeconds', 'id', 'type', 'infoText', 'preRun', 'promise', 'response', 'run', 'sound', 'soundVolume', 'suppressSeconds', 'tts', 'outputStrings']));

        // Trigger fields that can produce text output.
        const triggerTextOutputFunctions = ['alarmText', 'alertText', 'infoText', 'response', 'tts'];

        // If a trigger has any of these, then it has a visible/audio effect.
        const triggerOutputFunctions = [...triggerTextOutputFunctions, 'sound'];
        const severityMap = {
          'info': 'infoText',
          'alert': 'alertText',
          'alarm': 'alarmText'
        };
        const getText = sev => {
          if (!(sev in severityMap)) throw new Error(`Invalid severity: ${sev}.`);
          return severityMap[sev];
        };
        const defaultInfoText = sev => {
          if (!sev) return 'infoText';
          return getText(sev);
        };
        const defaultAlertText = sev => {
          if (!sev) return 'alertText';
          return getText(sev);
        };
        const defaultAlarmText = sev => {
          if (!sev) return 'alarmText';
          return getText(sev);
        };
        const getTarget = matches => {
          // Often tankbusters can be casted by the boss on the boss.
          // Consider this as "not having a target".
          if (matches.target === matches.source) return;
          // In hunts, sometimes there are too many people for the target
          // to have a name.  Treat this as "no target".
          if (matches.target === '') return;
          return matches.target;
        };
        const getSource = matches => {
          return matches?.source;
        };

        // FIXME: make this work for any number of pairs of params
        const combineFuncs = function (text1, func1, text2, func2) {
          const obj = {};
          if (text1 !== text2) {
            obj[text1] = func1;
            obj[text2] = func2;
          } else {
            obj[text1] = (data, matches, output) => {
              return func1(data, matches, output) ?? func2(data, matches, output);
            };
          }
          return obj;
        };
        const isPlayerId = id => {
          return id !== undefined && !id.startsWith('4');
        };

        // For responses that unconditionally return static text.
        const staticResponse = (field, text) => {
          return (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              text: text
            };
            return {
              [field]: (_data, _matches, output) => output.text?.()
            };
          };
        };
        const Responses = {
          tankBuster: (targetSev, otherSev) => {
            const outputStrings = {
              noTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankBuster */.Z.tankBuster,
              busterOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankBusterOnYou */.Z.tankBusterOnYou,
              busterOnTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankBusterOnPlayer */.Z.tankBusterOnPlayer
            };
            const targetFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (target === undefined) {
                if (data.role !== 'tank' && data.role !== 'healer') return;
                return output.noTarget?.();
              }
              if (target === data.me) return output.busterOnYou?.();
            };
            const otherFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (target === undefined) {
                if (data.role === 'tank' || data.role === 'healer') return;
                return output.noTarget?.();
              }
              if (target === data.me) return;
              return output.busterOnTarget?.({
                player: data.party.member(target)
              });
            };
            const combined = combineFuncs(defaultAlertText(targetSev), targetFunc, defaultInfoText(otherSev), otherFunc);
            return (_data, _matches, output) => {
              // cactbot-builtin-response
              output.responseOutputStrings = outputStrings;
              return combined;
            };
          },
          tankBusterSwap: (busterSev, swapSev) => {
            const outputStrings = {
              noTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankBuster */.Z.tankBuster,
              tankSwap: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankSwap */.Z.tankSwap,
              busterOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankBusterOnYou */.Z.tankBusterOnYou,
              busterOnTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankBusterOnPlayer */.Z.tankBusterOnPlayer
            };

            // Note: busterSev and swapSev can be the same priority.
            const tankSwapFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (data.role === 'tank' && target !== data.me) return output.tankSwap?.();
            };
            const busterFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (data.role === 'tank' && target !== data.me) return;
              if (target === data.me) return output.busterOnYou?.();
              if (target === undefined) return output.noTarget?.();
              return output.busterOnTarget?.({
                player: data.party.member(target)
              });
            };
            const combined = combineFuncs(defaultAlarmText(swapSev), tankSwapFunc, defaultAlertText(busterSev), busterFunc);
            return (_data, _matches, output) => {
              // cactbot-builtin-response
              output.responseOutputStrings = outputStrings;
              return combined;
            };
          },
          tankCleave: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              cleaveOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankCleaveOnYou */.Z.tankCleaveOnYou,
              cleaveNoTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].tankCleave */.Z.tankCleave,
              avoidCleave: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].avoidTankCleave */.Z.avoidTankCleave
            };
            return {
              [defaultInfoText(sev)]: (data, matches, output) => {
                const target = getTarget(matches);
                if (target === data.me) return output.cleaveOnYou?.();
                if (data.role === 'tank' || data.job === 'BLU') {
                  // targetless tank cleave
                  // BLU players should always get this generic cleave message.
                  // We have no robust way to determine whether they have tank Mimicry on,
                  // and it's really annoying for a BLU tank to be told to avoid cleaves when they can't.
                  return output.cleaveNoTarget?.();
                }
                return output.avoidCleave?.();
              }
            };
          },
          sharedTankBuster: (targetSev, otherSev) => {
            const outputStrings = {
              sharedTankbusterOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].sharedTankbusterOnYou */.Z.sharedTankbusterOnYou,
              sharedTankbusterOnTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].sharedTankbusterOnPlayer */.Z.sharedTankbusterOnPlayer,
              sharedTankbuster: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].sharedTankbuster */.Z.sharedTankbuster,
              avoidCleave: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].avoidTankCleave */.Z.avoidTankCleave
            };
            const targetFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (target === undefined) {
                if (data.role !== 'tank' && data.role !== 'healer') return;
                return output.sharedTankbuster?.();
              }
              if (target === data.me) return output.sharedTankbusterOnYou?.();
              if (data.role === 'tank' || data.role === 'healer') return output.sharedTankbusterOnTarget?.({
                player: data.party.member(target)
              });
            };
            const otherFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (target === undefined) {
                if (data.role === 'tank' || data.role === 'healer') return;
                return output.avoidCleave?.();
              }
              if (target === data.me || data.role === 'tank' || data.role === 'healer') return;
              return output.avoidCleave?.();
            };
            const combined = combineFuncs(defaultAlertText(targetSev), targetFunc, defaultInfoText(otherSev), otherFunc);
            return (_data, _matches, output) => {
              // cactbot-builtin-response
              output.responseOutputStrings = outputStrings;
              return combined;
            };
          },
          miniBuster: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].miniBuster */.Z.miniBuster),
          aoe: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].aoe */.Z.aoe),
          bigAoe: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].bigAoe */.Z.bigAoe),
          bleedAoe: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].bleedAoe */.Z.bleedAoe),
          spread: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].spread */.Z.spread),
          protean: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].protean */.Z.protean),
          // for stack marker situations.
          stackMarker: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stackMarker */.Z.stackMarker),
          // for getting together without stack marker
          getTogether: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getTogether */.Z.getTogether),
          stackMarkerOn: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              stackOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stackOnYou */.Z.stackOnYou,
              stackOnTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stackOnPlayer */.Z.stackOnPlayer,
              stackMarker: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stackMarker */.Z.stackMarker
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const target = getTarget(matches);
                if (target === data.me) return output.stackOnYou?.();
                if (target === undefined) return output.stackMarker?.();
                return output.stackOnTarget?.({
                  player: data.party.member(target)
                });
              }
            };
          },
          stackMiddle: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stackMiddle */.Z.stackMiddle),
          doritoStack: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].doritoStack */.Z.doritoStack),
          spreadThenStack: sev => {
            return staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].spreadThenStack */.Z.spreadThenStack);
          },
          stackThenSpread: sev => {
            return staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stackThenSpread */.Z.stackThenSpread);
          },
          knockback: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].knockback */.Z.knockback),
          knockbackOn: (targetSev, otherSev) => {
            const outputStrings = {
              knockback: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].knockback */.Z.knockback,
              knockbackOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].knockbackOnYou */.Z.knockbackOnYou,
              knockbackOnTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].knockbackOnPlayer */.Z.knockbackOnPlayer
            };
            const targetFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (target === data.me) return output.knockbackOnYou?.();
            };
            const otherFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (target === undefined) return output.knockback?.();
              if (target !== data.me) return output.knockbackOnTarget?.({
                player: data.party.member(target)
              });
            };
            const combined = combineFuncs(defaultInfoText(targetSev), targetFunc, defaultInfoText(otherSev), otherFunc);
            return (_data, _matches, output) => {
              // cactbot-builtin-response
              output.responseOutputStrings = outputStrings;
              return combined;
            };
          },
          drawIn: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].drawIn */.Z.drawIn),
          lookTowards: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].lookTowardsBoss */.Z.lookTowardsBoss),
          lookAway: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].lookAway */.Z.lookAway),
          lookAwayFromTarget: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              lookAway: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].lookAway */.Z.lookAway,
              lookAwayFrom: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].lookAwayFromTarget */.Z.lookAwayFromTarget
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const target = getTarget(matches);
                if (target === data.me) return;
                if (target === undefined) return output.lookAway?.();
                const name = isPlayerId(matches?.targetId) ? data.party.member(target) : target;
                return output.lookAwayFrom?.({
                  name: name
                });
              }
            };
          },
          lookAwayFromSource: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              lookAwayFrom: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].lookAwayFromTarget */.Z.lookAwayFromTarget
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const source = getSource(matches);
                if (source === data.me) return;
                const name = isPlayerId(matches?.sourceId) ? data.party.member(source) : source;
                return output.lookAwayFrom?.({
                  name: name
                });
              }
            };
          },
          getBehind: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getBehind */.Z.getBehind),
          goFrontOrSides: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].goFrontOrSides */.Z.goFrontOrSides),
          // .getUnder() is used when you have to get into the bosses hitbox
          getUnder: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getUnder */.Z.getUnder),
          // .getIn() is more like "get close but maybe even melee range is fine"
          getIn: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"]["in"] */.Z["in"]),
          // .getOut() means get far away
          getOut: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].out */.Z.out),
          outOfMelee: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].outOfMelee */.Z.outOfMelee),
          getInThenOut: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].inThenOut */.Z.inThenOut),
          getOutThenIn: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].outThenIn */.Z.outThenIn),
          getBackThenFront: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].backThenFront */.Z.backThenFront),
          getFrontThenBack: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].frontThenBack */.Z.frontThenBack),
          goFront: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].goFront */.Z.goFront),
          goMiddle: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].goIntoMiddle */.Z.goIntoMiddle),
          goRight: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].right */.Z.right),
          goLeft: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].left */.Z.left),
          goWest: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getLeftAndWest */.Z.getLeftAndWest),
          goEast: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getRightAndEast */.Z.getRightAndEast),
          goLeftThenRight: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].leftThenRight */.Z.leftThenRight),
          goRightThenLeft: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].rightThenLeft */.Z.rightThenLeft),
          goFrontBack: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].goFrontBack */.Z.goFrontBack),
          goSides: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].sides */.Z.sides),
          // .killAdds() is used for adds that will always be available
          killAdds: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].killAdds */.Z.killAdds),
          // .killExtraAdd() is used for adds that appear if a mechanic was not played correctly
          killExtraAdd: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].killExtraAdd */.Z.killExtraAdd),
          awayFromFront: sev => staticResponse(defaultAlertText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].awayFromFront */.Z.awayFromFront),
          sleep: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              sleep: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].sleepTarget */.Z.sleepTarget
            };
            return {
              [defaultAlertText(sev)]: (_data, matches, output) => {
                const source = getSource(matches);
                return output.sleep?.({
                  name: source
                });
              }
            };
          },
          stunOrInterruptIfPossible: sev => {
            return (_data, _matches, output) => {
              // cactbot-builtin-response
              output.responseOutputStrings = {
                stun: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stunTarget */.Z.stunTarget,
                interrupt: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].interruptTarget */.Z.interruptTarget
              };
              return {
                [defaultAlertText(sev)]: (data, matches, output) => {
                  const source = getSource(matches);
                  if (data.CanSilence()) return output.interrupt?.({
                    name: source
                  }); else if (data.CanStun()) return output.stun?.({
                    name: source
                  });
                }
              };
            };
          },
          stun: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              stun: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stunTarget */.Z.stunTarget
            };
            return {
              [defaultAlertText(sev)]: (_data, matches, output) => {
                const source = getSource(matches);
                return output.stun?.({
                  name: source
                });
              }
            };
          },
          stunIfPossible: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              stun: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stunTarget */.Z.stunTarget
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const source = getSource(matches);
                if (data.CanStun()) return output.stun?.({
                  name: source
                });
              }
            };
          },
          interrupt: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              interrupt: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].interruptTarget */.Z.interruptTarget
            };
            return {
              [defaultAlertText(sev)]: (_data, matches, output) => {
                const source = getSource(matches);
                return output.interrupt?.({
                  name: source
                });
              }
            };
          },
          interruptIfPossible: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              interrupt: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].interruptTarget */.Z.interruptTarget
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const source = getSource(matches);
                if (data.CanSilence()) return output.interrupt?.({
                  name: source
                });
              }
            };
          },
          preyOn: (targetSev, otherSev) => {
            const outputStrings = {
              preyOnYou: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].preyOnYou */.Z.preyOnYou,
              preyOnTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].preyOnPlayer */.Z.preyOnPlayer
            };
            const targetFunc = (data, matches, output) => {
              const target = getTarget(matches);
              if (data.me === target) return output.preyOnYou?.();
            };
            const otherFunc = (data, matches, output) => {
              const target = getTarget(matches);
              const player = target === undefined ? output.unknown?.() : data.party.member(target);
              if (target !== data.me) return output.preyOnTarget?.({
                player: player
              });
            };
            const combined = combineFuncs(defaultAlertText(targetSev), targetFunc, defaultInfoText(otherSev), otherFunc);
            return (_data, _matches, output) => {
              // cactbot-builtin-response
              output.responseOutputStrings = outputStrings;
              return combined;
            };
          },
          awayFrom: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              awayFromGroup: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].awayFromGroup */.Z.awayFromGroup,
              awayFromTarget: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].awayFromPlayer */.Z.awayFromPlayer,
              unknown: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unknown */.Z.unknown
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const target = getTarget(matches);
                if (data.me === target) return output.awayFromGroup?.();
                const player = target === undefined ? output.unknown?.() : data.party.member(target);
                return output.awayFromTarget?.({
                  player: player
                });
              }
            };
          },
          meteorOnYou: sev => staticResponse(defaultAlarmText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].meteorOnYou */.Z.meteorOnYou),
          stopMoving: sev => staticResponse(defaultAlarmText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stopMoving */.Z.stopMoving),
          stopEverything: sev => staticResponse(defaultAlarmText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].stopEverything */.Z.stopEverything),
          // move away to dodge aoes
          moveAway: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].moveAway */.Z.moveAway),
          // move around (e.g. jumping) to avoid being frozen
          moveAround: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].moveAround */.Z.moveAround),
          breakChains: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].breakChains */.Z.breakChains),
          moveChainsTogether: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].moveChainsTogether */.Z.moveChainsTogether),
          earthshaker: sev => (_data, _matches, output) => {
            // cactbot-builtin-response
            output.responseOutputStrings = {
              earthshaker: _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].earthshakerOnYou */.Z.earthshakerOnYou
            };
            return {
              [defaultAlertText(sev)]: (data, matches, output) => {
                const target = getTarget(matches);
                if (target !== data.me) return;
                return output.earthshaker?.();
              }
            };
          },
          wakeUp: sev => staticResponse(defaultAlarmText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].wakeUp */.Z.wakeUp),
          getTowers: sev => staticResponse(defaultInfoText(sev), _outputs__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getTowers */.Z.getTowers)
        };

        // Don't give `Responses` a type in its declaration so that it can be treated as more strict
        // than `ResponsesMap`, but do assert that its type is correct.  This allows callers to know
        // which properties are defined in Responses without having to conditionally check for undefined.
        const responseMapTypeAssertion = Responses;
        // Suppress unused variable warning.
        console.assert(responseMapTypeAssertion);

        /***/
      }),

/***/ 456:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
/* harmony import */ var _languages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(619);
/* harmony import */ var _not_reached__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62);
/* harmony import */ var _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(959);
/* harmony import */ var _conditions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(446);
/* harmony import */ var _content_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(873);
/* harmony import */ var _netregexes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(622);
/* harmony import */ var _regexes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(402);
/* harmony import */ var _responses__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(469);
/* harmony import */ var _outputs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(81);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(509);
/* harmony import */ var _zone_id__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(588);
/* harmony import */ var _zone_info__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(902);
        // TODO: Fix import/order
        /* eslint-disable import/order */





        // TODO:
        // The convention of "import X as _X; const X = _X;" is currently
        // being used as a method to workaround for downstream code
        // that is running via eval(). Because importing statements do not
        // create a variable of the same name, the eval()'d code does not know
        // about the import, and thus throws ReferenceErrors.
        // Used by downstream eval

        const Conditions = _conditions__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */.Z;

        const ContentType = _content_type__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */.Z;

        const NetRegexes = _netregexes__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */.ZP;

        const Regexes = _regexes__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */.Z;

        const Responses = _responses__WEBPACK_IMPORTED_MODULE_7__/* .Responses */.n3;

        const Outputs = _outputs__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */.Z;

        const Util = _util__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */.Z;
        const Directions = _util__WEBPACK_IMPORTED_MODULE_9__/* .Directions */.N;

        const ZoneId = _zone_id__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */.Z;

        const ZoneInfo = _zone_info__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */.Z;

        // Convince TypeScript and eslint that these are used.  TypeScript doesn't have a great way
        // to disable individual rules, so this is safer than disabling all rules.
        console.assert(Conditions);
        console.assert(ContentType);
        console.assert(NetRegexes);
        console.assert(Regexes);
        console.assert(Responses);
        console.assert(Outputs);
        console.assert(Util);
        console.assert(Directions);
        console.assert(ZoneId);
        console.assert(ZoneInfo);

        // TODO: move all of these to config.js?

        class UserConfig {
          optionTemplates = {};
          userFileCallbacks = {};
          savedConfig = {};
          getDefaultBaseOptions() {
            return {
              ParserLanguage: 'en',
              ShortLocale: 'en',
              DisplayLanguage: 'en',
              TextAlertsEnabled: true,
              SoundAlertsEnabled: true,
              SpokenAlertsEnabled: false,
              GroupSpokenAlertsEnabled: false,
              SystemInfo: {
                cactbotVersion: '0.0.0.0',
                overlayPluginVersion: '0.0.0.0',
                ffxivPluginVersion: '0.0.0.0',
                actVersion: '0.0.0.0',
                gameRegion: 'International'
              },
              Debug: false
            };
          }
          evalUserFile(content, options) {
            const Options = options;
            console.assert(Options); // Used by eval.

            // This is the one eval cactbot should ever need, which is for handling user files.
            // Because user files can be located anywhere on disk and there's backwards compat
            // issues, it's unlikely that these will be able to be anything but eval forever.
            //
            /* eslint-disable no-eval */
            eval(content);
            /* eslint-enable no-eval */
          }

          registerOptions(overlayName, optionTemplate, userFileCallback) {
            this.optionTemplates[overlayName] = optionTemplate;
            if (userFileCallback) this.userFileCallbacks[overlayName] = userFileCallback;
          }
          sortUserFiles(keys) {
            // Helper data structure for subdirectories.
            const splitKeyMap = {};
            for (const key of keys) splitKeyMap[key] = key.toUpperCase().split(/[/\\]/);

            // Sort paths as a depth-first case-insensitive alphabetical subdirectory walk, followed by
            // all files sorted case-insensitive alphabetically once a subdir has been processed, e.g.
            //  * a/some.js
            //  * b/subdir1/z/z/z/nested_file.js
            //  * b/subdir1/file.js
            //  * b/subdir2/first.js
            //  * b/subdir2/second.js
            //  * b/some_file.js
            //  * root_file1.js
            //  * root_file2.js
            return keys.sort((keyA, keyB) => {
              const listA = splitKeyMap[keyA];
              const listB = splitKeyMap[keyB];
              if (listA === undefined || listB === undefined) throw new _not_reached__WEBPACK_IMPORTED_MODULE_1__/* .UnreachableCode */.$();
              const maxLen = Math.max(listA.length, listB.length);
              for (let idx = 0; idx < maxLen; ++idx) {
                const entryA = listA[idx];
                const entryB = listB[idx];
                // In practice, there's always at least one entry.
                if (entryA === undefined || entryB === undefined) throw new _not_reached__WEBPACK_IMPORTED_MODULE_1__/* .UnreachableCode */.$();

                // If both subdirectories or both files, then compare names.
                const isLastA = listA.length - 1 === idx;
                const isLastB = listB.length - 1 === idx;
                if (isLastA && isLastB) {
                  // If both last, then this is a filename comparison.

                  // First, compare filename without extension.
                  const fileA = entryA.replace(/\.[^\.]*$/, '');
                  const fileB = entryB.replace(/\.[^\.]*$/, '');
                  const filenameOnlyDiff = fileA.localeCompare(fileB);
                  if (filenameOnlyDiff) return filenameOnlyDiff;

                  // Second, compare including the extension.
                  // Always return something here, see note below.
                  return entryA.localeCompare(entryB);
                } else if (!isLastA && !isLastB) {
                  // If both not last, this is a subdirectory comparison.
                  const diff = entryA.localeCompare(entryB);
                  if (diff) return diff;
                }

                // At this point, if idx is the final for each, we would have returned above.
                // So, check if either a or b is at the final entry in splitKeyMap.
                // If so, then there's a mismatch in number of directories, and we know one
                // the one with a filename should be sorted last.

                if (listA.length - 1 <= idx) {
                  // a has fewer subdirectories, so should be sorted last.
                  return 1;
                }
                if (listB.length - 1 <= idx) {
                  // a has more subdirectories, so should be sorted first.
                  return -1;
                }
              }
              return 0;
            });
          }

          // Given a set of paths, an overlayName, and an extension, return all paths with
          // that extension that have `overlayName` either as their entire filename (no subdir)
          // or are inside a root-level subdirectory named `overlayName`/  The extension should
          // include the period separator, e.g. ".js".  All comparisons are case insensitive.
          filterUserFiles(paths, origOverlayName, origExtension) {
            const extension = origExtension.toLowerCase();
            const overlayName = origOverlayName.toLowerCase();
            return paths.filter(origPath => {
              const path = origPath.toLowerCase();
              if (!path.endsWith(extension)) return false;
              if (path === `${overlayName}${extension}`) return true;
              if (path.startsWith(`${overlayName}/`) || path.startsWith(`${overlayName}\\`)) return true;
              return false;
            });
          }
          getUserConfigLocation(overlayName, options, callback) {
            let currentlyReloading = false;
            const reloadOnce = () => {
              if (currentlyReloading) return;
              currentlyReloading = true;
              window.location.reload();
            };
            (0, _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__/* .addOverlayListener */.PS)('onUserFileChanged', () => {
              reloadOnce();
            });
            (0, _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__/* .addOverlayListener */.PS)('onForceReload', () => {
              reloadOnce();
            });
            this.loadUserFiles(overlayName, options, callback);
          }
          loadUserFiles(overlayName, options, callback, loadCss = true) {
            const readOptions = (0, _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__/* .callOverlayHandler */.ae)({
              call: 'cactbotLoadData',
              overlay: 'options'
            });
            const loadUser = async e => {
              // The basePath isn't using for anything other than cosmetic printing of full paths,
              // so replace any slashes here for uniformity.  In case anybody is using cactbot on
              // Linux (?!?), support any style of slashes elsewhere.
              const basePath = `${e.detail.userLocation.replace(/[/\\]*$/, '')}\\`;
              const localFiles = e.detail.localUserFiles;
              options.SystemInfo = {
                cactbotVersion: e.detail.cactbotVersion,
                overlayPluginVersion: e.detail.overlayPluginVersion,
                ffxivPluginVersion: e.detail.ffxivPluginVersion,
                actVersion: e.detail.actVersion,
                gameRegion: e.detail.gameRegion
              };

              // The plugin auto-detects the language, so set this first.
              // If options files want to override it, they can for testing.

              // Backward compatibility (language is now separated to three types.)
              /* eslint-disable deprecation/deprecation */
              if (e.detail.language) {
                options.ParserLanguage = e.detail.language;
                options.ShortLocale = e.detail.language;
                options.DisplayLanguage = e.detail.language;
              }
              /* eslint-enable deprecation/deprecation */

              // Parser Language
              if (e.detail.parserLanguage) {
                options.ParserLanguage = e.detail.parserLanguage;
                // Backward compatibility, everything "Language" should be changed to "ParserLanguage"
                options.Language = e.detail.parserLanguage;
              }
              // System Language
              if (e.detail.systemLocale) {
                options.SystemLocale = e.detail.systemLocale;
                let shortLocale = e.detail.systemLocale.slice(0, 2);
                if (shortLocale === 'zh') shortLocale = 'cn';
                if ((0, _languages__WEBPACK_IMPORTED_MODULE_0__/* .isLang */.jd)(shortLocale)) options.ShortLocale = shortLocale; else options.ShortLocale = options.ParserLanguage;
              }
              // User's setting Language
              const displayLang = e.detail.displayLanguage;
              if ((0, _languages__WEBPACK_IMPORTED_MODULE_0__/* .isLang */.jd)(displayLang)) options.DisplayLanguage = displayLang; else options.DisplayLanguage = options.ParserLanguage || 'en';

              // TODO: left for now as backwards compatibility with user css.  Remove this later??
              document.documentElement.classList.add(`lang-${options.DisplayLanguage}`);
              document.documentElement.lang = (0, _languages__WEBPACK_IMPORTED_MODULE_0__/* .langToLocale */.Go)(options.DisplayLanguage);
              this.addUnlockText(options.DisplayLanguage);

              // Handle processOptions after default language selection above,
              // but before css below which may load skin files.
              // processOptions needs to be called whether or not there are
              // any userOptions saved, as it sets up the defaults.
              this.savedConfig = (await readOptions)?.data ?? {};
              const template = this.optionTemplates[overlayName];
              if (template !== undefined) {
                const savedConfig = this.savedConfig[overlayName] ?? {};
                this.processOptions(options, options, savedConfig, template.options);

                // For things like raidboss that build extra UI, also give them a chance
                // to handle anything that has been set on that UI.
                if (template.processExtraOptions) template.processExtraOptions(options, savedConfig);
              }

              // If the overlay has a "Debug" setting, set to true via the config tool,
              // then also print out user files that have been loaded.
              const debug = options.Debug !== undefined && options.Debug !== false;
              const printUserFile = debug ? x => console.log(x) : () => {/* noop */ };

              // With user files being arbitrary javascript, and having multiple files
              // in user folders, it's possible for later files to accidentally remove
              // things that previous files have added.  Warn about this, since most
              // users are not programmers.
              const warnOnVariableResetMap = {
                raidboss: ['Triggers']
              };
              warnOnVariableResetMap[overlayName] = warnOnVariableResetMap[overlayName] || [];

              // The values of each `warnOnVariableResetMap` field are initially set
              // after the first file, so that if there is only one file, there are
              // not any warnings.

              // The fields that a user file sets in Options can be anything (pun not intended)
              // and so we use `any` here.  The only operation done on this field is a !==
              // for change detection to see if the the user file has modified it.
              // eslint-disable-next-line @typescript-eslint/no-explicit-any
              const variableTracker = {};
              if (localFiles) {
                // localFiles may be null if there is no valid user directory.
                const sortedFiles = this.sortUserFiles(Object.keys(localFiles));
                const jsFiles = this.filterUserFiles(sortedFiles, overlayName, '.js');
                const cssFiles = loadCss ? this.filterUserFiles(sortedFiles, overlayName, '.css') : [];
                for (const jsFile of jsFiles) {
                  try {
                    printUserFile(`local user file: ${basePath}${jsFile}`);
                    this.evalUserFile(localFiles[jsFile] ?? '', options);
                    for (const field of warnOnVariableResetMap[overlayName] ?? []) {
                      const value = variableTracker[field];
                      if (value !== null && value !== undefined && value !== options[field]) {
                        // Ideally users should do something like `Options.Triggers.push([etc]);`
                        // instead of `Options.Triggers = [etc];`
                        console.log(`*** WARNING: ${basePath}${jsFile} overwrites Options.${field} from previous files.`);
                      }
                      variableTracker[field] = options[field];
                    }
                    this.userFileCallbacks[overlayName]?.(jsFile, localFiles, options, basePath);
                  } catch (e) {
                    // Be very visible for users.
                    console.log('*** ERROR IN USER FILE ***');
                    console.log(e);
                  }
                }

                // This is a bit awkward to handle skin settings here, but
                // doing it after user config files and before user css files
                // allows user css to override skin-specific css as well.
                if (options.Skin !== undefined) this.handleSkin(options.Skin);
                for (const cssFile of cssFiles) {
                  printUserFile(`local user file: ${basePath}${cssFile}`);
                  const userCssText = document.createElement('style');
                  const contents = localFiles[cssFile];
                  if (contents !== undefined) userCssText.innerText = contents;
                  const head = document.getElementsByTagName('head')[0];
                  if (head) head.appendChild(userCssText);
                }
              }

              // Post this callback so that the js and css can be executed first.
              callback();
              void (0, _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__/* .callOverlayHandler */.ae)({
                call: 'cactbotRequestState'
              });
            };
            void (0, _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__/* .callOverlayHandler */.ae)({
              call: 'cactbotLoadUser',
              source: location.href,
              overlayName: overlayName
            }).then(e => {
              // Wait for DOMContentLoaded if needed.
              if (document.readyState !== 'loading') {
                void loadUser(e);
                return;
              }
              document.addEventListener('DOMContentLoaded', () => {
                void loadUser(e);
              });
            });
          }
          handleSkin(skinName) {
            if (!skinName || skinName === 'default') return;
            const skinCSSRelativeHref = `../raidboss/skins/${skinName}/${skinName}.css`;
            this.appendCSSLink(skinCSSRelativeHref);
          }
          appendJSLink(src) {
            const userJS = document.createElement('script');
            userJS.setAttribute('type', 'text/javascript');
            userJS.setAttribute('src', src);
            userJS.setAttribute('async', 'false');
            const head = document.getElementsByTagName('head')[0];
            if (head) head.appendChild(userJS);
          }
          appendCSSLink(href) {
            const userCSS = document.createElement('link');
            userCSS.setAttribute('rel', 'stylesheet');
            userCSS.setAttribute('type', 'text/css');
            userCSS.setAttribute('href', href);
            const head = document.getElementsByTagName('head')[0];
            if (head) head.appendChild(userCSS);
          }
          processOptions(options, output, savedConfig, templateOptions) {
            // Take options from the template, find them in savedConfig,
            // and apply them to options. This also handles setting
            // defaults for anything in the template, even if it does not
            // exist in savedConfig.

            // Not all overlays have option templates.
            if (templateOptions === undefined) return;
            for (const opt of templateOptions) {
              // Grab the saved value or the default to set in options.

              let value;
              if (typeof opt.default === 'function') value = opt.default(options); else value = opt.default;
              let isDefault = true;
              if (typeof savedConfig === 'object' && !Array.isArray(savedConfig)) {
                if (opt.id in savedConfig) {
                  const newValue = savedConfig[opt.id];
                  // Empty strings are always treated as default values.
                  // This means that the user has entered something and then cleared it.
                  if (newValue !== undefined && newValue !== '') {
                    value = newValue;
                    isDefault = false;
                  }
                }
              }

              // Options can provide custom logic to turn a value into options settings.
              // If this doesn't exist, just set the value directly.
              // Option template ids are identical to field names on Options.
              if (opt.setterFunc) {
                const setValue = opt.setterFunc(value, options, isDefault);
                if (setValue !== undefined) output[opt.id] = setValue;
              } else if (opt.type === 'integer') {
                if (typeof value === 'number') output[opt.id] = Math.floor(value); else if (typeof value === 'string') output[opt.id] = parseInt(value);
              } else if (opt.type === 'float') {
                if (typeof value === 'number') output[opt.id] = value; else if (typeof value === 'string') output[opt.id] = parseFloat(value);
              } else {
                output[opt.id] = value;
              }
            }
          }
          addUnlockText(lang) {
            const unlockText = {
              en: '🔓 Unlocked (lock overlay before using)',
              de: '🔓 Entsperrt (Sperre das Overlay vor der Nutzung)',
              fr: '🔓 Débloqué (Bloquez l\'overlay avant utilisation)',
              ja: '🔓 ロック解除 (オーバーレイを使用する前にロックしてください)',
              cn: '🔓 未锁定（使用前请在插件中勾选锁定悬浮窗）',
              ko: '🔓 위치 잠금 해제됨 (사용하기 전에 위치 잠금을 설정하세요)'
            };
            const id = 'cactbot-unlocked-text';
            let textElem = document.getElementById(id);
            if (!textElem) {
              textElem = document.createElement('div');
              textElem.id = id;
              textElem.classList.add('text');
              // Set element display to none in case the page has not included defaults.css.
              textElem.style.display = 'none';
              document.body.append(textElem);
            }
            textElem.innerHTML = unlockText[lang] || unlockText['en'];
          }
        }
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new UserConfig());
        if (typeof document !== 'undefined') {
          // This event comes early and is not cached, so set up event listener immediately.
          document.addEventListener('onOverlayStateUpdate', e => {
            const docClassList = document.documentElement.classList;
            if (e.detail.isLocked) docClassList.remove('resize-handle', 'unlocked'); else docClassList.add('resize-handle', 'unlocked');
          });
        }

        /***/
      }),

/***/ 509:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "N": () => (/* binding */ Directions),
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
/* harmony import */ var _netregexes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(622);
/* harmony import */ var _outputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony import */ var _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(959);




        // TODO: it'd be nice to not repeat job names, but at least Record enforces that all are set.
        const nameToJobEnum = {
          NONE: 0,
          GLA: 1,
          PGL: 2,
          MRD: 3,
          LNC: 4,
          ARC: 5,
          CNJ: 6,
          THM: 7,
          CRP: 8,
          BSM: 9,
          ARM: 10,
          GSM: 11,
          LTW: 12,
          WVR: 13,
          ALC: 14,
          CUL: 15,
          MIN: 16,
          BTN: 17,
          FSH: 18,
          PLD: 19,
          MNK: 20,
          WAR: 21,
          DRG: 22,
          BRD: 23,
          WHM: 24,
          BLM: 25,
          ACN: 26,
          SMN: 27,
          SCH: 28,
          ROG: 29,
          NIN: 30,
          MCH: 31,
          DRK: 32,
          AST: 33,
          SAM: 34,
          RDM: 35,
          BLU: 36,
          GNB: 37,
          DNC: 38,
          RPR: 39,
          SGE: 40,
          VPR: 41,
          PCT: 42
        };
        const allJobs = Object.keys(nameToJobEnum);
        const allRoles = ['tank', 'healer', 'dps', 'crafter', 'gatherer', 'none'];
        const tankJobs = ['GLA', 'PLD', 'MRD', 'WAR', 'DRK', 'GNB'];
        const healerJobs = ['CNJ', 'WHM', 'SCH', 'AST', 'SGE'];
        const meleeDpsJobs = ['PGL', 'MNK', 'LNC', 'DRG', 'ROG', 'NIN', 'SAM', 'RPR', 'VPR'];
        const rangedDpsJobs = ['ARC', 'BRD', 'DNC', 'MCH'];
        const casterDpsJobs = ['BLU', 'RDM', 'BLM', 'SMN', 'ACN', 'THM', 'PCT'];
        const dpsJobs = [...meleeDpsJobs, ...rangedDpsJobs, ...casterDpsJobs];
        const craftingJobs = ['CRP', 'BSM', 'ARM', 'GSM', 'LTW', 'WVR', 'ALC', 'CUL'];
        const gatheringJobs = ['MIN', 'BTN', 'FSH'];
        const stunJobs = ['BLU', ...tankJobs, ...meleeDpsJobs];
        const silenceJobs = ['BLU', ...tankJobs, ...rangedDpsJobs];
        const sleepJobs = [...casterDpsJobs, ...healerJobs];
        const feintJobs = [...meleeDpsJobs];
        const addleJobs = [...casterDpsJobs];
        const cleanseJobs = ['BLU', 'BRD', ...healerJobs];
        const jobToRoleMap = (() => {
          const addToMap = (map, jobs, role) => {
            jobs.forEach(job => map.set(job, role));
          };
          const map = new Map([['NONE', 'none']]);
          addToMap(map, tankJobs, 'tank');
          addToMap(map, healerJobs, 'healer');
          addToMap(map, dpsJobs, 'dps');
          addToMap(map, craftingJobs, 'crafter');
          addToMap(map, gatheringJobs, 'gatherer');
          return map;
        })();
        const watchCombatantMap = [];
        const shouldCancelWatch = (params, entry) => {
          if (entry.cancel) return true;
          if (params.maxDuration !== undefined && Date.now() - entry.start > params.maxDuration) return true;
          return false;
        };
        const defaultWatchCombatant = (params, func) => {
          return new Promise((res, rej) => {
            const delay = params.delay ?? 1000;
            const call = {
              call: 'getCombatants'
            };
            if (params.ids) call.ids = params.ids;
            if (params.names) call.names = params.names;
            if (params.props) call.props = params.props;
            const entry = {
              cancel: false,
              start: Date.now()
            };
            watchCombatantMap.push(entry);
            const checkFunc = () => {
              if (shouldCancelWatch(params, entry)) {
                rej(new Error('cancelled'));
                return;
              }
              void (0, _overlay_plugin_api__WEBPACK_IMPORTED_MODULE_2__/* .callOverlayHandler */.ae)(call).then(response => {
                if (entry.cancel) {
                  rej(new Error('was cancelled'));
                  return;
                }
                if (func(response)) res(); else window.setTimeout(checkFunc, delay);
              });
            };
            window.setTimeout(checkFunc, delay);
          });
        };
        let watchCombatantOverride;
        let clearCombatantsOverride;
        const defaultClearCombatants = () => {
          while (watchCombatantMap.length > 0) {
            const watch = watchCombatantMap.pop();
            if (watch) watch.cancel = true;
          }
        };
        const watchCombatant = (params, func) => {
          if (watchCombatantOverride) return watchCombatantOverride(params, func);
          return defaultWatchCombatant(params, func);
        };
        const output8Dir = ['dirN', 'dirNE', 'dirE', 'dirSE', 'dirS', 'dirSW', 'dirW', 'dirNW'];
        const output16Dir = ['dirN', 'dirNNE', 'dirNE', 'dirENE', 'dirE', 'dirESE', 'dirSE', 'dirSSE', 'dirS', 'dirSSW', 'dirSW', 'dirWSW', 'dirW', 'dirWNW', 'dirNW', 'dirNNW'];
        const outputCardinalDir = ['dirN', 'dirE', 'dirS', 'dirW'];
        const outputIntercardDir = ['dirNE', 'dirSE', 'dirSW', 'dirNW'];
        const outputStrings16Dir = {
          dirN: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirN */.Z.dirN,
          dirNNE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNNE */.Z.dirNNE,
          dirNE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNE */.Z.dirNE,
          dirENE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirENE */.Z.dirENE,
          dirE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirE */.Z.dirE,
          dirESE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirESE */.Z.dirESE,
          dirSE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSE */.Z.dirSE,
          dirSSE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSSE */.Z.dirSSE,
          dirS: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirS */.Z.dirS,
          dirSSW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSSW */.Z.dirSSW,
          dirSW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSW */.Z.dirSW,
          dirWSW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirWSW */.Z.dirWSW,
          dirW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirW */.Z.dirW,
          dirWNW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirWNW */.Z.dirWNW,
          dirNW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNW */.Z.dirNW,
          dirNNW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNNW */.Z.dirNNW,
          unknown: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unknown */.Z.unknown
        };
        const outputStrings8Dir = {
          dirN: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirN */.Z.dirN,
          dirNE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNE */.Z.dirNE,
          dirE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirE */.Z.dirE,
          dirSE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSE */.Z.dirSE,
          dirS: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirS */.Z.dirS,
          dirSW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSW */.Z.dirSW,
          dirW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirW */.Z.dirW,
          dirNW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNW */.Z.dirNW,
          unknown: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unknown */.Z.unknown
        };
        const outputStringsCardinalDir = {
          dirN: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirN */.Z.dirN,
          dirE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirE */.Z.dirE,
          dirS: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirS */.Z.dirS,
          dirW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirW */.Z.dirW,
          unknown: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unknown */.Z.unknown
        };
        const outputStringsIntercardDir = {
          dirNE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNE */.Z.dirNE,
          dirSE: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSE */.Z.dirSE,
          dirSW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirSW */.Z.dirSW,
          dirNW: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dirNW */.Z.dirNW,
          unknown: _outputs__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unknown */.Z.unknown
        };

        // TODO: Accept 'north' as a function input and adjust output accordingly.
        // E.g. Math.round((north + 4) - 4 * Math.atan2(x, y) / Math.PI) % 8;
        // Will need to adjust the output arrays as well though.

        const xyTo16DirNum = (x, y, centerX, centerY) => {
          // N = 0, NNE = 1, ..., NNW = 15
          x = x - centerX;
          y = y - centerY;
          return Math.round(8 - 8 * Math.atan2(x, y) / Math.PI) % 16;
        };
        const xyTo8DirNum = (x, y, centerX, centerY) => {
          // N = 0, NE = 1, ..., NW = 7
          x = x - centerX;
          y = y - centerY;
          return Math.round(4 - 4 * Math.atan2(x, y) / Math.PI) % 8;
        };
        const xyTo4DirNum = (x, y, centerX, centerY) => {
          // N = 0, E = 1, S = 2, W = 3
          x = x - centerX;
          y = y - centerY;
          return Math.round(2 - 2 * Math.atan2(x, y) / Math.PI) % 4;
        };
        const xyTo4DirIntercardNum = (x, y, centerX, centerY) => {
          // NE = 0, SE = 1, SW = 2, NW = 3
          x = x - centerX;
          y = y - centerY;
          return Math.round(2 - 2 * (Math.PI / 4 + Math.atan2(x, y)) / Math.PI) % 4;
        };
        const hdgTo8DirNum = heading => {
          // N = 0, NE = 1, ..., NW = 7
          return (Math.round(4 - 4 * heading / Math.PI) % 8 + 8) % 8;
        };
        const hdgTo4DirNum = heading => {
          // N = 0, E = 1, S = 2, W = 3
          return (Math.round(2 - heading * 2 / Math.PI) % 4 + 4) % 4;
        };
        const outputFrom8DirNum = dirNum => {
          return output8Dir[dirNum] ?? 'unknown';
        };
        const outputFromCardinalNum = dirNum => {
          return outputCardinalDir[dirNum] ?? 'unknown';
        };
        const outputFromIntercardNum = dirNum => {
          return outputIntercardDir[dirNum] ?? 'unknown';
        };
        const Directions = {
          output8Dir: output8Dir,
          output16Dir: output16Dir,
          outputCardinalDir: outputCardinalDir,
          outputIntercardDir: outputIntercardDir,
          outputStrings16Dir: outputStrings16Dir,
          outputStrings8Dir: outputStrings8Dir,
          outputStringsCardinalDir: outputStringsCardinalDir,
          outputStringsIntercardDir: outputStringsIntercardDir,
          xyTo16DirNum: xyTo16DirNum,
          xyTo8DirNum: xyTo8DirNum,
          xyTo4DirNum: xyTo4DirNum,
          hdgTo8DirNum: hdgTo8DirNum,
          hdgTo4DirNum: hdgTo4DirNum,
          outputFrom8DirNum: outputFrom8DirNum,
          outputFromCardinalNum: outputFromCardinalNum,
          combatantStatePosTo8Dir: (combatant, centerX, centerY) => {
            return xyTo8DirNum(combatant.PosX, combatant.PosY, centerX, centerY);
          },
          combatantStatePosTo8DirOutput: (combatant, centerX, centerY) => {
            const dirNum = xyTo8DirNum(combatant.PosX, combatant.PosY, centerX, centerY);
            return outputFrom8DirNum(dirNum);
          },
          combatantStateHdgTo8Dir: combatant => {
            return hdgTo8DirNum(combatant.Heading);
          },
          combatantStateHdgTo8DirOutput: combatant => {
            const dirNum = hdgTo8DirNum(combatant.Heading);
            return outputFrom8DirNum(dirNum);
          },
          addedCombatantPosTo8Dir: (combatant, centerX, centerY) => {
            const x = parseFloat(combatant.x);
            const y = parseFloat(combatant.y);
            return xyTo8DirNum(x, y, centerX, centerY);
          },
          addedCombatantPosTo8DirOutput: (combatant, centerX, centerY) => {
            const x = parseFloat(combatant.x);
            const y = parseFloat(combatant.y);
            const dirNum = xyTo8DirNum(x, y, centerX, centerY);
            return outputFrom8DirNum(dirNum);
          },
          addedCombatantHdgTo8Dir: combatant => {
            const heading = parseFloat(combatant.heading);
            return hdgTo8DirNum(heading);
          },
          addedCombatantHdgTo8DirOutput: combatant => {
            const heading = parseFloat(combatant.heading);
            const dirNum = hdgTo8DirNum(heading);
            return outputFrom8DirNum(dirNum);
          },
          xyTo8DirOutput: (x, y, centerX, centerY) => {
            const dirNum = xyTo8DirNum(x, y, centerX, centerY);
            return outputFrom8DirNum(dirNum);
          },
          xyToCardinalDirOutput: (x, y, centerX, centerY) => {
            const dirNum = xyTo4DirNum(x, y, centerX, centerY);
            return outputFromCardinalNum(dirNum);
          },
          xyToIntercardDirOutput: (x, y, centerX, centerY) => {
            const dirNum = xyTo4DirIntercardNum(x, y, centerX, centerY);
            return outputFromIntercardNum(dirNum);
          }
        };
        const Util = {
          jobEnumToJob: id => {
            const job = allJobs.find(job => nameToJobEnum[job] === id);
            return job ?? 'NONE';
          },
          jobToJobEnum: job => nameToJobEnum[job],
          jobToRole: job => {
            const role = jobToRoleMap.get(job);
            return role ?? 'none';
          },
          getAllRoles: () => allRoles,
          isTankJob: job => tankJobs.includes(job),
          isHealerJob: job => healerJobs.includes(job),
          isMeleeDpsJob: job => meleeDpsJobs.includes(job),
          isRangedDpsJob: job => rangedDpsJobs.includes(job),
          isCasterDpsJob: job => casterDpsJobs.includes(job),
          isDpsJob: job => dpsJobs.includes(job),
          isCraftingJob: job => craftingJobs.includes(job),
          isGatheringJob: job => gatheringJobs.includes(job),
          isCombatJob: job => {
            return !craftingJobs.includes(job) && !gatheringJobs.includes(job);
          },
          canStun: job => stunJobs.includes(job),
          canSilence: job => silenceJobs.includes(job),
          canSleep: job => sleepJobs.includes(job),
          canCleanse: job => cleanseJobs.includes(job),
          canFeint: job => feintJobs.includes(job),
          canAddle: job => addleJobs.includes(job),
          watchCombatant: watchCombatant,
          clearWatchCombatants: () => {
            if (clearCombatantsOverride !== undefined) clearCombatantsOverride(); else defaultClearCombatants();
          },
          setWatchCombatantOverride: (watchFunc, clearFunc) => {
            watchCombatantOverride = watchFunc;
            clearCombatantsOverride = clearFunc;
          },
          gameLogCodes: _netregexes__WEBPACK_IMPORTED_MODULE_0__/* .gameLogCodes */.k3,
          actorControlType: _netregexes__WEBPACK_IMPORTED_MODULE_0__/* .actorControlType */.Bx,
          shortName: (name, playerNicks) => {
            // TODO: make this unique among the party in case of first name collisions.
            if (typeof name !== 'string') {
              if (typeof name !== 'undefined') console.error('called ShortNamify with non-string');
              return '???';
            }
            const nick = playerNicks[name];
            if (nick !== undefined) return nick;
            const idx = name.indexOf(' ');
            return idx < 0 ? name : name.slice(0, idx);
          }
        };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Util);

        /***/
      }),

/***/ 588:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
        // Auto-generated from gen_zone_id_and_info.ts
        // DO NOT EDIT THIS FILE DIRECTLY

        const data = {
          'ABloodyReunion': 560,
          'AFatherFirst': 1210,
          'AFrostyReception': 1010,
          'AHunterTrue': 1216,
          'APathUnveiled': 1015,
          'ARelicRebornTheChimera': 368,
          'ARelicRebornTheHydra': 369,
          'ARequiemForHeroes': 830,
          'ASleepDisturbed': 914,
          'ASpectacleForTheAges': 533,
          'AacLightHeavyweightM1': 1225,
          'AacLightHeavyweightM1Savage': 1226,
          'AacLightHeavyweightM2': 1227,
          'AacLightHeavyweightM2Savage': 1228,
          'AacLightHeavyweightM3': 1229,
          'AacLightHeavyweightM3Savage': 1230,
          'AacLightHeavyweightM4': 1231,
          'AacLightHeavyweightM4Savage': 1232,
          'AbyssosTheEighthCircle': 1087,
          'AbyssosTheEighthCircleSavage': 1088,
          'AbyssosTheFifthCircle': 1081,
          'AbyssosTheFifthCircleSavage': 1082,
          'AbyssosTheSeventhCircle': 1085,
          'AbyssosTheSeventhCircleSavage': 1086,
          'AbyssosTheSixthCircle': 1083,
          'AbyssosTheSixthCircleSavage': 1084,
          'AccrueEnmityFromMultipleTargets': 540,
          'Aglaia': 1054,
          'AirForceOne': 832,
          'AkadaemiaAnyder': 841,
          'AlaMhigo': 1146,
          'AlaMhigo63': 689,
          'AlexanderTheArmOfTheFather': 444,
          'AlexanderTheArmOfTheFatherSavage': 451,
          'AlexanderTheArmOfTheSon': 522,
          'AlexanderTheArmOfTheSonSavage': 531,
          'AlexanderTheBreathOfTheCreator': 581,
          'AlexanderTheBreathOfTheCreatorSavage': 585,
          'AlexanderTheBurdenOfTheFather': 445,
          'AlexanderTheBurdenOfTheFatherSavage': 452,
          'AlexanderTheBurdenOfTheSon': 523,
          'AlexanderTheBurdenOfTheSonSavage': 532,
          'AlexanderTheCuffOfTheFather': 443,
          'AlexanderTheCuffOfTheFatherSavage': 450,
          'AlexanderTheCuffOfTheSon': 521,
          'AlexanderTheCuffOfTheSonSavage': 530,
          'AlexanderTheEyesOfTheCreator': 580,
          'AlexanderTheEyesOfTheCreatorSavage': 584,
          'AlexanderTheFistOfTheFather': 442,
          'AlexanderTheFistOfTheFatherSavage': 449,
          'AlexanderTheFistOfTheSon': 520,
          'AlexanderTheFistOfTheSonSavage': 529,
          'AlexanderTheHeartOfTheCreator': 582,
          'AlexanderTheHeartOfTheCreatorSavage': 586,
          'AlexanderTheSoulOfTheCreator': 583,
          'AlexanderTheSoulOfTheCreatorSavage': 587,
          'Alexandria': 1199,
          'AllsWellThatEndsInTheWell': 220,
          'AloaloIsland': 1176,
          'AlphascapeV10': 798,
          'AlphascapeV10Savage': 802,
          'AlphascapeV20': 799,
          'AlphascapeV20Savage': 803,
          'AlphascapeV30': 800,
          'AlphascapeV30Savage': 804,
          'AlphascapeV40': 801,
          'AlphascapeV40Savage': 805,
          'AlzadaalsLegacy': 1050,
          'Amaurot': 838,
          'AmdaporKeep': 167,
          'AmdaporKeepHard': 189,
          'AmhAraeng': 815,
          'AnAntidoteForAnarchy': 1215,
          'AnUnforeseenBargain': 1120,
          'AnabaseiosTheEleventhCircle': 1151,
          'AnabaseiosTheEleventhCircleSavage': 1152,
          'AnabaseiosTheNinthCircle': 1147,
          'AnabaseiosTheNinthCircleSavage': 1148,
          'AnabaseiosTheTenthCircle': 1149,
          'AnabaseiosTheTenthCircleSavage': 1150,
          'AnabaseiosTheTwelfthCircle': 1153,
          'AnabaseiosTheTwelfthCircleSavage': 1154,
          'AnamnesisAnyder': 898,
          'AnnoyTheVoid': 222,
          'AnotherAloaloIsland': 1179,
          'AnotherAloaloIslandSavage': 1180,
          'AnotherMountRokkon': 1155,
          'AnotherMountRokkonSavage': 1156,
          'AnotherSildihnSubterrane': 1075,
          'AnotherSildihnSubterraneSavage': 1076,
          'AsTheHeartBids': 894,
          'AsTheHeavensBurn': 1012,
          'AsphodelosTheFirstCircle': 1002,
          'AsphodelosTheFirstCircleSavage': 1003,
          'AsphodelosTheFourthCircle': 1008,
          'AsphodelosTheFourthCircleSavage': 1009,
          'AsphodelosTheSecondCircle': 1004,
          'AsphodelosTheSecondCircleSavage': 1005,
          'AsphodelosTheThirdCircle': 1006,
          'AsphodelosTheThirdCircleSavage': 1007,
          'AssistAlliesInDefeatingATarget': 544,
          'Astragalos': 729,
          'AvoidAreaOfEffectAttacks': 537,
          'AzysLla': 402,
          'BaelsarsWall': 1114,
          'BaelsarsWall62': 615,
          'BarThePassage': 1246,
          'BardamsMettle': 1143,
          'BardamsMettle63': 623,
          'BasicTrainingEnemyParties': 214,
          'BasicTrainingEnemyStrongholds': 215,
          'BattleInTheBigKeep': 396,
          'BattleOnTheBigBridge': 366,
          'BloodOnTheDeck': 708,
          'Blunderville': 1165,
          'BrayfloxsLongstop': 1041,
          'BrayfloxsLongstopHard': 362,
          'CapeWestwind': 1049,
          'CastrumAbania': 1145,
          'CastrumAbania63': 661,
          'CastrumFluminis': 778,
          'CastrumMarinum': 934,
          'CastrumMarinumExtreme': 935,
          'CastrumMeridianum': 1043,
          'CenoteJaJaGural': 1209,
          'CentralShroud': 148,
          'CentralThanalan': 141,
          'ChocoboRaceCostaDelSol': 389,
          'ChocoboRaceSagoliiRoad': 390,
          'ChocoboRaceTranquilPaths': 391,
          'ChocoboRaceTutorial': 417,
          'CinderDrift': 897,
          'CinderDriftExtreme': 912,
          'CoerthasCentralHighlands': 155,
          'CoerthasWesternHighlands': 397,
          'ComingClean': 860,
          'ContainmentBayP1T6': 576,
          'ContainmentBayP1T6Extreme': 577,
          'ContainmentBayP1T6Unreal': 1121,
          'ContainmentBayS1T7': 517,
          'ContainmentBayS1T7Extreme': 524,
          'ContainmentBayS1T7Unreal': 1090,
          'ContainmentBayZ1T9': 637,
          'ContainmentBayZ1T9Extreme': 638,
          'ContainmentBayZ1T9Unreal': 1157,
          'CopperbellMines': 1038,
          'CopperbellMinesHard': 349,
          'CrystallineConflictCustomMatchCloudNine': 1060,
          'CrystallineConflictCustomMatchTheClockworkCastletown': 1117,
          'CrystallineConflictCustomMatchThePalaistra': 1058,
          'CrystallineConflictCustomMatchTheRedSands': 1139,
          'CrystallineConflictCustomMatchTheVolcanicHeart': 1059,
          'CuriousGorgeMeetsHisMatch': 717,
          'CuttersCry': 170,
          'DarkAsTheNightSky': 713,
          'DeathUntoDawn': 977,
          'DefeatAnOccupiedTarget': 545,
          'DeltascapeV10': 691,
          'DeltascapeV10Savage': 695,
          'DeltascapeV20': 692,
          'DeltascapeV20Savage': 696,
          'DeltascapeV30': 693,
          'DeltascapeV30Savage': 697,
          'DeltascapeV40': 694,
          'DeltascapeV40Savage': 698,
          'DelubrumReginae': 936,
          'DelubrumReginaeSavage': 937,
          'Devastation': 1052,
          'DohnMheg': 821,
          'DomaCastle': 1144,
          'DomaCastle63': 660,
          'DragonSound': 714,
          'DragonsongsRepriseUltimate': 968,
          'DreamsOfANewDay': 1214,
          'DunScaith': 627,
          'DzemaelDarkhold': 171,
          'EastShroud': 152,
          'EasternLaNoscea': 137,
          'EasternThanalan': 145,
          'EdensGateDescent': 850,
          'EdensGateDescentSavage': 854,
          'EdensGateInundation': 851,
          'EdensGateInundationSavage': 855,
          'EdensGateResurrection': 849,
          'EdensGateResurrectionSavage': 853,
          'EdensGateSepulture': 852,
          'EdensGateSepultureSavage': 856,
          'EdensPromiseAnamorphosis': 944,
          'EdensPromiseAnamorphosisSavage': 948,
          'EdensPromiseEternity': 945,
          'EdensPromiseEternitySavage': 949,
          'EdensPromiseLitany': 943,
          'EdensPromiseLitanySavage': 947,
          'EdensPromiseUmbra': 942,
          'EdensPromiseUmbraSavage': 946,
          'EdensVerseFulmination': 902,
          'EdensVerseFulminationSavage': 906,
          'EdensVerseFuror': 903,
          'EdensVerseFurorSavage': 907,
          'EdensVerseIconoclasm': 904,
          'EdensVerseIconoclasmSavage': 908,
          'EdensVerseRefulgence': 905,
          'EdensVerseRefulgenceSavage': 909,
          'Elpis': 961,
          'Emanation': 719,
          'EmanationExtreme': 720,
          'EmissaryOfTheDawn': 769,
          'Endwalker': 1013,
          'EngageMultipleTargets': 541,
          'Eulmore': 820,
          'Euphrosyne': 1118,
          'EurekaOrthosFloors11_20': 1100,
          'EurekaOrthosFloors1_10': 1099,
          'EurekaOrthosFloors21_30': 1101,
          'EurekaOrthosFloors31_40': 1102,
          'EurekaOrthosFloors41_50': 1103,
          'EurekaOrthosFloors51_60': 1104,
          'EurekaOrthosFloors61_70': 1105,
          'EurekaOrthosFloors71_80': 1106,
          'EurekaOrthosFloors81_90': 1107,
          'EurekaOrthosFloors91_100': 1108,
          'EverMarchHeavensward': 1018,
          'Everkeep': 1200,
          'EverkeepExtreme': 1201,
          'ExecuteAComboInBattle': 539,
          'ExecuteAComboToIncreaseEnmity': 538,
          'ExecuteARangedAttackToIncreaseEnmity': 542,
          'FadedMemories': 932,
          'FangsOfTheViper': 1235,
          'FinalExercise': 552,
          'FitForAQueen': 955,
          'FlickingSticksAndTakingNames': 219,
          'ForlornGlory': 1051,
          'Foundation': 418,
          'FourPlayerMahjongQuickMatchKuitanDisabled': 831,
          'FuturesRewrittenUltimate': 1238,
          'Garlemald': 958,
          'GenerationalBonding': 1115,
          'Halatali': 1245,
          'Halatali70': 162,
          'HalataliHard': 360,
          'HaukkeManor': 1040,
          'HaukkeManorHard': 350,
          'HealAnAlly': 549,
          'HealMultipleAllies': 550,
          'HeavenOnHighFloors11_20': 771,
          'HeavenOnHighFloors1_10': 770,
          'HeavenOnHighFloors21_30': 772,
          'HeavenOnHighFloors31_40': 782,
          'HeavenOnHighFloors41_50': 773,
          'HeavenOnHighFloors51_60': 783,
          'HeavenOnHighFloors61_70': 774,
          'HeavenOnHighFloors71_80': 784,
          'HeavenOnHighFloors81_90': 775,
          'HeavenOnHighFloors91_100': 785,
          'HellsKier': 810,
          'HellsKierExtreme': 811,
          'HellsLid': 742,
          'HeritageFound': 1191,
          'HeroOnTheHalfShell': 216,
          'HeroesAndPretenders': 1218,
          'HiddenGorge': 791,
          'HolminsterSwitch': 837,
          'HullbreakerIsle': 361,
          'HullbreakerIsleHard': 557,
          'Idyllshire': 478,
          'Ihuykatumu': 1167,
          'IlMheg': 816,
          'InFromTheCold': 1011,
          'InThalsName': 705,
          'InteractWithTheBattlefield': 548,
          'InterdimensionalRift': 690,
          'ItsProbablyATrap': 665,
          'JeunoTheFirstWalk': 1248,
          'Kholusia': 814,
          'Kozamauka': 1188,
          'KtisisHyperboreia': 974,
          'Kugane': 628,
          'KuganeCastle': 662,
          'KuganeOhashi': 806,
          'Labyrinthos': 956,
          'LaidToRest': 1017,
          'Lakeland': 813,
          'LapisManalis': 1097,
          'LegendOfTheNotSoHiddenTemple': 859,
          'LifeEphemeralPathEternal': 1023,
          'LimsaLominsaLowerDecks': 129,
          'LimsaLominsaUpperDecks': 128,
          'LivingMemory': 1192,
          'LongLiveTheQueen': 298,
          'LovmMasterTournament': 506,
          'LovmPlayerBattleNonRp': 591,
          'LovmPlayerBattleRp': 589,
          'LovmTournament': 590,
          'LowerLaNoscea': 135,
          'MalikahsWell': 836,
          'MareLamentorum': 959,
          'MatchAll': null,
          'MatoyasRelict': 933,
          'MatsubaMayhem': 710,
          'MemoriaMiseraExtreme': 913,
          'MemoryOfEmbers': 1166,
          'MessengerOfTheWinds': 834,
          'MiddleLaNoscea': 134,
          'MindOverManor': 1233,
          'Mist': 136,
          'MorDhona': 156,
          'MoreThanAFeeler': 221,
          'MountOrdeals': 1095,
          'MountOrdealsExtreme': 1096,
          'MountRokkon': 1137,
          'MtGulg': 822,
          'Naadam': 688,
          'Neverreap': 420,
          'NewGridania': 132,
          'NorthShroud': 154,
          'NorthernThanalan': 147,
          'NyelbertsLament': 876,
          'OldGridania': 133,
          'OldSharlayan': 962,
          'OneLifeForOneWorld': 592,
          'OnsalHakairDanshigNaadam': 888,
          'Origenics': 1208,
          'OurCompromise': 716,
          'OurUnsungHeroes': 722,
          'OuterLaNoscea': 180,
          'Paglthan': 938,
          'PharosSirius': 160,
          'PharosSiriusHard': 510,
          'PullingPoisonPosies': 191,
          'RadzAtHan': 963,
          'RaisingTheSword': 706,
          'ReactToAdvancedVisualIndicators': 1129,
          'ReactToAttackMarkers': 1127,
          'ReactToFloorMarkers': 1128,
          'ReturnOfTheBull': 403,
          'RhalgrsReach': 635,
          'SagesFocus': 1022,
          'SaintMociannesArboretum': 511,
          'SaintMociannesArboretumHard': 788,
          'Sastasha': 1036,
          'SastashaHard': 387,
          'SealRockSeize': 431,
          'Shaaloani': 1190,
          'ShadowAndClaw': 223,
          'ShisuiOfTheVioletTides': 616,
          'SigmascapeV10': 748,
          'SigmascapeV10Savage': 752,
          'SigmascapeV20': 749,
          'SigmascapeV20Savage': 753,
          'SigmascapeV30': 750,
          'SigmascapeV30Savage': 754,
          'SigmascapeV40': 751,
          'SigmascapeV40Savage': 755,
          'Smileton': 976,
          'Snowcloak': 1062,
          'Snowcloak61': 371,
          'SohmAl': 1064,
          'SohmAl61': 441,
          'SohmAlHard': 617,
          'SohrKhai': 1112,
          'SohrKhai62': 555,
          'SolemnTrinity': 300,
          'SolutionNine': 1186,
          'SomewhereOnlySheKnows': 1234,
          'SouthShroud': 153,
          'SouthernThanalan': 146,
          'SpecialEventI': 353,
          'SpecialEventIi': 354,
          'StingingBack': 192,
          'StormsCrown': 1071,
          'StormsCrownExtreme': 1072,
          'SyrcusTower': 372,
          'TakingAStand': 1211,
          'TenderValley': 1203,
          'Thaleia': 1178,
          'Thavnair': 957,
          'TheAbyssalFracture': 1168,
          'TheAbyssalFractureExtreme': 1169,
          'TheAery': 1065,
          'TheAery61': 435,
          'TheAetherfont': 1126,
          'TheAetherochemicalResearchFacility': 1110,
          'TheAetherochemicalResearchFacility62': 438,
          'TheAitiascope': 978,
          'TheAkhAfahAmphitheatreExtreme': 378,
          'TheAkhAfahAmphitheatreHard': 377,
          'TheAkhAfahAmphitheatreUnreal': 930,
          'TheAntitower': 1111,
          'TheAntitower62': 516,
          'TheAquapolis': 558,
          'TheAurumVale': 172,
          'TheAzimSteppe': 622,
          'TheBattleOnBekko': 711,
          'TheBindingCoilOfBahamutTurn1': 241,
          'TheBindingCoilOfBahamutTurn2': 242,
          'TheBindingCoilOfBahamutTurn3': 243,
          'TheBindingCoilOfBahamutTurn4': 244,
          'TheBindingCoilOfBahamutTurn5': 245,
          'TheBorderlandRuinsSecure': 376,
          'TheBowlOfEmbers': 1045,
          'TheBowlOfEmbersExtreme': 295,
          'TheBowlOfEmbersHard': 292,
          'TheBozjaIncident': 911,
          'TheBozjanSouthernFront': 920,
          'TheBurn': 1173,
          'TheBurn64': 789,
          'TheCalamityRetold': 790,
          'TheCarteneauFlatsHeliodrome': 633,
          'TheChrysalis': 426,
          'TheChurningMists': 400,
          'TheClockworkCastletown': 1116,
          'TheCloudDeck': 950,
          'TheCloudDeckExtreme': 951,
          'TheCloudOfDarknessChaotic': 1241,
          'TheCopiedFactory': 882,
          'TheCrownOfTheImmaculate': 846,
          'TheCrownOfTheImmaculateExtreme': 848,
          'TheCrystarium': 819,
          'TheDancingPlague': 845,
          'TheDancingPlagueExtreme': 858,
          'TheDarkInside': 992,
          'TheDeadEnds': 973,
          'TheDiadem': 929,
          'TheDiademEasy': 512,
          'TheDiademHard': 515,
          'TheDiademHuntingGrounds': 625,
          'TheDiademHuntingGroundsEasy': 624,
          'TheDiademTrialsOfTheFury': 630,
          'TheDiademTrialsOfTheMatron': 656,
          'TheDomanEnclave': 759,
          'TheDragonsNeck': 142,
          'TheDravanianForelands': 398,
          'TheDravanianHinterlands': 399,
          'TheDrownedCityOfSkalla': 1172,
          'TheDrownedCityOfSkalla64': 731,
          'TheDungeonsOfLyheGhiah': 879,
          'TheDuskVigil': 434,
          'TheDyingGasp': 847,
          'TheEpicOfAlexanderUltimate': 887,
          'TheExcitatron6000': 1000,
          'TheFaceOfTrueEvil': 709,
          'TheFeatOfTheBrotherhood': 1212,
          'TheFellCourtOfTroia': 1070,
          'TheFieldsOfGloryShatter': 554,
          'TheFinalCoilOfBahamutTurn1': 193,
          'TheFinalCoilOfBahamutTurn2': 194,
          'TheFinalCoilOfBahamutTurn3': 195,
          'TheFinalCoilOfBahamutTurn4': 196,
          'TheFinalDay': 997,
          'TheFinalStepsOfFaith': 559,
          'TheForbiddenLandEurekaAnemos': 732,
          'TheForbiddenLandEurekaHydatos': 827,
          'TheForbiddenLandEurekaPagos': 763,
          'TheForbiddenLandEurekaPyros': 795,
          'TheFractalContinuum': 430,
          'TheFractalContinuumHard': 743,
          'TheFringes': 612,
          'TheGameIsAfoot': 1177,
          'TheGhimlytDark': 1174,
          'TheGhimlytDark64': 793,
          'TheGiftOfMercy': 1019,
          'TheGildedAraya': 1136,
          'TheGrandCosmos': 884,
          'TheGreatGubalLibrary': 1109,
          'TheGreatGubalLibrary62': 416,
          'TheGreatGubalLibraryHard': 578,
          'TheGreatHunt': 761,
          'TheGreatHuntExtreme': 762,
          'TheGreatShipVylbrand': 954,
          'TheHardenedHeart': 873,
          'TheHarvestBegins': 1020,
          'TheHauntedManor': 571,
          'TheHeartOfTheProblem': 718,
          'TheHeroesGauntlet': 916,
          'TheHiddenCanalsOfUznair': 725,
          'TheHowlingEye': 1047,
          'TheHowlingEyeExtreme': 297,
          'TheHowlingEyeHard': 294,
          'TheHuntersLegacy': 875,
          'TheInterphos': 1202,
          'TheJadeStoa': 746,
          'TheJadeStoaExtreme': 758,
          'TheJadeStoaUnreal': 1239,
          'TheKeeperOfTheLake': 1063,
          'TheKeeperOfTheLake61': 150,
          'TheKillingArt': 1021,
          'TheLabyrinthOfTheAncients': 174,
          'TheLimitlessBlueExtreme': 447,
          'TheLimitlessBlueHard': 436,
          'TheLochs': 621,
          'TheLostAndTheFound': 874,
          'TheLostCanalsOfUznair': 712,
          'TheLostCityOfAmdapor': 363,
          'TheLostCityOfAmdaporHard': 519,
          'TheLunarSubterrane': 1164,
          'TheMaskedCarnivale': 796,
          'TheMightiestShield': 1217,
          'TheMinstrelsBalladEndsingersAria': 998,
          'TheMinstrelsBalladHadessElegy': 885,
          'TheMinstrelsBalladHydaelynsCall': 996,
          'TheMinstrelsBalladNidhoggsRage': 566,
          'TheMinstrelsBalladShinryusDomain': 730,
          'TheMinstrelsBalladSphenesBurden': 1243,
          'TheMinstrelsBalladThordansReign': 448,
          'TheMinstrelsBalladTsukuyomisPain': 779,
          'TheMinstrelsBalladUltimasBane': 348,
          'TheMinstrelsBalladZodiarksFall': 993,
          'TheMothercrystal': 995,
          'TheNavel': 1046,
          'TheNavelExtreme': 296,
          'TheNavelHard': 293,
          'TheNavelUnreal': 953,
          'TheOmegaProtocolUltimate': 1122,
          'TheOrbonneMonastery': 826,
          'TheOrphansAndTheBrokenBlade': 715,
          'ThePalaceOfTheDeadFloors101_110': 598,
          'ThePalaceOfTheDeadFloors111_120': 599,
          'ThePalaceOfTheDeadFloors11_20': 562,
          'ThePalaceOfTheDeadFloors121_130': 600,
          'ThePalaceOfTheDeadFloors131_140': 601,
          'ThePalaceOfTheDeadFloors141_150': 602,
          'ThePalaceOfTheDeadFloors151_160': 603,
          'ThePalaceOfTheDeadFloors161_170': 604,
          'ThePalaceOfTheDeadFloors171_180': 605,
          'ThePalaceOfTheDeadFloors181_190': 606,
          'ThePalaceOfTheDeadFloors191_200': 607,
          'ThePalaceOfTheDeadFloors1_10': 561,
          'ThePalaceOfTheDeadFloors21_30': 563,
          'ThePalaceOfTheDeadFloors31_40': 564,
          'ThePalaceOfTheDeadFloors41_50': 565,
          'ThePalaceOfTheDeadFloors51_60': 593,
          'ThePalaceOfTheDeadFloors61_70': 594,
          'ThePalaceOfTheDeadFloors71_80': 595,
          'ThePalaceOfTheDeadFloors81_90': 596,
          'ThePalaceOfTheDeadFloors91_100': 597,
          'ThePeaks': 620,
          'ThePhantomsFeast': 994,
          'ThePillars': 419,
          'ThePoolOfTribute': 674,
          'ThePoolOfTributeExtreme': 677,
          'ThePortaDecumana': 1048,
          'ThePraetorium': 1044,
          'TheProtectorAndTheDestroyer': 1213,
          'ThePuppetsBunker': 917,
          'TheQitanaRavel': 823,
          'TheRaktikaGreatwood': 817,
          'TheRedSands': 1138,
          'TheResonant': 684,
          'TheRidoranaLighthouse': 776,
          'TheRoyalCityOfRabanastre': 734,
          'TheRoyalMenagerie': 679,
          'TheRubySea': 613,
          'TheSeaOfClouds': 401,
          'TheSeatOfSacrifice': 922,
          'TheSeatOfSacrificeExtreme': 923,
          'TheSecondCoilOfBahamutSavageTurn1': 380,
          'TheSecondCoilOfBahamutSavageTurn2': 381,
          'TheSecondCoilOfBahamutSavageTurn3': 382,
          'TheSecondCoilOfBahamutSavageTurn4': 383,
          'TheSecondCoilOfBahamutTurn1': 355,
          'TheSecondCoilOfBahamutTurn2': 356,
          'TheSecondCoilOfBahamutTurn3': 357,
          'TheSecondCoilOfBahamutTurn4': 358,
          'TheShiftingAltarsOfUznair': 794,
          'TheShiftingGymnasionAgonon': 1123,
          'TheShiftingOubliettesOfLyheGhiah': 924,
          'TheSildihnSubterrane': 1069,
          'TheSingularityReactor': 437,
          'TheSingularityReactorUnreal': 1175,
          'TheSirensongSea': 1142,
          'TheSirensongSea63': 626,
          'TheSkydeepCenote': 1194,
          'TheStepsOfFaith': 1068,
          'TheStepsOfFaith61': 143,
          'TheStigmaDreamscape': 986,
          'TheStoneVigil': 1042,
          'TheStoneVigilHard': 365,
          'TheStrayboroughDeadwalk': 1204,
          'TheStrikingTreeExtreme': 375,
          'TheStrikingTreeHard': 374,
          'TheSunkenTempleOfQarn': 163,
          'TheSunkenTempleOfQarnHard': 367,
          'TheSwallowsCompass': 768,
          'TheTamTaraDeepcroft': 1037,
          'TheTamTaraDeepcroftHard': 373,
          'TheTempest': 818,
          'TheTempleOfTheFist': 663,
          'TheThousandMawsOfTotoRak': 1039,
          'TheTowerAtParadigmsBreach': 966,
          'TheTowerOfBabil': 969,
          'TheTowerOfZot': 952,
          'TheTripleTriadBattlehall': 579,
          'TheTwinning': 840,
          'TheUnendingCoilOfBahamutUltimate': 733,
          'TheValentionesCeremony': 741,
          'TheVault': 1066,
          'TheVault61': 421,
          'TheVoidArk': 508,
          'TheVoidcastDais': 1140,
          'TheVoidcastDaisExtreme': 1141,
          'TheWanderersPalace': 159,
          'TheWanderersPalaceHard': 188,
          'TheWarmthOfFamily': 1244,
          'TheWeaponsRefrainUltimate': 777,
          'TheWeepingCityOfMhach': 556,
          'TheWhorleaterExtreme': 359,
          'TheWhorleaterHard': 281,
          'TheWhorleaterUnreal': 972,
          'TheWillOfTheMoon': 797,
          'TheWorldOfDarkness': 151,
          'TheWreathOfSnakes': 824,
          'TheWreathOfSnakesExtreme': 825,
          'ThokAstThokExtreme': 446,
          'ThokAstThokHard': 432,
          'ThornmarchExtreme': 364,
          'ThornmarchHard': 1067,
          'ThornmarchHard61': 207,
          'ToCalmerSeas': 1016,
          'TripleTriadInvitationalParlor': 941,
          'TripleTriadOpenTournament': 940,
          'Tuliyollal': 1185,
          'UldahStepsOfNald': 130,
          'UldahStepsOfThal': 131,
          'UltimaThule': 960,
          'UltimasBaneUnreal': 1035,
          'UnderTheArmor': 190,
          'UpperLaNoscea': 139,
          'Urqopacha': 1187,
          'UrthsFount': 394,
          'Vanaspati': 970,
          'Vanguard': 1198,
          'VengeanceOfTheViper': 1236,
          'VowsOfVirtueDeedsOfCruelty': 893,
          'WardUp': 299,
          'WesternLaNoscea': 138,
          'WesternThanalan': 140,
          'WhenClansCollide': 723,
          'WhereEverythingBegins': 1091,
          'WithHeartAndSteel': 707,
          'WolvesDenPier': 250,
          'WorqorLarDor': 1195,
          'WorqorLarDorExtreme': 1196,
          'WorqorZormor': 1193,
          'WorthyOfHisBack': 1014,
          'Xelphatol': 1113,
          'Xelphatol62': 572,
          'YakTel': 1189,
          'Yanxia': 614,
          'YuweyawataFieldStation': 1242,
          'Zadnor': 975
        };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (data);

        /***/
      }),

/***/ 902:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
        /* harmony export */
      });
        // Auto-generated from gen_zone_id_and_info.ts
        // DO NOT EDIT THIS FILE DIRECTLY

        const data = {
          128: {
            'exVersion': 0,
            'name': {
              'cn': '利姆萨·罗敏萨上层甲板',
              'de': 'Obere Decks',
              'en': 'Limsa Lominsa Upper Decks',
              'fr': 'Limsa Lominsa - Le Tillac',
              'ja': 'リムサ・ロミンサ：上甲板層',
              'ko': '림사 로민사 상층 갑판'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 14
          },
          129: {
            'exVersion': 0,
            'name': {
              'cn': '利姆萨·罗敏萨下层甲板',
              'de': 'Untere Decks',
              'en': 'Limsa Lominsa Lower Decks',
              'fr': 'Limsa Lominsa - L\'Entrepont',
              'ja': 'リムサ・ロミンサ：下甲板層',
              'ko': '림사 로민사 하층 갑판'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 15
          },
          130: {
            'exVersion': 0,
            'name': {
              'cn': '乌尔达哈现世回廊',
              'de': 'Nald-Kreuzgang',
              'en': 'Ul\'dah - Steps of Nald',
              'fr': 'Ul\'dah - Faubourg de Nald',
              'ja': 'ウルダハ：ナル回廊',
              'ko': '울다하 날 회랑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 7
          },
          131: {
            'exVersion': 0,
            'name': {
              'cn': '乌尔达哈来生回廊',
              'de': 'Thal-Kreuzgang',
              'en': 'Ul\'dah - Steps of Thal',
              'fr': 'Ul\'dah - Faubourg de Thal',
              'ja': 'ウルダハ：ザル回廊',
              'ko': '울다하 달 회랑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 8
          },
          132: {
            'exVersion': 0,
            'name': {
              'cn': '格里达尼亚新街',
              'de': 'Neu-Gridania',
              'en': 'New Gridania',
              'fr': 'Nouvelle Gridania',
              'ja': 'グリダニア：新市街',
              'ko': '그리다니아 신시가지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 1
          },
          133: {
            'exVersion': 0,
            'name': {
              'cn': '格里达尼亚旧街',
              'de': 'Alt-Gridania',
              'en': 'Old Gridania',
              'fr': 'Vieille Gridania',
              'ja': 'グリダニア：旧市街',
              'ko': '그리다니아 구시가지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 2
          },
          134: {
            'exVersion': 0,
            'name': {
              'cn': '中拉诺西亚',
              'de': 'Zentrales La Noscea',
              'en': 'Middle La Noscea',
              'fr': 'Noscea centrale',
              'ja': '中央ラノシア',
              'ko': '중부 라노시아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 16
          },
          135: {
            'exVersion': 0,
            'name': {
              'cn': '拉诺西亚低地',
              'de': 'Unteres La Noscea',
              'en': 'Lower La Noscea',
              'fr': 'Basse-Noscea',
              'ja': '低地ラノシア',
              'ko': '저지 라노시아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 17
          },
          136: {
            'exVersion': 0,
            'name': {
              'cn': '海雾村',
              'de': 'Dorf des Nebels',
              'en': 'Mist',
              'fr': 'Brumée',
              'ja': 'ミスト・ヴィレッジ',
              'ko': '안갯빛 마을'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 14
          },
          137: {
            'exVersion': 0,
            'name': {
              'cn': '东拉诺西亚',
              'de': 'Östliches La Noscea',
              'en': 'Eastern La Noscea',
              'fr': 'Noscea orientale',
              'ja': '東ラノシア',
              'ko': '동부 라노시아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 18
          },
          138: {
            'exVersion': 0,
            'name': {
              'cn': '西拉诺西亚',
              'de': 'Westliches La Noscea',
              'en': 'Western La Noscea',
              'fr': 'Noscea occidentale',
              'ja': '西ラノシア',
              'ko': '서부 라노시아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 19
          },
          139: {
            'exVersion': 0,
            'name': {
              'cn': '拉诺西亚高地',
              'de': 'Oberes La Noscea',
              'en': 'Upper La Noscea',
              'fr': 'Haute-Noscea',
              'ja': '高地ラノシア',
              'ko': '고지 라노시아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 20
          },
          140: {
            'exVersion': 0,
            'name': {
              'cn': '西萨纳兰',
              'de': 'Westliches Thanalan',
              'en': 'Western Thanalan',
              'fr': 'Thanalan occidental',
              'ja': '西ザナラーン',
              'ko': '서부 다날란'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 9
          },
          141: {
            'exVersion': 0,
            'name': {
              'cn': '中萨纳兰',
              'de': 'Zentrales Thanalan',
              'en': 'Central Thanalan',
              'fr': 'Thanalan central',
              'ja': '中央ザナラーン',
              'ko': '중부 다날란'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 10
          },
          142: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '艾玛吉娜杯斗技大会决赛',
              'de': 'Das Drachenhals-Kolosseum',
              'en': 'The Dragon\'s Neck',
              'fr': 'Le Col du dragon',
              'ja': 'アマジナ杯闘技会決勝戦',
              'ko': '아마지나배 투기대회 결승전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          143: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '(6.1)皇都伊修加德保卫战',
              'de': '(6.1)Der Schicksalsweg',
              'en': '(6.1)The Steps of Faith',
              'fr': '(6.1)Le Siège de la sainte Cité d\'Ishgard',
              'ja': '(6.1)皇都イシュガルド防衛戦',
              'ko': '(6.1)성도 이슈가르드 방어전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          145: {
            'exVersion': 0,
            'name': {
              'cn': '东萨纳兰',
              'de': 'Östliches Thanalan',
              'en': 'Eastern Thanalan',
              'fr': 'Thanalan oriental',
              'ja': '東ザナラーン',
              'ko': '동부 다날란'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 11
          },
          146: {
            'exVersion': 0,
            'name': {
              'cn': '南萨纳兰',
              'de': 'Südliches Thanalan',
              'en': 'Southern Thanalan',
              'fr': 'Thanalan méridional',
              'ja': '南ザナラーン',
              'ko': '남부 다날란'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 12
          },
          147: {
            'exVersion': 0,
            'name': {
              'cn': '北萨纳兰',
              'de': 'Nördliches Thanalan',
              'en': 'Northern Thanalan',
              'fr': 'Thanalan septentrional',
              'ja': '北ザナラーン',
              'ko': '북부 다날란'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 13
          },
          148: {
            'exVersion': 0,
            'name': {
              'cn': '黑衣森林中央林区',
              'de': 'Tiefer Wald',
              'en': 'Central Shroud',
              'fr': 'Forêt centrale',
              'ja': '黒衣森：中央森林',
              'ko': '검은장막 숲 중부삼림'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 3
          },
          150: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '(6.1)幻龙残骸密约之塔',
              'de': '(6.1)Hüter des Sees',
              'en': '(6.1)The Keeper of the Lake',
              'fr': '(6.1)Le Gardien du lac',
              'ja': '(6.1)幻龍残骸 黙約の塔',
              'ko': '(6.1)묵약의 탑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 74
          },
          151: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '水晶塔 暗之世界',
              'de': 'Die Welt der Dunkelheit',
              'en': 'The World of Darkness',
              'fr': 'La Tour de Cristal - Monde des Ténèbres',
              'ja': 'クリスタルタワー：闇の世界',
              'ko': '크리스탈 타워: 어둠의 세계'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          152: {
            'exVersion': 0,
            'name': {
              'cn': '黑衣森林东部林区',
              'de': 'Ostwald',
              'en': 'East Shroud',
              'fr': 'Forêt de l\'est',
              'ja': '黒衣森：東部森林',
              'ko': '검은장막 숲 동부삼림'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 4
          },
          153: {
            'exVersion': 0,
            'name': {
              'cn': '黑衣森林南部林区',
              'de': 'Südwald',
              'en': 'South Shroud',
              'fr': 'Forêt du sud',
              'ja': '黒衣森：南部森林',
              'ko': '검은장막 숲 남부삼림'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 5
          },
          154: {
            'exVersion': 0,
            'name': {
              'cn': '黑衣森林北部林区',
              'de': 'Nordwald',
              'en': 'North Shroud',
              'fr': 'Forêt du nord',
              'ja': '黒衣森：北部森林',
              'ko': '검은장막 숲 북부삼림'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 6
          },
          155: {
            'exVersion': 0,
            'name': {
              'cn': '库尔札斯中央高地',
              'de': 'Zentrales Hochland von Coerthas',
              'en': 'Coerthas Central Highlands',
              'fr': 'Hautes terres du Coerthas central',
              'ja': 'クルザス中央高地',
              'ko': '커르다스 중앙고지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 21
          },
          156: {
            'exVersion': 0,
            'name': {
              'cn': '摩杜纳',
              'de': 'Mor Dhona',
              'en': 'Mor Dhona',
              'fr': 'Mor Dhona',
              'ja': 'モードゥナ',
              'ko': '모르도나'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 22
          },
          159: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '神灵圣域放浪神古神殿',
              'de': 'Palast des Wanderers',
              'en': 'The Wanderer\'s Palace',
              'fr': 'Le Palais du Vagabond',
              'ja': '旅神聖域 ワンダラーパレス',
              'ko': '방랑자의 궁전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          160: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '领航明灯天狼星灯塔',
              'de': 'Pharos Sirius',
              'en': 'Pharos Sirius',
              'fr': 'Le Phare de Sirius',
              'ja': '怪鳥巨塔 シリウス大灯台',
              'ko': '시리우스 대등대'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          162: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '(7.0)魔兽领域日影地修炼所',
              'de': '(7.0)Halatali',
              'en': '(7.0)Halatali',
              'fr': '(7.0)Halatali',
              'ja': '(7.0)魔獣領域 ハラタリ修練所',
              'ko': '(7.0)할라탈리 수련장'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          163: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '古代遗迹喀恩埋没圣堂',
              'de': 'Versunkener Tempel von Qarn',
              'en': 'The Sunken Temple of Qarn',
              'fr': 'Le Temple enseveli de Qarn',
              'ja': '遺跡探索 カルン埋没寺院',
              'ko': '카른의 무너진 사원'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          167: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '邪教驻地无限城古堡',
              'de': 'Die Ruinen von Amdapor',
              'en': 'Amdapor Keep',
              'fr': 'Le Château d\'Amdapor',
              'ja': '邪教排撃 古城アムダプール',
              'ko': '옛 암다포르 성'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          170: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '流沙迷宫樵鸣洞',
              'de': 'Sägerschrei',
              'en': 'Cutter\'s Cry',
              'fr': 'Le Gouffre hurlant',
              'ja': '流砂迷宮 カッターズクライ',
              'ko': '나무꾼의 비명'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          171: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '山中战线泽梅尔要塞',
              'de': 'Die Feste Dzemael',
              'en': 'Dzemael Darkhold',
              'fr': 'La Forteresse de Dzemael',
              'ja': '掃討作戦 ゼーメル要塞',
              'ko': '제멜 요새'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          172: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '毒雾洞窟黄金谷',
              'de': 'Goldklamm',
              'en': 'The Aurum Vale',
              'fr': 'Le Val d\'Aurum',
              'ja': '霧中行軍 オーラムヴェイル',
              'ko': '금빛 골짜기'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          174: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '水晶塔 古代人迷宫',
              'de': 'Kristallturm - Das Labyrinth der Alten',
              'en': 'The Labyrinth of the Ancients',
              'fr': 'La Tour de Cristal - Dédale antique',
              'ja': 'クリスタルタワー：古代の民の迷宮',
              'ko': '크리스탈 타워: 고대인의 미궁'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          180: {
            'exVersion': 0,
            'name': {
              'cn': '拉诺西亚外地',
              'de': 'Äußeres La Noscea',
              'en': 'Outer La Noscea',
              'fr': 'Noscea extérieure',
              'ja': '外地ラノシア',
              'ko': '외지 라노시아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 24
          },
          188: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '武装圣域放浪神古神殿',
              'de': 'Palast des Wanderers (schwer)',
              'en': 'The Wanderer\'s Palace (Hard)',
              'fr': 'Le Palais du Vagabond (brutal)',
              'ja': '武装聖域 ワンダラーパレス (Hard)',
              'ko': '방랑자의 궁전(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          189: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '邪念妖地无限城古堡',
              'de': 'Die Ruinen von Amdapor (schwer)',
              'en': 'Amdapor Keep (Hard)',
              'fr': 'Le Château d\'Amdapor (brutal)',
              'ja': '邪念排撃 古城アムダプール (Hard)',
              'ko': '옛 암다포르 성(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          190: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '讨伐彷徨死灵！',
              'de': 'Bockmanns Gefolge',
              'en': 'Under the Armor',
              'fr': 'Chasse au fantôme fantoche',
              'ja': '彷徨う死霊を討て！',
              'ko': '방황하는 사령을 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 3
          },
          191: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '驱除剧毒妖花！',
              'de': 'Unkraut jäten',
              'en': 'Pulling Poison Posies',
              'fr': 'Opération fleurs du mal',
              'ja': '有毒妖花を駆除せよ！',
              'ko': '독성 요괴꽃을 제거하라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 4
          },
          192: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '消灭恶徒团伙寄生蜂团！',
              'de': 'Ins Wespennest stechen',
              'en': 'Stinging Back',
              'fr': 'Expédition punitive contre les Ventrerouge',
              'ja': '無法者「似我蜂団」を撃滅せよ！',
              'ko': '무법자 집단 \'나나니단\'을 섬멸하라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 5
          },
          193: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 真源之章1',
              'de': 'Verschlungene Schatten 3 - 1',
              'en': 'The Final Coil of Bahamut - Turn 1',
              'fr': 'L\'Abîme de Bahamut I',
              'ja': '大迷宮バハムート：真成編1',
              'ko': '대미궁 바하무트: 진성편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          194: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 真源之章2',
              'de': 'Verschlungene Schatten 3 - 2',
              'en': 'The Final Coil of Bahamut - Turn 2',
              'fr': 'L\'Abîme de Bahamut II',
              'ja': '大迷宮バハムート：真成編2',
              'ko': '대미궁 바하무트: 진성편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          195: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 真源之章3',
              'de': 'Verschlungene Schatten 3 - 3',
              'en': 'The Final Coil of Bahamut - Turn 3',
              'fr': 'L\'Abîme de Bahamut III',
              'ja': '大迷宮バハムート：真成編3',
              'ko': '대미궁 바하무트: 진성편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          196: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 真源之章4',
              'de': 'Verschlungene Schatten 3 - 4',
              'en': 'The Final Coil of Bahamut - Turn 4',
              'fr': 'L\'Abîme de Bahamut IV',
              'ja': '大迷宮バハムート：真成編4',
              'ko': '대미궁 바하무트: 진성편 4'
            },
            'offsetX': -448,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 44
          },
          207: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '(6.1)莫古力贤王歼灭战',
              'de': '(6.1)Königliche Konfrontation (schwer)',
              'en': '(6.1)Thornmarch (Hard)',
              'fr': '(6.1)La Lisière de ronces (brutal)',
              'ja': '(6.1)善王モグル・モグXII世討滅戦',
              'ko': '(6.1)선왕 모그루 모그 XII세 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 30
          },
          214: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '完成集团战训练！',
              'de': 'Einer für alle, alle für einen',
              'en': 'Basic Training: Enemy Parties',
              'fr': 'Entraînement : groupes d\'ennemis',
              'ja': '集団戦訓練をくぐり抜けろ！',
              'ko': '집단전 훈련을 완수하라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 16
          },
          215: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '突破所有关门，讨伐最深处的敌人！',
              'de': 'Sturmkommando',
              'en': 'Basic Training: Enemy Strongholds',
              'fr': 'Entraînement : in­fil­tra­tion en base ennemie',
              'ja': '全関門を突破し、最深部の敵を討て！',
              'ko': '관문을 돌파하고 최심부의 적을 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 9
          },
          216: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '捕获金币龟！',
              'de': 'Gil oder Leben',
              'en': 'Hero on the Half Shell',
              'fr': 'Reconquête d\'une carapace escamotée',
              'ja': 'ギルガメを捕獲せよ！',
              'ko': '길거북을 사로잡아라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 10
          },
          219: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '击溃哥布林炸弹军团！',
              'de': 'Bombige Goblins',
              'en': 'Flicking Sticks and Taking Names',
              'fr': 'Les Gobelins bombardiers',
              'ja': '爆弾魔ゴブリン軍団を撃滅せよ！',
              'ko': '폭탄광 고블린 군단을 섬멸하라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 3
          },
          220: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '讨伐梦幻之布拉奇希奥！',
              'de': 'Briaxio ausschalten',
              'en': 'All\'s Well that Ends in the Well',
              'fr': 'Briaxio à bras raccourcis',
              'ja': '夢幻のブラキシオを討て！',
              'ko': '몽환의 브라크시오를 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 5
          },
          221: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '讨伐污染源头魔界花！',
              'de': 'Tödliches Rankenspiel',
              'en': 'More than a Feeler',
              'fr': 'Sus au morbol pollueur',
              'ja': '汚染源モルボルを討て！',
              'ko': '오염원 몰볼을 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 20
          },
          222: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '讨伐坑道中出现的妖异！',
              'de': 'Gefahr aus dem Nichts',
              'en': 'Annoy the Void',
              'fr': 'Buso l\'immolateur',
              'ja': '坑道に現れた妖異ブソを討て！',
              'ko': '갱도에 나타난 요마 부소를 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 17
          },
          223: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '注意无敌的眷属，讨伐大型妖异！',
              'de': 'Kampf gegen Schatten',
              'en': 'Shadow and Claw',
              'fr': 'Ombres et griffes',
              'ja': '無敵の眷属を従えし、大型妖異を討て！',
              'ko': '무적의 부하를 조종하는 요마를 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 21
          },
          241: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 邂逅之章1',
              'de': 'Verschlungene Schatten 1',
              'en': 'The Binding Coil of Bahamut - Turn 1',
              'fr': 'Le Labyrinthe de Bahamut I',
              'ja': '大迷宮バハムート：邂逅編1',
              'ko': '대미궁 바하무트: 해후편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          242: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 邂逅之章2',
              'de': 'Verschlungene Schatten 2',
              'en': 'The Binding Coil of Bahamut - Turn 2',
              'fr': 'Le Labyrinthe de Bahamut II',
              'ja': '大迷宮バハムート：邂逅編2',
              'ko': '대미궁 바하무트: 해후편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          243: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 邂逅之章3',
              'de': 'Verschlungene Schatten 3',
              'en': 'The Binding Coil of Bahamut - Turn 3',
              'fr': 'Le Labyrinthe de Bahamut III',
              'ja': '大迷宮バハムート：邂逅編3',
              'ko': '대미궁 바하무트: 해후편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          244: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 邂逅之章4',
              'de': 'Verschlungene Schatten 4',
              'en': 'The Binding Coil of Bahamut - Turn 4',
              'fr': 'Le Labyrinthe de Bahamut IV',
              'ja': '大迷宮バハムート：邂逅編4',
              'ko': '대미궁 바하무트: 해후편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          245: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 邂逅之章5',
              'de': 'Verschlungene Schatten 5',
              'en': 'The Binding Coil of Bahamut - Turn 5',
              'fr': 'Le Labyrinthe de Bahamut V',
              'ja': '大迷宮バハムート：邂逅編5',
              'ko': '대미궁 바하무트: 해후편 5'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          250: {
            'exVersion': 0,
            'name': {
              'cn': '狼狱停船场',
              'de': 'Wolfshöhlen-Pier',
              'en': 'Wolves\' Den Pier',
              'fr': 'Jetée de l\'Antre des loups',
              'ja': 'ウルヴズジェイル係船場',
              'ko': '늑대우리 부두'
            },
            'offsetX': -77,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 29
          },
          281: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '利维亚桑歼灭战',
              'de': 'Götterdämmerung - Leviathan',
              'en': 'The Whorleater (Hard)',
              'fr': 'Le Briseur de marées (brutal)',
              'ja': '真リヴァイアサン討滅戦',
              'ko': '진 리바이어선 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 38
          },
          292: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '伊弗利特歼灭战',
              'de': 'Götterdämmerung - Ifrit',
              'en': 'The Bowl of Embers (Hard)',
              'fr': 'Le Cratère des tisons (brutal)',
              'ja': '真イフリート討滅戦',
              'ko': '진 이프리트 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 25
          },
          293: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '泰坦歼灭战',
              'de': 'Götterdämmerung - Titan',
              'en': 'The Navel (Hard)',
              'fr': 'Le Nombril (brutal)',
              'ja': '真タイタン討滅戦',
              'ko': '진 타이탄 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          294: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '迦楼罗歼灭战',
              'de': 'Götterdämmerung - Garuda',
              'en': 'The Howling Eye (Hard)',
              'fr': 'Hurlœil (brutal)',
              'ja': '真ガルーダ討滅戦',
              'ko': '진 가루다 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 26
          },
          295: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '伊弗利特歼殛战',
              'de': 'Zenit der Götter - Ifrit',
              'en': 'The Bowl of Embers (Extreme)',
              'fr': 'Le Cratère des tisons (extrême)',
              'ja': '極イフリート討滅戦',
              'ko': '극 이프리트 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 25
          },
          296: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '泰坦歼殛战',
              'de': 'Zenit der Götter - Titan',
              'en': 'The Navel (Extreme)',
              'fr': 'Le Nombril (extrême)',
              'ja': '極タイタン討滅戦',
              'ko': '극 타이탄 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          297: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '迦楼罗歼殛战',
              'de': 'Zenit der Götter - Garuda',
              'en': 'The Howling Eye (Extreme)',
              'fr': 'Hurlœil (extrême)',
              'ja': '極ガルーダ討滅戦',
              'ko': '극 가루다 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 26
          },
          298: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '讨伐爆弹怪的女王！',
              'de': 'Miss Bombastic',
              'en': 'Long Live the Queen',
              'fr': 'Longue vie à la Reine',
              'ja': 'ボムを率いる「ボムクイーン」を討て！',
              'ko': '봄을 거느린 \'봄 여왕\'을 쓰러뜨려라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 21
          },
          299: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '歼灭特殊阵型的妖异！',
              'de': 'Unzertrennlich',
              'en': 'Ward Up',
              'fr': 'Quintettes infernaux',
              'ja': '不気味な陣形を組む妖異をせん滅せよ！',
              'ko': '불길한 진형을 짜는 요마를 섬멸하라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 22
          },
          300: {
            'contentType': 3,
            'exVersion': 0,
            'name': {
              'cn': '制止三方混战的巨人族，守住遗物！',
              'de': 'Wuchtige Dreifaltigkeit',
              'en': 'Solemn Trinity',
              'fr': 'Trinité sinistre',
              'ja': '三つ巴の巨人族を制し、遺物を守れ！',
              'ko': '세 거인족을 제압하여 유물을 지켜내라!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 22
          },
          348: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '究极神兵假想作战',
              'de': 'Heldenlied von Ultima',
              'en': 'The Minstrel\'s Ballad: Ultima\'s Bane',
              'fr': 'Le fléau d\'Ultima',
              'ja': '究極幻想 アルテマウェポン破壊作戦',
              'ko': '궁극의 환상 알테마 웨폰 파괴작전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 31
          },
          349: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '骚乱坑道铜铃铜山',
              'de': 'Kupferglocken-Mine (schwer)',
              'en': 'Copperbell Mines (Hard)',
              'fr': 'Les Mines de Clochecuivre (brutal)',
              'ja': '騒乱坑道 カッパーベル銅山 (Hard)',
              'ko': '구리종 광산(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          350: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '恶灵府邸静语庄园',
              'de': 'Haukke-Herrenhaus (schwer)',
              'en': 'Haukke Manor (Hard)',
              'fr': 'Le Manoir des Haukke (brutal)',
              'ja': '妖異屋敷 ハウケタ御用邸 (Hard)',
              'ko': '하우케타 별궁(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          353: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '活动挑战2',
              'de': 'Event-Inhalt 1',
              'en': 'Special Event I',
              'fr': 'Défi spécial I',
              'ja': 'イベント用コンテンツ：1',
              'ko': '이벤트용 임무: 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          354: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '活动挑战3',
              'de': 'Event-Inhalt 2',
              'en': 'Special Event II',
              'fr': 'Défi spécial II',
              'ja': 'イベント用コンテンツ：2',
              'ko': '이벤트용 임무: 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 103
          },
          355: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 入侵之章1',
              'de': 'Verschlungene Schatten 2 - 1',
              'en': 'The Second Coil of Bahamut - Turn 1',
              'fr': 'Les Méandres de Bahamut I',
              'ja': '大迷宮バハムート：侵攻編1',
              'ko': '대미궁 바하무트: 침공편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          356: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 入侵之章2',
              'de': 'Verschlungene Schatten 2 - 2',
              'en': 'The Second Coil of Bahamut - Turn 2',
              'fr': 'Les Méandres de Bahamut II',
              'ja': '大迷宮バハムート：侵攻編2',
              'ko': '대미궁 바하무트: 침공편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          357: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 入侵之章3',
              'de': 'Verschlungene Schatten 2 - 3',
              'en': 'The Second Coil of Bahamut - Turn 3',
              'fr': 'Les Méandres de Bahamut III',
              'ja': '大迷宮バハムート：侵攻編3',
              'ko': '대미궁 바하무트: 침공편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          358: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特大迷宫 入侵之章4',
              'de': 'Verschlungene Schatten 2 - 4',
              'en': 'The Second Coil of Bahamut - Turn 4',
              'fr': 'Les Méandres de Bahamut IV',
              'ja': '大迷宮バハムート：侵攻編4',
              'ko': '대미궁 바하무트: 침공편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          359: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '利维亚桑歼殛战',
              'de': 'Zenit der Götter - Leviathan',
              'en': 'The Whorleater (Extreme)',
              'fr': 'Le Briseur de marées (extrême)',
              'ja': '極リヴァイアサン討滅戦',
              'ko': '극 리바이어선 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 38
          },
          360: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '剑斗领域日影地修炼所',
              'de': 'Halatali (schwer)',
              'en': 'Halatali (Hard)',
              'fr': 'Halatali (brutal)',
              'ja': '剣闘領域 ハラタリ修練所 (Hard)',
              'ko': '할라탈리 수련장(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          361: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '财宝传说破舰岛',
              'de': 'Schiffbrecher-Insel',
              'en': 'Hullbreaker Isle',
              'fr': 'L\'Île de Crèvecarène',
              'ja': '財宝伝説 ハルブレーカー・アイル',
              'ko': '난파선의 섬'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          362: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '纷争要地布雷福洛克斯野营地',
              'de': 'Brüllvolx\' Langrast (schwer)',
              'en': 'Brayflox\'s Longstop (Hard)',
              'fr': 'Le Bivouac de Brayflox (brutal)',
              'ja': '盟友支援 ブレイフロクスの野営地 (Hard)',
              'ko': '브레이플록스의 야영지(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 37
          },
          363: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '腐坏遗迹无限城市街古迹',
              'de': 'Historisches Amdapor',
              'en': 'The Lost City of Amdapor',
              'fr': 'Les Vestiges de la cité d\'Amdapor',
              'ja': '腐敗遺跡 古アムダプール市街',
              'ko': '옛 암다포르 시가지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          364: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '莫古力贤王歼殛战',
              'de': 'Königliche Konfrontation (extrem)',
              'en': 'Thornmarch (Extreme)',
              'fr': 'La Lisière de ronces (extrême)',
              'ja': '極王モグル・モグXII世討滅戦',
              'ko': '극왕 모그루 모그 XII세 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 30
          },
          365: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '激战城塞石卫塔',
              'de': 'Steinerne Wacht (schwer)',
              'en': 'The Stone Vigil (Hard)',
              'fr': 'Le Vigile de Pierre (brutal)',
              'ja': '城塞奪回 ストーンヴィジル (Hard)',
              'ko': '돌방패 경계초소(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 42
          },
          366: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '大桥上的决斗',
              'de': 'Duell auf der großen Brücke',
              'en': 'Battle on the Big Bridge',
              'fr': 'Affrontement sur le grand pont',
              'ja': 'ギルガメッシュ討伐戦',
              'ko': '길가메시 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          367: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '苏醒遗迹喀恩埋没圣堂',
              'de': 'Versunkener Tempel von Qarn (schwer)',
              'en': 'The Sunken Temple of Qarn (Hard)',
              'fr': 'Le Temple enseveli de Qarn (brutal)',
              'ja': '遺跡救援 カルン埋没寺院 (Hard)',
              'ko': '카른의 무너진 사원(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 41
          },
          368: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '死化奇美拉讨伐战',
              'de': 'Kampf gegen die Dhorme-Chimära',
              'en': 'A Relic Reborn: the Chimera',
              'fr': 'La chimère dhorme du Coerthas',
              'ja': 'ドルムキマイラ討伐戦',
              'ko': '도름 키마이라 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 21
          },
          369: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '海德拉讨伐战',
              'de': 'Kampf gegen die Hydra',
              'en': 'A Relic Reborn: the Hydra',
              'fr': 'L\'hydre d\'Halatali',
              'ja': 'ハイドラ討伐戦',
              'ko': '하이드라 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          371: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '(6.1)凛冽洞天披雪大冰壁',
              'de': '(6.1)Das Schneekleid',
              'en': '(6.1)Snowcloak',
              'fr': '(6.1)Manteneige',
              'ja': '(6.1)氷結潜窟 スノークローク大氷壁',
              'ko': '(6.1)얼음외투 대빙벽'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 42
          },
          372: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '水晶塔 希尔科斯塔',
              'de': 'Kristallturm - Der Syrcus-Turm',
              'en': 'Syrcus Tower',
              'fr': 'La Tour de Cristal - Tour de Syrcus',
              'ja': 'クリスタルタワー：シルクスの塔',
              'ko': '크리스탈 타워: 시르쿠스 탑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          373: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '惨剧灵殿塔姆·塔拉墓园',
              'de': 'Totenacker Tam-Tara (schwer)',
              'en': 'The Tam–Tara Deepcroft (Hard)',
              'fr': 'L\'Hypogée de Tam-Tara (brutal)',
              'ja': '惨劇霊殿 タムタラの墓所 (Hard)',
              'ko': '탐타라 묘소(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 300,
            'weatherRate': 0
          },
          374: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '拉姆歼灭战',
              'de': 'Götterdämmerung - Ramuh',
              'en': 'The Striking Tree (Hard)',
              'fr': 'L\'Arbre du jugement (brutal)',
              'ja': '真ラムウ討滅戦',
              'ko': '진 라무 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 43
          },
          375: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '拉姆歼殛战',
              'de': 'Zenit der Götter - Ramuh',
              'en': 'The Striking Tree (Extreme)',
              'fr': 'L\'Arbre du jugement (extrême)',
              'ja': '極ラムウ討滅戦',
              'ko': '극 라무 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 43
          },
          376: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '周边遗迹群（阵地战）',
              'de': 'Äußere Ruinen (Sicherung)',
              'en': 'The Borderland Ruins (Secure)',
              'fr': 'Les Ruines frontalières (annexion)',
              'ja': '外縁遺跡群 (制圧戦)',
              'ko': '외곽 유적지대(제압전)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          377: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '希瓦歼灭战',
              'de': 'Götterdämmerung - Shiva',
              'en': 'The Akh Afah Amphitheatre (Hard)',
              'fr': 'L\'Amphithéâtre d\'Akh Afah (brutal)',
              'ja': '真シヴァ討滅戦',
              'ko': '진 시바 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 46
          },
          378: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '希瓦歼殛战',
              'de': 'Zenit der Götter - Shiva',
              'en': 'The Akh Afah Amphitheatre (Extreme)',
              'fr': 'L\'Amphithéâtre d\'Akh Afah (extrême)',
              'ja': '極シヴァ討滅戦',
              'ko': '극 시바 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 46
          },
          380: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特零式大迷宫 入侵之章1',
              'de': 'Verschlungene Schatten 2 - 1 (episch)',
              'en': 'The Second Coil of Bahamut (Savage) - Turn 1',
              'fr': 'Les Méandres de Bahamut I (sadique)',
              'ja': '大迷宮バハムート零式：侵攻編1',
              'ko': '대미궁 바하무트: 침공편(영웅) 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          381: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特零式大迷宫 入侵之章2',
              'de': 'Verschlungene Schatten 2 - 2 (episch)',
              'en': 'The Second Coil of Bahamut (Savage) - Turn 2',
              'fr': 'Les Méandres de Bahamut II (sadique)',
              'ja': '大迷宮バハムート零式：侵攻編2',
              'ko': '대미궁 바하무트: 침공편(영웅) 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          382: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特零式大迷宫 入侵之章3',
              'de': 'Verschlungene Schatten 2 - 3 (episch)',
              'en': 'The Second Coil of Bahamut (Savage) - Turn 3',
              'fr': 'Les Méandres de Bahamut III (sadique)',
              'ja': '大迷宮バハムート零式：侵攻編3',
              'ko': '대미궁 바하무트: 침공편(영웅) 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          383: {
            'contentType': 5,
            'exVersion': 0,
            'name': {
              'cn': '巴哈姆特零式大迷宫 入侵之章4',
              'de': 'Verschlungene Schatten 2 - 4 (episch)',
              'en': 'The Second Coil of Bahamut (Savage) - Turn 4',
              'fr': 'Les Méandres de Bahamut IV (sadique)',
              'ja': '大迷宮バハムート零式：侵攻編4',
              'ko': '대미궁 바하무트: 침공편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          387: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '逆转要害沙斯塔夏溶洞',
              'de': 'Sastasha (schwer)',
              'en': 'Sastasha (Hard)',
              'fr': 'Sastasha (brutal)',
              'ja': '逆襲要害 サスタシャ浸食洞 (Hard)',
              'ko': '사스타샤 침식 동굴(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          389: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '陆行鸟竞赛：太阳海岸',
              'de': 'Chocobo-Rennen: Sonnenküste',
              'en': 'Chocobo Race: Costa del Sol',
              'fr': 'Course de chocobos : Costa del Sol',
              'ja': 'チョコボレース：コスタ・デル・ソル',
              'ko': '초코보 경주: 코스타 델 솔'
            },
            'offsetX': -472,
            'offsetY': -424,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          390: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '陆行鸟竞赛：荒野大道',
              'de': 'Chocobo-Rennen: Sagolii-Straße',
              'en': 'Chocobo Race: Sagolii Road',
              'fr': 'Course de chocobos : Route de Sagolii',
              'ja': 'チョコボレース：サゴリーロード',
              'ko': '초코보 경주: 사골리 사막'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          391: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '陆行鸟竞赛：恬静小路',
              'de': 'Chocobo-Rennen: Pfad der Seelenruhe',
              'en': 'Chocobo Race: Tranquil Paths',
              'fr': 'Course de chocobos : Sentes tranquilles',
              'ja': 'チョコボレース：トランキルパス',
              'ko': '초코보 경주: 고요한 야영지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          394: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '奥丁歼灭战',
              'de': 'Jenseits Urths Quelle',
              'en': 'Urth\'s Fount',
              'fr': 'La Fontaine d\'Urth',
              'ja': '闘神オーディン討滅戦',
              'ko': '투신 오딘 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 45
          },
          396: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '无限城的死斗',
              'de': 'Revanche in den Ruinen',
              'en': 'Battle in the Big Keep',
              'fr': 'Revanche au vieux château',
              'ja': '真ギルガメッシュ討滅戦',
              'ko': '진 길가메시 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          397: {
            'exVersion': 1,
            'name': {
              'cn': '库尔札斯西部高地',
              'de': 'Westliches Hochland von Coerthas',
              'en': 'Coerthas Western Highlands',
              'fr': 'Hautes terres du Coerthas occidental',
              'ja': 'クルザス西部高地',
              'ko': '커르다스 서부고지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 49
          },
          398: {
            'exVersion': 1,
            'name': {
              'cn': '龙堡参天高地',
              'de': 'Dravanisches Vorland',
              'en': 'The Dravanian Forelands',
              'fr': 'Avant-pays dravanien',
              'ja': '高地ドラヴァニア',
              'ko': '고지 드라바니아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 50
          },
          399: {
            'exVersion': 1,
            'name': {
              'cn': '龙堡内陆低地',
              'de': 'Dravanisches Hinterland',
              'en': 'The Dravanian Hinterlands',
              'fr': 'Arrière-pays dravanien',
              'ja': '低地ドラヴァニア',
              'ko': '저지 드라바니아'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 51
          },
          400: {
            'exVersion': 1,
            'name': {
              'cn': '翻云雾海',
              'de': 'Wallende Nebel',
              'en': 'The Churning Mists',
              'fr': 'L\'Écume des cieux de Dravania',
              'ja': 'ドラヴァニア雲海',
              'ko': '드라바니아 구름바다'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 52
          },
          401: {
            'exVersion': 1,
            'name': {
              'cn': '阿巴拉提亚云海',
              'de': 'Abalathisches Wolkenmeer',
              'en': 'The Sea of Clouds',
              'fr': 'L\'Écume des cieux d\'Abalathia',
              'ja': 'アバラシア雲海',
              'ko': '아발라시아 구름바다'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 53
          },
          402: {
            'exVersion': 1,
            'name': {
              'cn': '魔大陆阿济兹拉',
              'de': 'Azys Lla',
              'en': 'Azys Lla',
              'fr': 'Azys Lla',
              'ja': 'アジス・ラー',
              'ko': '아지스 라'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 54
          },
          403: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '英雄归来',
              'de': 'Verrat der Qalyana',
              'en': 'Return of the Bull',
              'fr': 'Retour au bercail',
              'ja': '英雄の帰還',
              'ko': '영웅의 귀환'
            },
            'offsetX': -250,
            'offsetY': 128,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          416: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.2)学识宝库迦巴勒幻想图书馆',
              'de': '(6.2)Große Gubal-Bibliothek',
              'en': '(6.2)The Great Gubal Library',
              'fr': '(6.2)La Grande bibliothèque de Gubal',
              'ja': '(6.2)禁書回収 グブラ幻想図書館',
              'ko': '(6.2)구브라 환상도서관'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          417: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '陆行鸟竞赛：竞赛教学',
              'de': 'Chocobo-Rennen: Übungsbahn',
              'en': 'Chocobo Race: Tutorial',
              'fr': 'Course d\'appentissage',
              'ja': 'チョコボレース：チュートリアル',
              'ko': '초코보 경주: 튜토리얼'
            },
            'offsetX': 0,
            'offsetY': -690,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          418: {
            'exVersion': 1,
            'name': {
              'cn': '伊修加德基础层',
              'de': 'Fundamente',
              'en': 'Foundation',
              'fr': 'Ishgard - L\'Assise',
              'ja': 'イシュガルド：下層',
              'ko': '이슈가르드 하층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 47
          },
          419: {
            'exVersion': 1,
            'name': {
              'cn': '伊修加德砥柱层',
              'de': 'Strebewerk',
              'en': 'The Pillars',
              'fr': 'Ishgard - Les Contreforts',
              'ja': 'イシュガルド：上層',
              'ko': '이슈가르드 상층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 48
          },
          420: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '空中神域不获岛',
              'de': 'Nimmerreich',
              'en': 'Neverreap',
              'fr': 'Nalloncques',
              'ja': '神域浮島 ネバーリープ',
              'ko': '거두지 않는 섬'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          421: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.1)圣教中枢伊修加德教皇厅',
              'de': '(6.1)Erzbasilika',
              'en': '(6.1)The Vault',
              'fr': '(6.1)La Voûte',
              'ja': '(6.1)強硬突入 イシュガルド教皇庁',
              'ko': '(6.1)이슈가르드 교황청'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          426: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '那布里亚勒斯讨伐战',
              'de': 'Chrysalis',
              'en': 'The Chrysalis',
              'fr': 'La Chrysalide',
              'ja': 'アシエン・ナプリアレス討伐戦',
              'ko': '아씨엔 나브리알레스 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          430: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '博物战舰无限回廊',
              'de': 'Die Fraktal-Kontinuum',
              'en': 'The Fractal Continuum',
              'fr': 'Le Continuum fractal',
              'ja': '博物戦艦 フラクタル・コンティニアム',
              'ko': '무한연속 박물함'
            },
            'offsetX': 0,
            'offsetY': -213,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          431: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '尘封秘岩（争夺战）',
              'de': 'Robbenholm (Eroberung)',
              'en': 'Seal Rock (Seize)',
              'fr': 'Le Rocher des tréfonds (invasion)',
              'ja': 'シールロック (争奪戦)',
              'ko': '봉인된 바위섬(쟁탈전)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 59
          },
          432: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '罗波那歼灭战',
              'de': 'Götterdämmerung - Ravana',
              'en': 'Thok ast Thok (Hard)',
              'fr': 'Thok ast Thok (brutal)',
              'ja': '真ラーヴァナ討滅戦',
              'ko': '진 라바나 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 57
          },
          434: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '冰雪废堡暮卫塔',
              'de': 'Abendrot-Wacht',
              'en': 'The Dusk Vigil',
              'fr': 'Le Vigile du Crépuscule',
              'ja': '廃砦捜索 ダスクヴィジル',
              'ko': '어스름 요새'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 42
          },
          435: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.1)邪龙王座龙巢神殿',
              'de': '(6.1)Nest des Drachen',
              'en': '(6.1)The Aery',
              'fr': '(6.1)L\'Aire',
              'ja': '(6.1)邪竜血戦 ドラゴンズエアリー',
              'ko': '(6.1)용의 둥지'
            },
            'offsetX': -40,
            'offsetY': 55,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          436: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '俾斯麦歼灭战',
              'de': 'Götterdämmerung - Bismarck',
              'en': 'The Limitless Blue (Hard)',
              'fr': 'L\'Immensité bleue (brutal)',
              'ja': '真ビスマルク討滅戦',
              'ko': '진 비스마르크 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 28
          },
          437: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '圆桌骑士歼灭战',
              'de': 'Singularitäts-Reaktor',
              'en': 'The Singularity Reactor',
              'fr': 'Le Réacteur de singularité',
              'ja': 'ナイツ・オブ・ラウンド討滅戦',
              'ko': '나이츠 오브 라운드 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 56
          },
          438: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.2)血战苍穹魔科学研究所',
              'de': '(6.2)Ätherochemisches For<SoftHyphen/>schungs<SoftHyphen/>labor',
              'en': '(6.2)The Aetherochemical Research Facility',
              'fr': '(6.2)Le Laboratoire de magismologie',
              'ja': '(6.2)蒼天聖戦 魔科学研究所',
              'ko': '(6.2)마과학 연구소'
            },
            'offsetX': -18,
            'offsetY': 149,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          441: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.1)天山绝顶索姆阿尔灵峰',
              'de': '(6.1)Sohm Al',
              'en': '(6.1)Sohm Al',
              'fr': '(6.1)Sohm Al',
              'ja': '(6.1)霊峰踏破 ソーム・アル',
              'ko': '(6.1)솜 알'
            },
            'offsetX': 185,
            'offsetY': 51,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          442: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 启动之章1',
              'de': 'Alexander - Faust des Vaters',
              'en': 'Alexander - The Fist of the Father',
              'fr': 'Alexander - Le Poing du Père',
              'ja': '機工城アレキサンダー：起動編1',
              'ko': '기공성 알렉산더: 기동편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          443: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 启动之章2',
              'de': 'Alexander - Elle des Vaters',
              'en': 'Alexander - The Cuff of the Father',
              'fr': 'Alexander - Le Poignet du Père',
              'ja': '機工城アレキサンダー：起動編2',
              'ko': '기공성 알렉산더: 기동편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          444: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 启动之章3',
              'de': 'Alexander - Arm des Vaters',
              'en': 'Alexander - The Arm of the Father',
              'fr': 'Alexander - Le Bras du Père',
              'ja': '機工城アレキサンダー：起動編3',
              'ko': '기공성 알렉산더: 기동편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          445: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 启动之章4',
              'de': 'Alexander - Last des Vaters',
              'en': 'Alexander - The Burden of the Father',
              'fr': 'Alexander - Le Fardeau du Père',
              'ja': '機工城アレキサンダー：起動編4',
              'ko': '기공성 알렉산더: 기동편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          446: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '罗波那歼殛战',
              'de': 'Zenit der Götter - Ravana',
              'en': 'Thok ast Thok (Extreme)',
              'fr': 'Thok ast Thok (extrême)',
              'ja': '極ラーヴァナ討滅戦',
              'ko': '극 라바나 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 57
          },
          447: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '俾斯麦歼殛战',
              'de': 'Zenit der Götter - Bismarck',
              'en': 'The Limitless Blue (Extreme)',
              'fr': 'L\'Immensité bleue (extrême)',
              'ja': '極ビスマルク討滅戦',
              'ko': '극 비스마르크 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 28
          },
          448: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '圆桌骑士幻想歼灭战',
              'de': 'Heldenlied von Thordans Fall',
              'en': 'The Minstrel\'s Ballad: Thordan\'s Reign',
              'fr': 'Le règne de Thordan',
              'ja': '蒼天幻想 ナイツ・オブ・ラウンド討滅戦',
              'ko': '극 나이츠 오브 라운드 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 56
          },
          449: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 启动之章1',
              'de': 'Alexander - Faust des Vaters (episch)',
              'en': 'Alexander - The Fist of the Father (Savage)',
              'fr': 'Alexander - Le Poing du Père (sadique)',
              'ja': '機工城アレキサンダー零式：起動編1',
              'ko': '기공성 알렉산더: 기동편(영웅) 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          450: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 启动之章2',
              'de': 'Alexander - Elle des Vaters (episch)',
              'en': 'Alexander - The Cuff of the Father (Savage)',
              'fr': 'Alexander - Le Poignet du Père (sadique)',
              'ja': '機工城アレキサンダー零式：起動編2',
              'ko': '기공성 알렉산더: 기동편(영웅) 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          451: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 启动之章3',
              'de': 'Alexander - Arm des Vaters (episch)',
              'en': 'Alexander - The Arm of the Father (Savage)',
              'fr': 'Alexander - Le Bras du Père (sadique)',
              'ja': '機工城アレキサンダー零式：起動編3',
              'ko': '기공성 알렉산더: 기동편(영웅) 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          452: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 启动之章4',
              'de': 'Alexander - Last des Vaters (episch)',
              'en': 'Alexander - The Burden of the Father (Savage)',
              'fr': 'Alexander - Le Fardeau du Père (sadique)',
              'ja': '機工城アレキサンダー零式：起動編4',
              'ko': '기공성 알렉산더: 기동편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          478: {
            'exVersion': 1,
            'name': {
              'cn': '田园郡',
              'de': 'Frohehalde',
              'en': 'Idyllshire',
              'fr': 'Idyllée',
              'ja': 'イディルシャイア',
              'ko': '이딜샤이어'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 55
          },
          506: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '萌宠之王：大赛对战（人机对战）',
              'de': 'Kampf der Trabanten: Turnier (gegen Arenameister)',
              'en': 'LoVM: Master Tournament',
              'fr': 'Bataille de tournoi contre l\'ordinateur',
              'ja': 'LoVM：大会対戦 (CPU対戦)',
              'ko': '꼬마 친구 공방전: 대회 대결(인공 지능 대결)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          508: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '魔航船虚无方舟',
              'de': 'Die Nichts-Arche',
              'en': 'The Void Ark',
              'fr': 'L\'Arche du néant',
              'ja': '魔航船ヴォイドアーク',
              'ko': '보이드의 방주'
            },
            'offsetX': 289,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 37
          },
          510: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '地脉灵灯天狼星灯塔',
              'de': 'Pharos Sirius (schwer)',
              'en': 'Pharos Sirius (Hard)',
              'fr': 'Le Phare de Sirius (brutal)',
              'ja': '制圧巨塔 シリウス大灯台 (Hard)',
              'ko': '시리우스 대등대(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          511: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '草木庭园圣茉夏娜植物园',
              'de': 'Sankt Mocianne-Arboretum',
              'en': 'Saint Mocianne\'s Arboretum',
              'fr': 'L\'Arboretum Sainte-Mocianne',
              'ja': '草木庭園 聖モシャーヌ植物園',
              'ko': '성 모샨 식물원'
            },
            'offsetX': 40,
            'offsetY': 6,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          512: {
            'contentType': 23,
            'exVersion': 1,
            'name': {
              'cn': '云冠群岛白昼探索',
              'de': 'Das Diadem (leicht)',
              'en': 'The Diadem (Easy)',
              'fr': 'Le Diadème (facile)',
              'ja': '雲海探索 ディアデム諸島 (Easy)',
              'ko': '디아뎀 제도(쉬움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 60
          },
          515: {
            'contentType': 23,
            'exVersion': 1,
            'name': {
              'cn': '云冠群岛夜晚探索',
              'de': 'Das Diadem (schwer)',
              'en': 'The Diadem (Hard)',
              'fr': 'Le Diadème (brutal)',
              'ja': '雲海探索 ディアデム諸島 (Hard)',
              'ko': '디아뎀 제도(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 62
          },
          516: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.2)星海空间颠倒塔',
              'de': '(6.2)Antiturm',
              'en': '(6.2)The Antitower',
              'fr': '(6.2)L\'Antitour',
              'ja': '(6.2)星海観測 逆さの塔',
              'ko': '(6.2)거꾸로 선 탑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          517: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '萨菲洛特歼灭战',
              'de': 'Götterdämmerung - Sephirot',
              'en': 'Containment Bay S1T7',
              'fr': 'Unité de contention S1P7',
              'ja': '魔神セフィロト討滅戦',
              'ko': '마신 세피로트 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 66
          },
          519: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '神圣遗迹无限城市街古迹',
              'de': 'Historisches Amdapor (schwer)',
              'en': 'The Lost City of Amdapor (Hard)',
              'fr': 'Les Vestiges de la cité d\'Amdapor (brutal)',
              'ja': '神聖遺跡 古アムダプール市街 (Hard)',
              'ko': '옛 암다포르 시가지(어려움)'
            },
            'offsetX': 64,
            'offsetY': 315,
            'sizeFactor': 200,
            'weatherRate': 63
          },
          520: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 律动之章1',
              'de': 'Alexander - Faust des Sohnes',
              'en': 'Alexander - The Fist of the Son',
              'fr': 'Alexander - Le Poing du Fils',
              'ja': '機工城アレキサンダー：律動編1',
              'ko': '기공성 알렉산더: 율동편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          521: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 律动之章2',
              'de': 'Alexander - Elle des Sohnes',
              'en': 'Alexander - The Cuff of the Son',
              'fr': 'Alexander - Le Poignet du Fils',
              'ja': '機工城アレキサンダー：律動編2',
              'ko': '기공성 알렉산더: 율동편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          522: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 律动之章3',
              'de': 'Alexander - Arm des Sohnes',
              'en': 'Alexander - The Arm of the Son',
              'fr': 'Alexander - Le Bras du Fils',
              'ja': '機工城アレキサンダー：律動編3',
              'ko': '기공성 알렉산더: 율동편 3'
            },
            'offsetX': -110,
            'offsetY': -170,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          523: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 律动之章4',
              'de': 'Alexander - Last des Sohnes',
              'en': 'Alexander - The Burden of the Son',
              'fr': 'Alexander - Le Fardeau du Fils',
              'ja': '機工城アレキサンダー：律動編4',
              'ko': '기공성 알렉산더: 율동편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          524: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '萨菲洛特歼殛战',
              'de': 'Zenit der Götter - Sephirot',
              'en': 'Containment Bay S1T7 (Extreme)',
              'fr': 'Unité de contention S1P7 (extrême)',
              'ja': '極魔神セフィロト討滅戦',
              'ko': '극 마신 세피로트 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 66
          },
          529: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 律动之章1',
              'de': 'Alexander - Faust des Sohnes (episch)',
              'en': 'Alexander - The Fist of the Son (Savage)',
              'fr': 'Alexander - Le Poing du Fils (sadique)',
              'ja': '機工城アレキサンダー零式：律動編1',
              'ko': '기공성 알렉산더: 율동편(영웅) 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          530: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 律动之章2',
              'de': 'Alexander - Elle des Sohnes (episch)',
              'en': 'Alexander - The Cuff of the Son (Savage)',
              'fr': 'Alexander - Le Poignet du Fils (sadique)',
              'ja': '機工城アレキサンダー零式：律動編2',
              'ko': '기공성 알렉산더: 율동편(영웅) 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          531: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 律动之章3',
              'de': 'Alexander - Arm des Sohnes (episch)',
              'en': 'Alexander - The Arm of the Son (Savage)',
              'fr': 'Alexander - Le Bras du Fils (sadique)',
              'ja': '機工城アレキサンダー零式：律動編3',
              'ko': '기공성 알렉산더: 율동편(영웅) 3'
            },
            'offsetX': -110,
            'offsetY': -170,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          532: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 律动之章4',
              'de': 'Alexander - Last des Sohnes (episch)',
              'en': 'Alexander - The Burden of the Son (Savage)',
              'fr': 'Alexander - Le Fardeau du Fils (sadique)',
              'ja': '機工城アレキサンダー零式：律動編4',
              'ko': '기공성 알렉산더: 율동편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          533: {
            'contentType': 7,
            'exVersion': 1,
            'name': {
              'cn': '四国联合军演',
              'de': 'Truppenübung der Eorzäischen Allianz',
              'en': 'A Spectacle for the Ages',
              'fr': 'La grande manœuvre éorzéenne',
              'ja': '四国合同演習',
              'ko': '4개국 합동 훈련'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          537: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '躲避范围攻击',
              'de': 'Flächenangriffen ausweichen',
              'en': 'Avoid Area of Effect Attacks',
              'fr': 'Éviter les attaques à aire d\'effet',
              'ja': '範囲攻撃を避けよう！',
              'ko': '범위 공격을 피하자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          538: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '掌握仇恨连击',
              'de': 'Mit Kombos Feindseligkeit auf sich ziehen',
              'en': 'Execute a Combo to Increase Enmity',
              'fr': 'Générer de l\'inimitié avec un combo',
              'ja': 'コンボで敵視を集めよう！',
              'ko': '콤보를 이어 적개심을 끌자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          539: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '控制敌人的仇恨',
              'de': 'Kombos im Kampf einsetzen',
              'en': 'Execute a Combo in Battle',
              'fr': 'Effectuer le combo en combat',
              'ja': '実戦でコンボに挑戦しよう！',
              'ko': '실전에서 콤보를 사용해보자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          540: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '控制多个敌人的仇恨',
              'de': 'Feindseligkeit mehrerer Gegner auf sich ziehen',
              'en': 'Accrue Enmity from Multiple Targets',
              'fr': 'Attirer l\'inimitié de plusieurs ennemis sur soi',
              'ja': '複数の敵から敵視を集めよう！',
              'ko': '다수의 적에게서 적개심을 끌자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          541: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '实战控制多个敌人的仇恨',
              'de': 'Gegen mehrere Gegner auf einmal kämpfen',
              'en': 'Engage Multiple Targets',
              'fr': 'Affronter plusieurs ennemis',
              'ja': '実戦で複数の敵と戦ってみよう！',
              'ko': '실전에서 다수의 적과 싸워보자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          542: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '控制远处敌人的仇恨',
              'de': 'Aus der Ferne Feindseligkeit auf sich ziehen',
              'en': 'Execute a Ranged Attack to Increase Enmity',
              'fr': 'Générer de l\'inimitié à distance',
              'ja': '遠距離から敵視を集めよう！',
              'ko': '멀리서 적개심을 끌자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          543: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '留心增援的敌人',
              'de': 'Feindliche Verstärkung aufhalten',
              'en': 'Engage Enemy Reinforcements',
              'fr': 'Faire face à des renforts ennemis',
              'ja': '敵の増援に対応しよう！',
              'ko': '적 지원군에 대처하자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          544: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '配合防护职业打倒单个敌人',
              'de': 'Gegner gemeinsam besiegen',
              'en': 'Assist Allies in Defeating a Target',
              'fr': 'Vaincre un ennemi en assistant des alliés',
              'ja': '味方と協力して敵を倒そう！',
              'ko': '파티원과 협력하여 적을 물리치자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          545: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '配合防护职业打倒多个敌人',
              'de': 'Den Gegner eines Verbündeten besiegen',
              'en': 'Defeat an Occupied Target',
              'fr': 'Vaincre un ennemi occupé par un allié',
              'ja': '味方が引きつけている敵を倒そう！',
              'ko': '파티원과 같은 적을 공격하자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          546: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '躲避范围攻击的同时进行战斗',
              'de': 'Angriffen ausweichen',
              'en': 'Avoid Engaged Targets',
              'fr': 'Combattre en évitant les attaques ennemies',
              'ja': '敵の攻撃を避けながら戦おう！',
              'ko': '적의 공격을 피하면서 싸우자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          548: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '灵活运用场地机关',
              'de': 'Mit dem Gelände interagieren',
              'en': 'Interact with the Battlefield',
              'fr': 'Interagir avec le décor en combat',
              'ja': 'ギミックを活用して戦おう！',
              'ko': '특수 장치를 활용하며 싸우자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          549: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '治疗防护职业',
              'de': 'Verbündete heilen',
              'en': 'Heal an Ally',
              'fr': 'Soigner un allié',
              'ja': '味方を回復しよう！',
              'ko': '파티원을 회복시키자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          550: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '治疗小队队员',
              'de': 'Mehrere Verbündete heilen',
              'en': 'Heal Multiple Allies',
              'fr': 'Soigner plusieurs alliés',
              'ja': '複数の味方を回復しよう！',
              'ko': '다수의 파티원을 회복시키자!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          552: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '最终训练',
              'de': 'Letzte Übung',
              'en': 'Final Exercise',
              'fr': 'Exercice final',
              'ja': '最終訓練！',
              'ko': '마지막 훈련!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          554: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '荣誉野（碎冰战）',
              'de': 'Feld der Ehre (Zersplitterung)',
              'en': 'The Fields of Glory (Shatter)',
              'fr': 'Les Champs de la Gloire (brise-glace)',
              'ja': 'フィールド・オブ・グローリー (砕氷戦)',
              'ko': '영광의 평원(쇄빙전)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 67
          },
          555: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.2)天龙宫殿忆罪宫',
              'de': '(6.2)Sohr Khai',
              'en': '(6.2)Sohr Khai',
              'fr': '(6.2)Sohr Khai',
              'ja': '(6.2)天竜宮殿 ソール・カイ',
              'ko': '(6.2)소르 카이'
            },
            'offsetX': 370,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          556: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '禁忌城邦玛哈',
              'de': 'Die Stadt der Tränen',
              'en': 'The Weeping City of Mhach',
              'fr': 'La Cité défendue de Mhach',
              'ja': '禁忌都市マハ',
              'ko': '금기도시 마하'
            },
            'offsetX': -40,
            'offsetY': -40,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          557: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '黑涡传说破舰岛',
              'de': 'Schiffbrecher-Insel (schwer)',
              'en': 'Hullbreaker Isle (Hard)',
              'fr': 'L\'Île de Crèvecarène (brutal)',
              'ja': '黒渦伝説 ハルブレーカー・アイル (Hard)',
              'ko': '난파선의 섬(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 68
          },
          558: {
            'contentType': 9,
            'exVersion': 0,
            'name': {
              'cn': '水城宝物库',
              'de': 'Aquapolis',
              'en': 'The Aquapolis',
              'fr': 'L\'Aquapole',
              'ja': '宝物庫 アクアポリス',
              'ko': '보물고 아쿠아폴리스'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          559: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '尼德霍格征龙战',
              'de': 'Der letzte Schicksalsweg',
              'en': 'The Final Steps of Faith',
              'fr': 'La Dernière avancée de la Foi',
              'ja': 'ニーズヘッグ征竜戦',
              'ko': '니드호그 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 28
          },
          560: {
            'contentType': 7,
            'exVersion': 1,
            'name': {
              'cn': '雷古拉·范·休著斯追击战',
              'de': 'Blutiges Wieder­sehen',
              'en': 'A Bloody Reunion',
              'fr': 'Course-poursuite dans le laboratoire',
              'ja': 'レグラ・ヴァン・ヒュドルス追撃戦',
              'ko': '레굴라 반 히드루스 추격전'
            },
            'offsetX': -18,
            'offsetY': 149,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          561: {
            'contentType': 21,
            'exVersion': 0,
            'name': {
              'cn': '死者宫殿 地下1～10层',
              'de': 'Palast der Toten (Ebenen 1-10)',
              'en': 'The Palace of the Dead (Floors 1-10)',
              'fr': 'Le Palais des morts (sous-sols 1-10)',
              'ja': '死者の宮殿 B1～B10',
              'ko': '망자의 궁전 B1~B10'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          562: {
            'contentType': 21,
            'exVersion': 0,
            'name': {
              'cn': '死者宫殿 地下11～20层',
              'de': 'Palast der Toten (Ebenen 11-20)',
              'en': 'The Palace of the Dead (Floors 11-20)',
              'fr': 'Le Palais des morts (sous-sols 11-20)',
              'ja': '死者の宮殿 B11～B20',
              'ko': '망자의 궁전 B11~B20'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          563: {
            'contentType': 21,
            'exVersion': 0,
            'name': {
              'cn': '死者宫殿 地下21～30层',
              'de': 'Palast der Toten (Ebenen 21-30)',
              'en': 'The Palace of the Dead (Floors 21-30)',
              'fr': 'Le Palais des morts (sous-sols 21-30)',
              'ja': '死者の宮殿 B21～B30',
              'ko': '망자의 궁전 B21~B30'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          564: {
            'contentType': 21,
            'exVersion': 0,
            'name': {
              'cn': '死者宫殿 地下31～40层',
              'de': 'Palast der Toten (Ebenen 31-40)',
              'en': 'The Palace of the Dead (Floors 31-40)',
              'fr': 'Le Palais des morts (sous-sols 31-40)',
              'ja': '死者の宮殿 B31～B40',
              'ko': '망자의 궁전 B31~B40'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          565: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下41～50层',
              'de': 'Palast der Toten (Ebenen 41-50)',
              'en': 'The Palace of the Dead (Floors 41-50)',
              'fr': 'Le Palais des morts (sous-sols 41-50)',
              'ja': '死者の宮殿 B41～B50',
              'ko': '망자의 궁전 B41~B50'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          566: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '尼德霍格传奇征龙战',
              'de': 'Das Lied von Nidhoggs letztem Ruf',
              'en': 'The Minstrel\'s Ballad: Nidhogg\'s Rage',
              'fr': 'L\'ire de Nidhogg',
              'ja': '極ニーズヘッグ征竜戦',
              'ko': '극 니드호그 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 28
          },
          571: {
            'contentType': 22,
            'exVersion': 0,
            'name': {
              'cn': '亡灵府邸闹鬼庄园',
              'de': 'Das Geisterschloss',
              'en': 'The Haunted Manor',
              'fr': 'Le Manoir hanté',
              'ja': '亡霊屋敷 ホーンテッドマナー',
              'ko': '유령의 집'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          572: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.2)险峻峡谷塞尔法特尔溪谷',
              'de': '(6.2)Xelphatol',
              'en': '(6.2)Xelphatol',
              'fr': '(6.2)Xelphatol',
              'ja': '(6.2)峻厳渓谷 ゼルファトル',
              'ko': '(6.2)젤파톨'
            },
            'offsetX': -148,
            'offsetY': 35,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          576: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '索菲娅歼灭战',
              'de': 'Götterdämmerung - Sophia',
              'en': 'Containment Bay P1T6',
              'fr': 'Unité de contention P1P6',
              'ja': '女神ソフィア討滅戦',
              'ko': '여신 소피아 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 69
          },
          577: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '索菲娅歼殛战',
              'de': 'Zenit der Götter - Sophia',
              'en': 'Containment Bay P1T6 (Extreme)',
              'fr': 'Unité de contention P1P6 (extrême)',
              'ja': '極女神ソフィア討滅戦',
              'ko': '극 여신 소피아 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 69
          },
          578: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '秘本宝库迦巴勒幻想图书馆',
              'de': 'Große Gubal-Bibliothek (schwer)',
              'en': 'The Great Gubal Library (Hard)',
              'fr': 'La Grande bibliothèque de Gubal (brutal)',
              'ja': '稀書回収 グブラ幻想図書館 (Hard)',
              'ko': '구브라 환상도서관(어려움)'
            },
            'offsetX': 116,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          579: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '九宫幻卡：幻卡对局室',
              'de': 'Triple Triad: Weltensalon',
              'en': 'The Triple Triad Battlehall',
              'fr': 'Arène Triple Triade',
              'ja': 'トリプルトライアド：カードバトルルーム',
              'ko': '트리플 트라이어드: 카드 대결장'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 800,
            'weatherRate': 0
          },
          580: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 天动之章1',
              'de': 'Alexander - Augen des Schöpfers',
              'en': 'Alexander - The Eyes of the Creator',
              'fr': 'Alexander - Les Yeux du Créateur',
              'ja': '機工城アレキサンダー：天動編1',
              'ko': '기공성 알렉산더: 천동편 1'
            },
            'offsetX': 75,
            'offsetY': 14,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          581: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 天动之章2',
              'de': 'Alexander - Atem des Schöpfers',
              'en': 'Alexander - The Breath of the Creator',
              'fr': 'Alexander - Le Souffle du Créateur',
              'ja': '機工城アレキサンダー：天動編2',
              'ko': '기공성 알렉산더: 천동편 2'
            },
            'offsetX': 0,
            'offsetY': -80,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          582: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 天动之章3',
              'de': 'Alexander - Herz des Schöpfers',
              'en': 'Alexander - The Heart of the Creator',
              'fr': 'Alexander - Le Cœur du Créateur',
              'ja': '機工城アレキサンダー：天動編3',
              'ko': '기공성 알렉산더: 천동편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          583: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大机神城 天动之章4',
              'de': 'Alexander - Seele des Schöpfers',
              'en': 'Alexander - The Soul of the Creator',
              'fr': 'Alexander - L\'Âme du Créateur',
              'ja': '機工城アレキサンダー：天動編4',
              'ko': '기공성 알렉산더: 천동편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          584: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 天动之章1',
              'de': 'Alexander - Augen des Schöpfers (episch)',
              'en': 'Alexander - The Eyes of the Creator (Savage)',
              'fr': 'Alexander - Les Yeux du Créateur (sadique)',
              'ja': '機工城アレキサンダー零式：天動編1',
              'ko': '기공성 알렉산더: 천동편(영웅) 1'
            },
            'offsetX': 75,
            'offsetY': 14,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          585: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 天动之章2',
              'de': 'Alexander - Atem des Schöpfers (episch)',
              'en': 'Alexander - The Breath of the Creator (Savage)',
              'fr': 'Alexander - Le Souffle du Créateur (sadique)',
              'ja': '機工城アレキサンダー零式：天動編2',
              'ko': '기공성 알렉산더: 천동편(영웅) 2'
            },
            'offsetX': 0,
            'offsetY': -80,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          586: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 天动之章3',
              'de': 'Alexander - Herz des Schöpfers (episch)',
              'en': 'Alexander - The Heart of the Creator (Savage)',
              'fr': 'Alexander - Le Cœur du Créateur (sadique)',
              'ja': '機工城アレキサンダー零式：天動編3',
              'ko': '기공성 알렉산더: 천동편(영웅) 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          587: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '亚历山大零式机神城 天动之章4',
              'de': 'Alexander - Seele des Schöpfers (episch)',
              'en': 'Alexander - The Soul of the Creator (Savage)',
              'fr': 'Alexander - L\'Âme du Créateur (sadique)',
              'ja': '機工城アレキサンダー零式：天動編4',
              'ko': '기공성 알렉산더: 천동편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          589: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '萌宠之王：玩家对战（绩点赛）',
              'de': 'Kampf der Trabanten: Gegen Spieler (um RP)',
              'en': 'LoVM: Player Battle (RP)',
              'fr': 'Bataille simple contre un joueur (avec PR)',
              'ja': 'LoVM：プレイヤー対戦 (RP変動あり)',
              'ko': '꼬마 친구 공방전: 플레이어 대결(RP 변동 있음)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          590: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '萌宠之王：大赛对战（玩家对战）',
              'de': 'Kampf der Trabanten: Turnier (gegen Spieler)',
              'en': 'LoVM: Tournament',
              'fr': 'Bataille de tournoi contre des joueurs',
              'ja': 'LoVM：大会対戦 (プレイヤー対戦）',
              'ko': '꼬마 친구 공방전: 대회 대결(플레이어 대결)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          591: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '萌宠之王：玩家对战（无绩点赛）',
              'de': 'Kampf der Trabanten: Gegen Spieler (ohne RP)',
              'en': 'LoVM: Player Battle (Non-RP)',
              'fr': 'Bataille simple contre un joueur (sans PR)',
              'ja': 'LoVM：プレイヤー対戦 (RP変動なし)',
              'ko': '꼬마 친구 공방전: 플레이어 대결(RP 변동 없음)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          592: {
            'contentType': 7,
            'exVersion': 1,
            'name': {
              'cn': '纠缠不清的宿命',
              'de': 'Weltenübergreifendes Schicksal',
              'en': 'One Life for One World',
              'fr': 'Destins entrecroisés',
              'ja': '絡み合う宿命',
              'ko': '뒤얽히는 숙명'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 28
          },
          593: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下51～60层',
              'de': 'Palast der Toten (Ebenen 51 - 60)',
              'en': 'The Palace of the Dead (Floors 51-60)',
              'fr': 'Le Palais des morts (sous-sols 51-60)',
              'ja': '死者の宮殿 B51～B60',
              'ko': '망자의 궁전 B51~B60'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          594: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下61～70层',
              'de': 'Palast der Toten (Ebenen 61 - 70)',
              'en': 'The Palace of the Dead (Floors 61-70)',
              'fr': 'Le Palais des morts (sous-sols 61-70)',
              'ja': '死者の宮殿 B61～B70',
              'ko': '망자의 궁전 B61~B70'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          595: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下71～80层',
              'de': 'Palast der Toten (Ebenen 71 - 80)',
              'en': 'The Palace of the Dead (Floors 71-80)',
              'fr': 'Le Palais des morts (sous-sols 71-80)',
              'ja': '死者の宮殿 B71～B80',
              'ko': '망자의 궁전 B71~B80'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          596: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下81～90层',
              'de': 'Palast der Toten (Ebenen 81 - 90)',
              'en': 'The Palace of the Dead (Floors 81-90)',
              'fr': 'Le Palais des morts (sous-sols 81-90)',
              'ja': '死者の宮殿 B81～B90',
              'ko': '망자의 궁전 B81~B90'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          597: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下91～100层',
              'de': 'Palast der Toten (Ebenen 91 - 100)',
              'en': 'The Palace of the Dead (Floors 91-100)',
              'fr': 'Le Palais des morts (sous-sols 91-100)',
              'ja': '死者の宮殿 B91～B100',
              'ko': '망자의 궁전 B91~B100'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          598: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下101～110层',
              'de': 'Palast der Toten (Ebenen 101 - 110)',
              'en': 'The Palace of the Dead (Floors 101-110)',
              'fr': 'Le Palais des morts (sous-sols 101-110)',
              'ja': '死者の宮殿 B101～B110',
              'ko': '망자의 궁전 B101~B110'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          599: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下111～120层',
              'de': 'Palast der Toten (Ebenen 111 - 120)',
              'en': 'The Palace of the Dead (Floors 111-120)',
              'fr': 'Le Palais des morts (sous-sols 111-120)',
              'ja': '死者の宮殿 B111～B120',
              'ko': '망자의 궁전 B111~B120'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          600: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下121～130层',
              'de': 'Palast der Toten (Ebenen 121 - 130)',
              'en': 'The Palace of the Dead (Floors 121-130)',
              'fr': 'Le Palais des morts (sous-sols 121-130)',
              'ja': '死者の宮殿 B121～B130',
              'ko': '망자의 궁전 B121~B130'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          601: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下131～140层',
              'de': 'Palast der Toten (Ebenen 131 - 140)',
              'en': 'The Palace of the Dead (Floors 131-140)',
              'fr': 'Le Palais des morts (sous-sols 131-140)',
              'ja': '死者の宮殿 B131～B140',
              'ko': '망자의 궁전 B131~B140'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          602: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下141～150层',
              'de': 'Palast der Toten (Ebenen 141 - 150)',
              'en': 'The Palace of the Dead (Floors 141-150)',
              'fr': 'Le Palais des morts (sous-sols 141-150)',
              'ja': '死者の宮殿 B141～B150',
              'ko': '망자의 궁전 B141~B150'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          603: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下151～160层',
              'de': 'Palast der Toten (Ebenen 151 - 160)',
              'en': 'The Palace of the Dead (Floors 151-160)',
              'fr': 'Le Palais des morts (sous-sols 151-160)',
              'ja': '死者の宮殿 B151～B160',
              'ko': '망자의 궁전 B151~B160'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          604: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下161～170层',
              'de': 'Palast der Toten (Ebenen 161 - 170)',
              'en': 'The Palace of the Dead (Floors 161-170)',
              'fr': 'Le Palais des morts (sous-sols 161-170)',
              'ja': '死者の宮殿 B161～B170',
              'ko': '망자의 궁전 B161~B170'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          605: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下171～180层',
              'de': 'Palast der Toten (Ebenen 171 - 180)',
              'en': 'The Palace of the Dead (Floors 171-180)',
              'fr': 'Le Palais des morts (sous-sols 171-180)',
              'ja': '死者の宮殿 B171～B180',
              'ko': '망자의 궁전 B171~B180'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          606: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下181～190层',
              'de': 'Palast der Toten (Ebenen 181 - 190)',
              'en': 'The Palace of the Dead (Floors 181-190)',
              'fr': 'Le Palais des morts (sous-sols 181-190)',
              'ja': '死者の宮殿 B181～B190',
              'ko': '망자의 궁전 B181~B190'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          607: {
            'contentType': 21,
            'exVersion': 1,
            'name': {
              'cn': '死者宫殿 地下191～200层',
              'de': 'Palast der Toten (Ebenen 191 - 200)',
              'en': 'The Palace of the Dead (Floors 191-200)',
              'fr': 'Le Palais des morts (sous-sols 191-200)',
              'ja': '死者の宮殿 B191～B200',
              'ko': '망자의 궁전 B191~B200'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          612: {
            'exVersion': 2,
            'name': {
              'cn': '基拉巴尼亚边区',
              'de': 'Abanisches Grenzland',
              'en': 'The Fringes',
              'fr': 'Les Marges',
              'ja': 'ギラバニア辺境地帯',
              'ko': '기라바니아 변방지대'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 79
          },
          613: {
            'exVersion': 2,
            'name': {
              'cn': '红玉海',
              'de': 'Rubinsee',
              'en': 'The Ruby Sea',
              'fr': 'Mer de Rubis',
              'ja': '紅玉海',
              'ko': '홍옥해'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 83
          },
          614: {
            'exVersion': 2,
            'name': {
              'cn': '延夏',
              'de': 'Yanxia',
              'en': 'Yanxia',
              'fr': 'Yanxia',
              'ja': 'ヤンサ',
              'ko': '얀샤'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 84
          },
          615: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '(6.2)坚牢铁壁巴埃萨长城',
              'de': '(6.2)Baelsar-Wall',
              'en': '(6.2)Baelsar\'s Wall',
              'fr': '(6.2)La Muraille de Baelsar',
              'ja': '(6.2)巨大防壁 バエサルの長城',
              'ko': '(6.2)바일사르 장성'
            },
            'offsetX': 182,
            'offsetY': 32,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          616: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '海底宫殿紫水宫',
              'de': 'Shisui',
              'en': 'Shisui of the Violet Tides',
              'fr': 'Le Palais aux Marées violettes',
              'ja': '海底宮殿 紫水宮',
              'ko': '시스이 궁'
            },
            'offsetX': 0,
            'offsetY': 35,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          617: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '天山深境索姆阿尔灵峰',
              'de': 'Sohm Al (schwer)',
              'en': 'Sohm Al (Hard)',
              'fr': 'Sohm Al (brutal)',
              'ja': '霊峰浄化 ソーム・アル (Hard)',
              'ko': '솜 알(어려움)'
            },
            'offsetX': 128,
            'offsetY': -32,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          620: {
            'exVersion': 2,
            'name': {
              'cn': '基拉巴尼亚山区',
              'de': 'Die Zinnen',
              'en': 'The Peaks',
              'fr': 'Les Pics',
              'ja': 'ギラバニア山岳地帯',
              'ko': '기라바니아 산악지대'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 80
          },
          621: {
            'exVersion': 2,
            'name': {
              'cn': '基拉巴尼亚湖区',
              'de': 'Das Fenn',
              'en': 'The Lochs',
              'fr': 'Les Lacs',
              'ja': 'ギラバニア湖畔地帯',
              'ko': '기라바니아 호반지대'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 81
          },
          622: {
            'exVersion': 2,
            'name': {
              'cn': '太阳神草原',
              'de': 'Azim-Steppe',
              'en': 'The Azim Steppe',
              'fr': 'Steppe d\'Azim',
              'ja': 'アジムステップ',
              'ko': '아짐 대초원'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 85
          },
          623: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.3)试炼行路巴儿达木霸道',
              'de': '(6.3)Bardams Probe',
              'en': '(6.3)Bardam\'s Mettle',
              'fr': '(6.3)La Force de Bardam',
              'ja': '(6.3)伝統試練 バルダム覇道',
              'ko': '(6.3)바르담 패도'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          624: {
            'contentType': 23,
            'exVersion': 1,
            'name': {
              'cn': '云冠群岛白昼探索（狩猎专用）',
              'de': 'Das Diadem - Jagdgründe (leicht)',
              'en': 'The Diadem Hunting Grounds (Easy)',
              'fr': 'Le Diadème : terrains de chasse (facile)',
              'ja': '雲海探索 ディアデム諸島：狩猟限定 (Easy)',
              'ko': '디아뎀 제도: 전투 한정(쉬움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 60
          },
          625: {
            'contentType': 23,
            'exVersion': 1,
            'name': {
              'cn': '云冠群岛黄昏探索（狩猎专用）',
              'de': 'Das Diadem - Jagdgründe',
              'en': 'The Diadem Hunting Grounds',
              'fr': 'Le Diadème : terrains de chasse',
              'ja': '雲海探索 ディアデム諸島：狩猟限定',
              'ko': '디아뎀 제도: 전투 한정'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 61
          },
          626: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.3)漂流海域妖歌海',
              'de': '(6.3)Sirenen-See',
              'en': '(6.3)The Sirensong Sea',
              'fr': '(6.3)La Mer du Chant des sirènes',
              'ja': '(6.3)漂流海域 セイレーン海',
              'ko': '(6.3)세이렌 해'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 36
          },
          627: {
            'contentType': 5,
            'exVersion': 1,
            'name': {
              'cn': '影之国',
              'de': 'Dun Scaith',
              'en': 'Dun Scaith',
              'fr': 'Dun Scaith',
              'ja': '影の国ダン・スカー',
              'ko': '둔 스카'
            },
            'offsetX': -350,
            'offsetY': -400,
            'sizeFactor': 200,
            'weatherRate': 58
          },
          628: {
            'exVersion': 2,
            'name': {
              'cn': '黄金港',
              'de': 'Kugane',
              'en': 'Kugane',
              'fr': 'Kugane',
              'ja': 'クガネ',
              'ko': '쿠가네'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 82
          },
          630: {
            'contentType': 23,
            'exVersion': 0,
            'name': {
              'cn': '云冠群岛战争神猎场',
              'de': 'Das Diadem - Halones Prüfung',
              'en': 'The Diadem - Trials of the Fury',
              'fr': 'Le Diadème - Épreuves de Halone',
              'ja': '雲海探索 ディアデム諸島 (狩猟)',
              'ko': '디아뎀 제도: 전투'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          633: {
            'contentType': 7,
            'exVersion': 1,
            'name': {
              'cn': '加尔提诺平原遭遇战',
              'de': 'Heliodrom',
              'en': 'The Carteneau Flats: Heliodrome',
              'fr': 'Rixe à l\'Héliodrome',
              'ja': 'カルテノー平原遭遇戦',
              'ko': '카르테노 평원 조우전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          635: {
            'exVersion': 2,
            'name': {
              'cn': '神拳痕',
              'de': 'Rhalgrs Wacht',
              'en': 'Rhalgr\'s Reach',
              'fr': 'L\'Étendue de Rhalgr',
              'ja': 'ラールガーズリーチ',
              'ko': '랄거의 손길'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 78
          },
          637: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '祖尔宛歼灭战',
              'de': 'Götterdämmerung - Zurvan',
              'en': 'Containment Bay Z1T9',
              'fr': 'Unité de contention Z1P9',
              'ja': '鬼神ズルワーン討滅戦',
              'ko': '귀신 주르반 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 75
          },
          638: {
            'contentType': 4,
            'exVersion': 1,
            'name': {
              'cn': '祖尔宛歼殛战',
              'de': 'Zenit der Götter - Zurvan',
              'en': 'Containment Bay Z1T9 (Extreme)',
              'fr': 'Unité de contention Z1P9 (extrême)',
              'ja': '極鬼神ズルワーン討滅戦',
              'ko': '극 귀신 주르반 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 75
          },
          656: {
            'contentType': 23,
            'exVersion': 1,
            'name': {
              'cn': '云冠群岛丰饶神福地',
              'de': 'Das Diadem - Nophicas Prüfung',
              'en': 'The Diadem - Trials of the Matron',
              'fr': 'Le Diadème - Épreuves de Nophica',
              'ja': '雲海探索 ディアデム諸島 (採集)',
              'ko': '디아뎀 제도: 채집'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 71
          },
          660: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.3)解放决战多玛王城',
              'de': '(6.3)Burg Doma',
              'en': '(6.3)Doma Castle',
              'fr': '(6.3)Le Château de Doma',
              'ja': '(6.3)解放決戦 ドマ城',
              'ko': '(6.3)도마 성'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          661: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.3)巨炮要塞帝国白山堡',
              'de': '(6.3)Castrum Abania',
              'en': '(6.3)Castrum Abania',
              'fr': '(6.3)Castrum Abania',
              'ja': '(6.3)巨砲要塞 カストルム・アバニア',
              'ko': '(6.3)카스트룸 아바니아'
            },
            'offsetX': 72,
            'offsetY': -186,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          662: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '恶党孤城黄金阁',
              'de': 'Schloss Kugane',
              'en': 'Kugane Castle',
              'fr': 'Le Château de Kugane',
              'ja': '悪党成敗 クガネ城',
              'ko': '쿠가네 성'
            },
            'offsetX': 70,
            'offsetY': 33,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          663: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '修行古刹星导寺',
              'de': 'Tempel der Faust',
              'en': 'The Temple of the Fist',
              'fr': 'Le Temple du Poing',
              'ja': '壊神修行 星導山寺院',
              'ko': '성도산 사원'
            },
            'offsetX': -427,
            'offsetY': -314,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          665: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '鱼道现身！',
              'de': 'Ein zweifelhaftes Angebot',
              'en': 'It\'s Probably a Trap',
              'fr': 'Un drôle de Namazu',
              'ja': 'ギョドウ現る！',
              'ko': '교도 등장!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          674: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '须佐之男歼灭战',
              'de': 'Götterdämmerung - Susano',
              'en': 'The Pool of Tribute',
              'fr': 'La Crique aux tributs',
              'ja': 'スサノオ討滅戦',
              'ko': '스사노오 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 77
          },
          677: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '须佐之男歼殛战',
              'de': 'Zenit der Götter - Susano',
              'en': 'The Pool of Tribute (Extreme)',
              'fr': 'La Crique aux tributs (extrême)',
              'ja': '極スサノオ討滅戦',
              'ko': '극 스사노오 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 77
          },
          679: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '神龙歼灭战',
              'de': 'Königliche Menagerie',
              'en': 'The Royal Menagerie',
              'fr': 'La Ménagerie royale',
              'ja': '神龍討滅戦',
              'ko': '신룡 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 76
          },
          684: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '于里昂热的秘策',
              'de': 'Wege zur Transzendenz',
              'en': 'The Resonant',
              'fr': 'La ruse d\'Urianger',
              'ja': 'ウリエンジェの秘策',
              'ko': '위리앙제의 비책'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          688: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '那达慕',
              'de': 'Naadam',
              'en': 'Naadam',
              'fr': 'La grande bataille du Naadam',
              'ja': '終節の合戦',
              'ko': '계절끝 합전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          689: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.3)鏖战红莲阿拉米格',
              'de': '(6.3)Ala Mhigo',
              'en': '(6.3)Ala Mhigo',
              'fr': '(6.3)Ala Mhigo',
              'ja': '(6.3)紅蓮決戦 アラミゴ',
              'ko': '(6.3)알라미고'
            },
            'offsetX': 292,
            'offsetY': -163,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          690: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '时空狭缝外缘',
              'de': 'Interdimensionaler Riss',
              'en': 'Interdimensional Rift',
              'fr': 'Fissure interdimensionnelle',
              'ja': '次元の狭間：外縁',
              'ko': '차원의 틈: 외곽'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 88
          },
          691: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 德尔塔幻境1',
              'de': 'Deltametrie 1.0',
              'en': 'Deltascape V1.0',
              'fr': 'Deltastice v1.0',
              'ja': '次元の狭間オメガ：デルタ編1',
              'ko': '차원의 틈 오메가: 델타편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          692: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 德尔塔幻境2',
              'de': 'Deltametrie 2.0',
              'en': 'Deltascape V2.0',
              'fr': 'Deltastice v2.0',
              'ja': '次元の狭間オメガ：デルタ編2',
              'ko': '차원의 틈 오메가: 델타편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          693: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 德尔塔幻境3',
              'de': 'Deltametrie 3.0',
              'en': 'Deltascape V3.0',
              'fr': 'Deltastice v3.0',
              'ja': '次元の狭間オメガ：デルタ編3',
              'ko': '차원의 틈 오메가: 델타편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          694: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 德尔塔幻境4',
              'de': 'Deltametrie 4.0',
              'en': 'Deltascape V4.0',
              'fr': 'Deltastice v4.0',
              'ja': '次元の狭間オメガ：デルタ編4',
              'ko': '차원의 틈 오메가: 델타편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          695: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 德尔塔幻境1',
              'de': 'Deltametrie 1.0 (episch)',
              'en': 'Deltascape V1.0 (Savage)',
              'fr': 'Deltastice v1.0 (sadique)',
              'ja': '次元の狭間オメガ零式：デルタ編1',
              'ko': '차원의 틈 오메가: 델타편(영웅) 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          696: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 德尔塔幻境2',
              'de': 'Deltametrie 2.0 (episch)',
              'en': 'Deltascape V2.0 (Savage)',
              'fr': 'Deltastice v2.0 (sadique)',
              'ja': '次元の狭間オメガ零式：デルタ編2',
              'ko': '차원의 틈 오메가: 델타편(영웅) 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          697: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 德尔塔幻境3',
              'de': 'Deltametrie 3.0 (episch)',
              'en': 'Deltascape V3.0 (Savage)',
              'fr': 'Deltastice v3.0 (sadique)',
              'ja': '次元の狭間オメガ零式：デルタ編3',
              'ko': '차원의 틈 오메가: 델타편(영웅) 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          698: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 德尔塔幻境4',
              'de': 'Deltametrie 4.0 (episch)',
              'en': 'Deltascape V4.0 (Savage)',
              'fr': 'Deltastice v4.0 (sadique)',
              'ja': '次元の狭間オメガ零式：デルタ編4',
              'ko': '차원의 틈 오메가: 델타편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 88
          },
          705: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '大会开始',
              'de': 'Thal zu Ehren',
              'en': 'In Thal\'s Name',
              'fr': 'Le tournoi commémoratif du sultanat',
              'ja': 'ウル王杯闘技会の始まり',
              'ko': '울다하 왕실배 투기대회'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 8
          },
          706: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '为了更强',
              'de': 'Die hohe Kunst des Schwertkampfs',
              'en': 'Raising the Sword',
              'fr': 'La finale des champions',
              'ja': 'さらなる剣術の高みへ',
              'ko': '더 높은 검술의 경지로'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 8
          },
          707: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '抗争之力',
              'de': 'Die Kraft des Widerstands',
              'en': 'With Heart and Steel',
              'fr': 'Transmigration démoniaque',
              'ja': '抗う力',
              'ko': '맞서는 힘'
            },
            'offsetX': 298,
            'offsetY': 350,
            'sizeFactor': 200,
            'weatherRate': 37
          },
          708: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '海都路人身首异',
              'de': 'Mord ist sein Hobby',
              'en': 'Blood on the Deck',
              'fr': 'La légende de Musosai : l\'assassin de Limsa Lominsa',
              'ja': '海都を震わす人斬りの宴！',
              'ko': '해양도시를 흔드는 살인자의 연회!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          709: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '极恶之人木枯',
              'de': 'Der Inbegriff des Bösen',
              'en': 'The Face of True Evil',
              'fr': 'L\'abominable Kogarashi',
              'ja': '極悪人コガラシ',
              'ko': '극악무도한 코가라시'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 49
          },
          710: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '松叶门外之变',
              'de': 'Vorfall auf dem Matsuba-Platz',
              'en': 'Matsuba Mayhem',
              'fr': 'Règlement de compte au square Matsuba',
              'ja': '松葉門外の変',
              'ko': '마츠바 사변'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 82
          },
          711: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '决战龟甲岛',
              'de': 'Ent­schei­dungs­schlacht auf Bekko',
              'en': 'The Battle on Bekko',
              'fr': 'L\'af­fron­te­ment de deux justices',
              'ja': 'ベッコウ島の決闘',
              'ko': '베코우 섬의 결투'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 83
          },
          712: {
            'contentType': 9,
            'exVersion': 2,
            'name': {
              'cn': '运河宝物库',
              'de': 'Kanäle von Uznair',
              'en': 'The Lost Canals of Uznair',
              'fr': 'Les Canaux perdus d\'Uznair',
              'ja': '宝物庫 ウズネアカナル',
              'ko': '보물고 우즈네어 운하'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          713: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '漆黑的巨龙',
              'de': 'Der tobende Drache',
              'en': 'Dark as the Night Sky',
              'fr': 'Aussi sombre que la nuit',
              'ja': '漆黒の巨竜',
              'ko': '칠흑의 거룡'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 85
          },
          714: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '红血之龙骑士',
              'de': 'Der Rubin-Drachenreiter',
              'en': 'Dragon Sound',
              'fr': 'Le Dragon écarlate',
              'ja': '紅の竜騎士',
              'ko': '붉은 용기사'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          715: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '遥远的憧憬',
              'de': 'Probe des Meisters',
              'en': 'The Orphans and the Broken Blade',
              'fr': 'L\'aspiration refoulée',
              'ja': 'あと三度、遥かな憧憬',
              'ko': '앞으로 세 번, 아득한 동경'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 86
          },
          716: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '再次相见',
              'de': 'Aus der Tiefe des Herzens',
              'en': 'Our Compromise',
              'fr': 'La dernière séparation',
              'ja': 'あと一度、君に会えたら',
              'ko': '앞으로 한 번, 너와 만날 수 있다면'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 28
          },
          717: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '原初的战士',
              'de': 'Die Urkraft in ihr',
              'en': 'Curious Gorge Meets His Match',
              'fr': 'L\'épreuve de force',
              'ja': '原初的な彼女',
              'ko': '원초적 그녀'
            },
            'offsetX': -77,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          718: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '燃烧吧高吉',
              'de': 'Kriegerische Leidenschaft',
              'en': 'The Heart of the Problem',
              'fr': 'Passion guerrière',
              'ja': '燃えよゴージ！',
              'ko': '불타올라라, 산골짜기!'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 85
          },
          719: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '吉祥天女歼灭战',
              'de': 'Götterdämmerung - Lakshmi',
              'en': 'Emanation',
              'fr': 'Émanation',
              'ja': 'ラクシュミ討滅戦',
              'ko': '락슈미 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 87
          },
          720: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '吉祥天女歼殛战',
              'de': 'Zenit der Götter - Lakshmi',
              'en': 'Emanation (Extreme)',
              'fr': 'Émanation (extrême)',
              'ja': '極ラクシュミ討滅戦',
              'ko': '극 락슈미 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 87
          },
          722: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '穿越时空的夙愿',
              'de': 'Ein Wunsch aus alten Zeiten',
              'en': 'Our Unsung Heroes',
              'fr': 'L\'espoir en héritage',
              'ja': '時をかける願い',
              'ko': '시간을 뛰어넘은 염원'
            },
            'offsetX': -175,
            'offsetY': -297,
            'sizeFactor': 200,
            'weatherRate': 63
          },
          723: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '影隐忍法贴',
              'de': 'Aus dem Verborgenen',
              'en': 'When Clans Collide',
              'fr': 'La bataille des clans',
              'ja': '影隠忍法帖',
              'ko': '그림자 인법첩'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 85
          },
          725: {
            'contentType': 9,
            'exVersion': 2,
            'name': {
              'cn': '运河宝物库深层',
              'de': 'Vergessene Kanäle von Uznair',
              'en': 'The Hidden Canals of Uznair',
              'fr': 'Les Canaux cachés d\'Uznair',
              'ja': '宝物庫 ウズネアカナル深層',
              'ko': '보물고 우즈네어 운하 심층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          729: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '距骨研究所（机动战）',
              'de': 'Astragalos',
              'en': 'Astragalos',
              'fr': 'Astragalos (machinerie)',
              'ja': 'アストラガロス (機工戦)',
              'ko': '아스트라갈로스(기공전)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          730: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '神龙梦幻歼灭战',
              'de': 'Heldenlied von Shinryu',
              'en': 'The Minstrel\'s Ballad: Shinryu\'s Domain',
              'fr': 'Le domaine de Shinryu',
              'ja': '極神龍討滅戦',
              'ko': '극 신룡 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 76
          },
          731: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.4)沉没神殿斯卡拉遗迹',
              'de': '(6.4)Die versunkene Stadt Skalla',
              'en': '(6.4)The Drowned City of Skalla',
              'fr': '(6.4)La Cité engloutie de Skalla',
              'ja': '(6.4)水没遺構 スカラ',
              'ko': '(6.4)스칼라 유적'
            },
            'offsetX': 185,
            'offsetY': 5,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          732: {
            'contentType': 26,
            'exVersion': 2,
            'name': {
              'cn': '禁地优雷卡 常风之地',
              'de': 'Eureka Anemos',
              'en': 'The Forbidden Land, Eureka Anemos',
              'fr': 'Eurêka Anemos',
              'ja': '禁断の地 エウレカ：アネモス編',
              'ko': '금단의 땅 에우레카: 아네모스편'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 91
          },
          733: {
            'contentType': 28,
            'exVersion': 2,
            'name': {
              'cn': '巴哈姆特绝境战',
              'de': 'Endlose Schatten von Bahamut (fatal)',
              'en': 'The Unending Coil of Bahamut (Ultimate)',
              'fr': 'L\'Abîme infini de Bahamut (fatal)',
              'ja': '絶バハムート討滅戦',
              'ko': '절 바하무트 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          734: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '失落之都拉巴纳斯塔',
              'de': 'Rabanastre',
              'en': 'The Royal City of Rabanastre',
              'fr': 'La Cité royale de Rabanastre',
              'ja': '失われた都 ラバナスタ',
              'ko': '왕도 라바나스터'
            },
            'offsetX': 300,
            'offsetY': -100,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          741: {
            'contentType': 22,
            'exVersion': 0,
            'name': {
              'cn': '良缘仪式',
              'de': 'Valentionzeremonie',
              'en': 'The Valentione\'s Ceremony',
              'fr': 'La Cérémonie de la Valention',
              'ja': 'ヴァレンティオンセレモニー',
              'ko': '발렌티온 예식장'
            },
            'offsetX': 0,
            'offsetY': 125,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          742: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '红玉火山狱之盖',
              'de': 'Höllenspund',
              'en': 'Hells\' Lid',
              'fr': 'Le Couvercle des enfers',
              'ja': '紅玉火山 獄之蓋',
              'ko': '지옥뚜껑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          743: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '疯狂战舰无限回廊',
              'de': 'Die Fraktal-Kontinuum (schwer)',
              'en': 'The Fractal Continuum (Hard)',
              'fr': 'Le Continuum fractal (brutal)',
              'ja': '暴走戦艦 フラクタル・コンティニアム (Hard)',
              'ko': '무한연속 박물함(어려움)'
            },
            'offsetX': 0,
            'offsetY': 350,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          746: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '白虎镇魂战',
              'de': 'Seelentanz - Byakko',
              'en': 'The Jade Stoa',
              'fr': 'La Clairière de Jade',
              'ja': '白虎征魂戦',
              'ko': '백호 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 93
          },
          748: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 西格玛幻境1',
              'de': 'Sigmametrie 1.0',
              'en': 'Sigmascape V1.0',
              'fr': 'Sigmastice v1.0',
              'ja': '次元の狭間オメガ：シグマ編1',
              'ko': '차원의 틈 오메가: 시그마편 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          749: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 西格玛幻境2',
              'de': 'Sigmametrie 2.0',
              'en': 'Sigmascape V2.0',
              'fr': 'Sigmastice v2.0',
              'ja': '次元の狭間オメガ：シグマ編2',
              'ko': '차원의 틈 오메가: 시그마편 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          750: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 西格玛幻境3',
              'de': 'Sigmametrie 3.0',
              'en': 'Sigmascape V3.0',
              'fr': 'Sigmastice v3.0',
              'ja': '次元の狭間オメガ：シグマ編3',
              'ko': '차원의 틈 오메가: 시그마편 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          751: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 西格玛幻境4',
              'de': 'Sigmametrie 4.0',
              'en': 'Sigmascape V4.0',
              'fr': 'Sigmastice v4.0',
              'ja': '次元の狭間オメガ：シグマ編4',
              'ko': '차원의 틈 오메가: 시그마편 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          752: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 西格玛幻境1',
              'de': 'Sigmametrie 1.0 (episch)',
              'en': 'Sigmascape V1.0 (Savage)',
              'fr': 'Sigmastice v1.0 (sadique)',
              'ja': '次元の狭間オメガ零式：シグマ編1',
              'ko': '차원의 틈 오메가: 시그마편(영웅) 1'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          753: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 西格玛幻境2',
              'de': 'Sigmametrie 2.0 (episch)',
              'en': 'Sigmascape V2.0 (Savage)',
              'fr': 'Sigmastice v2.0 (sadique)',
              'ja': '次元の狭間オメガ零式：シグマ編2',
              'ko': '차원의 틈 오메가: 시그마편(영웅) 2'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          754: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 西格玛幻境3',
              'de': 'Sigmametrie 3.0 (episch)',
              'en': 'Sigmascape V3.0 (Savage)',
              'fr': 'Sigmastice v3.0 (sadique)',
              'ja': '次元の狭間オメガ零式：シグマ編3',
              'ko': '차원의 틈 오메가: 시그마편(영웅) 3'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          755: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 西格玛幻境4',
              'de': 'Sigmametrie 4.0 (episch)',
              'en': 'Sigmascape V4.0 (Savage)',
              'fr': 'Sigmastice v4.0 (sadique)',
              'ja': '次元の狭間オメガ零式：シグマ編4',
              'ko': '차원의 틈 오메가: 시그마편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          758: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '白虎诗魂战',
              'de': 'Seelensturm - Byakko',
              'en': 'The Jade Stoa (Extreme)',
              'fr': 'La Clairière de Jade (extrême)',
              'ja': '極白虎征魂戦',
              'ko': '극 백호 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 93
          },
          759: {
            'exVersion': 2,
            'name': {
              'cn': '多玛飞地',
              'de': 'Domanische Enklave',
              'en': 'The Doman Enclave',
              'fr': 'Quartier enclavé de Doma',
              'ja': 'ドマ町人地',
              'ko': '도마 도읍지'
            },
            'offsetX': 23,
            'offsetY': 34,
            'sizeFactor': 400,
            'weatherRate': 84
          },
          761: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '火龙狩猎战',
              'de': 'Jagd auf Rathalos',
              'en': 'The Great Hunt',
              'fr': 'Chasse au Rathalos',
              'ja': 'リオレウス狩猟戦',
              'ko': '리오레우스 수렵전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          762: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '火龙上位狩猎战',
              'de': 'Jagd auf Rathalos (schwer)',
              'en': 'The Great Hunt (Extreme)',
              'fr': 'Chasse au Rathalos (extrême)',
              'ja': '極リオレウス狩猟戦',
              'ko': '극 리오레우스 수렵전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          763: {
            'contentType': 26,
            'exVersion': 2,
            'name': {
              'cn': '禁地优雷卡 恒冰之地',
              'de': 'Eureka Pagos',
              'en': 'The Forbidden Land, Eureka Pagos',
              'fr': 'Eurêka Pagos',
              'ja': '禁断の地 エウレカ：パゴス編',
              'ko': '금단의 땅 에우레카: 파고스편'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 94
          },
          768: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '风水灵庙岩燕庙',
              'de': 'Kompass der Schwalbe',
              'en': 'The Swallow\'s Compass',
              'fr': 'Le Compas de l\'Hirondelle',
              'ja': '風水霊殿 ガンエン廟',
              'ko': '강엔 종묘'
            },
            'offsetX': 240,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          769: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '拂晓的少年',
              'de': 'Der Knabe der Morgenröte',
              'en': 'Emissary of the Dawn',
              'fr': 'Voyage en terre hostile',
              'ja': '「暁」の少年',
              'ko': '\'새벽\'의 소년'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          770: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 1～10层',
              'de': 'Himmelssäule (Ebenen 1-10)',
              'en': 'Heaven-on-High  (Floors 1-10)',
              'fr': 'Le Pilier des Cieux (étages 1-10)',
              'ja': 'アメノミハシラ 1～10層',
              'ko': '천궁탑 1~10층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          771: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 11～20层',
              'de': 'Himmelssäule (Ebenen 11-20)',
              'en': 'Heaven-on-High  (Floors 11-20)',
              'fr': 'Le Pilier des Cieux (étages 11-20)',
              'ja': 'アメノミハシラ 11～20層',
              'ko': '천궁탑 11~20층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          772: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 21～30层',
              'de': 'Himmelssäule (Ebenen 21-30)',
              'en': 'Heaven-on-High  (Floors 21-30)',
              'fr': 'Le Pilier des Cieux (étages 21-30)',
              'ja': 'アメノミハシラ 21～30層',
              'ko': '천궁탑 21~30층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          773: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 41～50层',
              'de': 'Himmelssäule (Ebenen 41-50)',
              'en': 'Heaven-on-High  (Floors 41-50)',
              'fr': 'Le Pilier des Cieux (étages 41-50)',
              'ja': 'アメノミハシラ 41～50層',
              'ko': '천궁탑 41~50층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          774: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 61～70层',
              'de': 'Himmelssäule (Ebenen 61-70)',
              'en': 'Heaven-on-High  (Floors 61-70)',
              'fr': 'Le Pilier des Cieux (étages 61-70)',
              'ja': 'アメノミハシラ 61～70層',
              'ko': '천궁탑 61~70층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          775: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 81～90层',
              'de': 'Himmelssäule (Ebenen 81-90)',
              'en': 'Heaven-on-High  (Floors 81-90)',
              'fr': 'Le Pilier des Cieux (étages 81-90)',
              'ja': 'アメノミハシラ 81～90層',
              'ko': '천궁탑 81~90층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          776: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '封闭圣塔黎铎拉纳大灯塔',
              'de': 'Richtfeuer von Ridorana',
              'en': 'The Ridorana Lighthouse',
              'fr': 'Le Phare de Ridorana',
              'ja': '封じられた聖塔 リドルアナ',
              'ko': '대등대 리도르아나'
            },
            'offsetX': 202,
            'offsetY': -92,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          777: {
            'contentType': 28,
            'exVersion': 2,
            'name': {
              'cn': '究极神兵绝境战',
              'de': 'Heldenlied von Ultima (fatal)',
              'en': 'The Weapon\'s Refrain (Ultimate)',
              'fr': 'La Fantasmagorie d\'Ultima (fatal)',
              'ja': '絶アルテマウェポン破壊作戦',
              'ko': '절 알테마 웨폰 파괴작전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 26
          },
          778: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '月读歼灭战',
              'de': 'Götterdämmerung - Tsukuyomi',
              'en': 'Castrum Fluminis',
              'fr': 'Castrum Fluminis',
              'ja': 'ツクヨミ討滅戦',
              'ko': '츠쿠요미 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          779: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '月读幽夜歼灭战',
              'de': 'Zenit der Götter - Tsukuyomi',
              'en': 'The Minstrel\'s Ballad: Tsukuyomi\'s Pain',
              'fr': 'Castrum Fluminis (extrême)',
              'ja': '極ツクヨミ討滅戦',
              'ko': '극 츠쿠요미 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          782: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 31～40层',
              'de': 'Himmelssäule (Ebenen 31-40)',
              'en': 'Heaven-on-High  (Floors 31-40)',
              'fr': 'Le Pilier des Cieux (étages 31-40)',
              'ja': 'アメノミハシラ 31～40層',
              'ko': '천궁탑 31~40층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          783: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 51～60层',
              'de': 'Himmelssäule (Ebenen 51-60)',
              'en': 'Heaven-on-High  (Floors 51-60)',
              'fr': 'Le Pilier des Cieux (étages 51-60)',
              'ja': 'アメノミハシラ 51～60層',
              'ko': '천궁탑 51~60층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          784: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 71～80层',
              'de': 'Himmelssäule (Ebenen 71-80)',
              'en': 'Heaven-on-High  (Floors 71-80)',
              'fr': 'Le Pilier des Cieux (étages 71-80)',
              'ja': 'アメノミハシラ 71～80層',
              'ko': '천궁탑 71~80층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          785: {
            'contentType': 21,
            'exVersion': 2,
            'name': {
              'cn': '天之御柱 91～100层',
              'de': 'Himmelssäule (Ebenen 91-100)',
              'en': 'Heaven-on-High  (Floors 91-100)',
              'fr': 'Le Pilier des Cieux (étages 91-100)',
              'ja': 'アメノミハシラ 91～100層',
              'ko': '천궁탑 91~100층'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          788: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '污染庭园圣茉夏娜植物园',
              'de': 'Sankt Mocianne-Arboretum (schwer)',
              'en': 'Saint Mocianne\'s Arboretum (Hard)',
              'fr': 'L\'Arboretum Sainte-Mocianne (brutal)',
              'ja': '草木汚染 聖モシャーヌ植物園 (Hard)',
              'ko': '성 모샨 식물원(어려움)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          789: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.4)死亡大地终末焦土',
              'de': '(6.4)Das Kargland',
              'en': '(6.4)The Burn',
              'fr': '(6.4)L\'Escarre',
              'ja': '(6.4)永久焦土 ザ・バーン',
              'ko': '(6.4)영구 초토지대'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 97
          },
          790: {
            'contentType': 22,
            'exVersion': 0,
            'name': {
              'cn': '灾厄重现军事演习',
              'de': 'Gedenkschlacht der Eorzäischen Allianz',
              'en': 'The Calamity Retold',
              'fr': 'Les grandes manœuvres commémoratives',
              'ja': '新生祭軍事演習',
              'ko': '신생제 군사훈련'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 95
          },
          791: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '隐塞（机动战）',
              'de': 'Verborgene Schlucht',
              'en': 'Hidden Gorge',
              'fr': 'Gorge dérobée (machinerie)',
              'ja': 'ヒドゥンゴージ (機工戦)',
              'ko': '숨겨진 보루(기공전)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          792: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '虚景跳跳乐大挑战',
              'de': 'Kaktor-Kletterwand',
              'en': 'Leap of Faith',
              'fr': 'Haute voltige',
              'ja': '挑戦！ ジャンピングアスレチック',
              'ko': '뛰어라! 점핑 운동회'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          793: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '(6.4)国境防线基姆利特暗区',
              'de': '(6.4)Die Ghimlyt-Finsternis',
              'en': '(6.4)The Ghimlyt Dark',
              'fr': '(6.4)Les Ténèbres de Ghimlyt',
              'ja': '(6.4)境界戦線 ギムリトダーク',
              'ko': '(6.4)김리트 황야'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          794: {
            'contentType': 9,
            'exVersion': 2,
            'name': {
              'cn': '运河宝物库神殿',
              'de': 'Glücksaltäre von Uznair',
              'en': 'The Shifting Altars of Uznair',
              'fr': 'Le Temple sacré d\'Uznair',
              'ja': '宝物庫 ウズネアカナル祭殿',
              'ko': '보물고 우즈네어 운하 제전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          795: {
            'contentType': 26,
            'exVersion': 2,
            'name': {
              'cn': '禁地优雷卡 涌火之地',
              'de': 'Eureka Pyros',
              'en': 'The Forbidden Land, Eureka Pyros',
              'fr': 'Eurêka Pyros',
              'ja': '禁断の地 エウレカ：ピューロス編',
              'ko': '금단의 땅 에우레카: 피로스편'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 96
          },
          796: {
            'contentType': 27,
            'exVersion': 0,
            'name': {
              'cn': '出道战',
              'de': 'Debüt in der Himmlischen Arena',
              'en': 'All\'s Well That Starts Well',
              'fr': 'Début du spectacle',
              'ja': 'デビューマッチ',
              'ko': '데뷔전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          797: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '楔石洞',
              'de': 'Der Wille der Mondgöttin',
              'en': 'The Will of the Moon',
              'fr': 'Ralliement dans la steppe',
              'ja': '楔石の虚',
              'ko': '쐐기돌 동굴'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          798: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 阿尔法幻境1',
              'de': 'Alphametrie 1.0',
              'en': 'Alphascape V1.0',
              'fr': 'Alphastice v1.0',
              'ja': '次元の狭間オメガ：アルファ編1',
              'ko': '차원의 틈 오메가: 알파편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          799: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 阿尔法幻境2',
              'de': 'Alphametrie 2.0',
              'en': 'Alphascape V2.0',
              'fr': 'Alphastice v2.0',
              'ja': '次元の狭間オメガ：アルファ編2',
              'ko': '차원의 틈 오메가: 알파편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          800: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 阿尔法幻境3',
              'de': 'Alphametrie 3.0',
              'en': 'Alphascape V3.0',
              'fr': 'Alphastice v3.0',
              'ja': '次元の狭間オメガ：アルファ編3',
              'ko': '차원의 틈 오메가: 알파편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          801: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄时空狭缝 阿尔法幻境4',
              'de': 'Alphametrie 4.0',
              'en': 'Alphascape V4.0',
              'fr': 'Alphastice v4.0',
              'ja': '次元の狭間オメガ：アルファ編4',
              'ko': '차원의 틈 오메가: 알파편 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          802: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 阿尔法幻境1',
              'de': 'Alphametrie 1.0 (episch)',
              'en': 'Alphascape V1.0 (Savage)',
              'fr': 'Alphastice v1.0 (sadique)',
              'ja': '次元の狭間オメガ零式：アルファ編1',
              'ko': '차원의 틈 오메가: 알파편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          803: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 阿尔法幻境2',
              'de': 'Alphametrie 2.0 (episch)',
              'en': 'Alphascape V2.0 (Savage)',
              'fr': 'Alphastice v2.0 (sadique)',
              'ja': '次元の狭間オメガ零式：アルファ編2',
              'ko': '차원의 틈 오메가: 알파편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          804: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 阿尔法幻境3',
              'de': 'Alphametrie 3.0 (episch)',
              'en': 'Alphascape V3.0 (Savage)',
              'fr': 'Alphastice v3.0 (sadique)',
              'ja': '次元の狭間オメガ零式：アルファ編3',
              'ko': '차원의 틈 오메가: 알파편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          805: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '欧米茄零式时空狭缝 阿尔法幻境4',
              'de': 'Alphametrie 4.0 (episch)',
              'en': 'Alphascape V4.0 (Savage)',
              'fr': 'Alphastice v4.0 (sadique)',
              'ja': '次元の狭間オメガ零式：アルファ編4',
              'ko': '차원의 틈 오메가: 알파편(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 92
          },
          806: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '保镖歼灭战',
              'de': 'Duell auf der Kugane-Brücke',
              'en': 'Kugane Ohashi',
              'fr': 'Le Pont Ohashi',
              'ja': '真ヨウジンボウ討滅戦',
              'ko': '진 요우진보 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          810: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '朱雀镇魂战',
              'de': 'Seelentanz - Suzaku',
              'en': 'Hells\' Kier',
              'fr': 'Le Nid des Lamentations',
              'ja': '朱雀征魂戦',
              'ko': '주작 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 98
          },
          811: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '朱雀诗魂战',
              'de': 'Seelensturm - Suzaku',
              'en': 'Hells\' Kier (Extreme)',
              'fr': 'Le Nid des Lamentations (extrême)',
              'ja': '極朱雀征魂戦',
              'ko': '극 주작 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 98
          },
          813: {
            'exVersion': 3,
            'name': {
              'cn': '雷克兰德',
              'de': 'Seenland',
              'en': 'Lakeland',
              'fr': 'Grand-Lac',
              'ja': 'レイクランド',
              'ko': '레이크랜드'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 106
          },
          814: {
            'exVersion': 3,
            'name': {
              'cn': '珂露西亚岛',
              'de': 'Kholusia',
              'en': 'Kholusia',
              'fr': 'Kholusia',
              'ja': 'コルシア島',
              'ko': '콜루시아 섬'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 107
          },
          815: {
            'exVersion': 3,
            'name': {
              'cn': '安穆·艾兰',
              'de': 'Amh Araeng',
              'en': 'Amh Araeng',
              'fr': 'Amh Araeng',
              'ja': 'アム・アレーン',
              'ko': '아므 아랭'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 108
          },
          816: {
            'exVersion': 3,
            'name': {
              'cn': '伊尔美格',
              'de': 'Il Mheg',
              'en': 'Il Mheg',
              'fr': 'Il Mheg',
              'ja': 'イル・メグ',
              'ko': '일 메그'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 109
          },
          817: {
            'exVersion': 3,
            'name': {
              'cn': '拉凯提卡大森林',
              'de': 'Der Große Wald Rak\'tika',
              'en': 'The Rak\'tika Greatwood',
              'fr': 'Rak\'tika',
              'ja': 'ラケティカ大森林',
              'ko': '라케티카 대삼림'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 110
          },
          818: {
            'exVersion': 3,
            'name': {
              'cn': '黑风海',
              'de': 'Tempest',
              'en': 'The Tempest',
              'fr': 'La Tempête',
              'ja': 'テンペスト',
              'ko': '템페스트'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 111
          },
          819: {
            'exVersion': 3,
            'name': {
              'cn': '水晶都',
              'de': 'Crystarium',
              'en': 'The Crystarium',
              'fr': 'Cristarium',
              'ja': 'クリスタリウム',
              'ko': '크리스타리움'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 112
          },
          820: {
            'exVersion': 3,
            'name': {
              'cn': '游末邦',
              'de': 'Eulmore',
              'en': 'Eulmore',
              'fr': 'Eulmore',
              'ja': 'ユールモア',
              'ko': '율모어'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 113
          },
          821: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '水妖幻园多恩美格禁园',
              'de': 'Dohn Mheg',
              'en': 'Dohn Mheg',
              'fr': 'Dohn Mheg',
              'ja': '水妖幻園 ドォーヌ・メグ',
              'ko': '도느 메그'
            },
            'offsetX': 0,
            'offsetY': 200,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          822: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '伪造天界格鲁格火山',
              'de': 'Der Gulg',
              'en': 'Mt. Gulg',
              'fr': 'Mont Gulg',
              'ja': '偽造天界 グルグ火山',
              'ko': '굴그 화산'
            },
            'offsetX': -188,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 102
          },
          823: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '文明古迹奇坦那神影洞',
              'de': 'Irrungen der Qitari',
              'en': 'The Qitana Ravel',
              'fr': 'L\'Enchevêtrement des Qitari',
              'ja': '古跡探索 キタンナ神影洞',
              'ko': '키타나 신굴'
            },
            'offsetX': 0,
            'offsetY': -274,
            'sizeFactor': 200,
            'weatherRate': 102
          },
          824: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '青龙镇魂战',
              'de': 'Seelentanz - Seiryu',
              'en': 'The Wreath of Snakes',
              'fr': 'L\'Îlot des Amertumes',
              'ja': '青龍征魂戦',
              'ko': '청룡 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 99
          },
          825: {
            'contentType': 4,
            'exVersion': 2,
            'name': {
              'cn': '青龙诗魂战',
              'de': 'Seelensturm - Seiryu',
              'en': 'The Wreath of Snakes (Extreme)',
              'fr': 'L\'Îlot des Amertumes (extrême)',
              'ja': '極青龍征魂戦',
              'ko': '극 청룡 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 99
          },
          826: {
            'contentType': 5,
            'exVersion': 2,
            'name': {
              'cn': '乐欲之所瓯博讷修道院',
              'de': 'Kloster von Orbonne',
              'en': 'The Orbonne Monastery',
              'fr': 'Le Monastère d\'Orbonne',
              'ja': '楽欲の僧院 オーボンヌ',
              'ko': '오본느 수도원'
            },
            'offsetX': -545,
            'offsetY': -663,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          827: {
            'contentType': 26,
            'exVersion': 2,
            'name': {
              'cn': '禁地优雷卡 丰水之地',
              'de': 'Eureka Hydatos',
              'en': 'The Forbidden Land, Eureka Hydatos',
              'fr': 'Eurêka Hydatos',
              'ja': '禁断の地 エウレカ：ヒュダトス編',
              'ko': '금단의 땅 에우레카: 히다토스편'
            },
            'offsetX': 0,
            'offsetY': 475,
            'sizeFactor': 100,
            'weatherRate': 100
          },
          830: {
            'contentType': 7,
            'exVersion': 2,
            'name': {
              'cn': '英雄挽歌',
              'de': 'Requiem der Helden',
              'en': 'A Requiem for Heroes',
              'fr': 'Un requiem pour les héros',
              'ja': '英雄への鎮魂歌',
              'ko': '영웅을 위한 진혼가'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          831: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '多玛方城战：东风战4人亲友桌（不带食断）',
              'de': '4-Spieler-Mahjong (schnelle Partie, Kuitan deaktiviert)',
              'en': 'Four-player Mahjong (Quick Match, Kuitan Disabled)',
              'fr': 'Mahjong domien : 4 joueurs (partie rapide sans kuitan)',
              'ja': 'ドマ式麻雀：東風戦4人セット卓（クイタン無し）',
              'ko': '작패유희: 동풍전 4인용 탁자(부르기 단요구 없음)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          832: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '空军装甲驾驶员',
              'de': 'Luftwaffe, Feuer frei!',
              'en': 'Air Force One',
              'fr': 'As de l\'air',
              'ja': '出撃！ エアフォースパイロット',
              'ko': '출격! 에어포스 조종사'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          834: {
            'contentType': 7,
            'exVersion': 0,
            'name': {
              'cn': '风之使者',
              'de': 'Durch den Sturm und zurück',
              'en': 'Messenger of the Winds',
              'fr': 'La Messagère du vent',
              'ja': '来訪せし風の御使',
              'ko': '바람의 어사'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 101
          },
          836: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '避暑离宫马利卡大井',
              'de': 'Malikahs Brunnen',
              'en': 'Malikah\'s Well',
              'fr': 'Le Puits de Malikah',
              'ja': '爽涼離宮 マリカの大井戸',
              'ko': '말리카 큰우물'
            },
            'offsetX': -65,
            'offsetY': -30,
            'sizeFactor': 200,
            'weatherRate': 102
          },
          837: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '遇袭集落水滩村',
              'de': 'Holminster',
              'en': 'Holminster Switch',
              'fr': 'Holminster',
              'ja': '殺戮郷村 ホルミンスター',
              'ko': '홀민스터'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 102
          },
          838: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '末日暗影亚马乌罗提',
              'de': 'Amaurot',
              'en': 'Amaurot',
              'fr': 'Amaurote',
              'ja': '終末幻想 アーモロート',
              'ko': '아모로트'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 105
          },
          840: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '异界遗构希尔科斯孪晶塔',
              'de': 'Der Kristallzwilling',
              'en': 'The Twinning',
              'fr': 'La Macle de Syrcus',
              'ja': '異界遺構 シルクス・ツイニング',
              'ko': '쌍둥이 시르쿠스'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          841: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '创造机构阿尼德罗学院',
              'de': 'Akadaemia Anyder',
              'en': 'Akadaemia Anyder',
              'fr': 'Akadaemia Anydre',
              'ja': '創造機関 アナイダアカデミア',
              'ko': '애나이더 아카데미아'
            },
            'offsetX': 0,
            'offsetY': 30,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          845: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '缇坦妮雅歼灭战',
              'de': 'Offenbarung - Titania',
              'en': 'The Dancing Plague',
              'fr': 'La Valse du Monarque',
              'ja': 'ティターニア討滅戦',
              'ko': '티타니아 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 103
          },
          846: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '无瑕灵君歼灭战',
              'de': 'Offenbarung - Innozenz',
              'en': 'The Crown of the Immaculate',
              'fr': 'La Couronne de l\'Immaculé',
              'ja': 'イノセンス討滅戦',
              'ko': '이노센스 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 104
          },
          847: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '哈迪斯歼灭战',
              'de': 'Offenbarung - Hades',
              'en': 'The Dying Gasp',
              'fr': 'Le Râle de l\'Agonie',
              'ja': 'ハーデス討滅戦',
              'ko': '하데스 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 105
          },
          848: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '无瑕灵君歼殛战',
              'de': 'Letzte Läuterung - Innozenz',
              'en': 'The Crown of the Immaculate (Extreme)',
              'fr': 'La Couronne de l\'Immaculé (extrême)',
              'ja': '極イノセンス討滅戦',
              'ko': '극 이노센스 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 104
          },
          849: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 觉醒之章1',
              'de': 'Edens Erwachen - Auferstehung',
              'en': 'Eden\'s Gate: Resurrection',
              'fr': 'L\'Éveil d\'Éden - Résurrection',
              'ja': '希望の園エデン：覚醒編1',
              'ko': '희망의 낙원 에덴: 각성편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          850: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 觉醒之章2',
              'de': 'Edens Erwachen - Niederkunft',
              'en': 'Eden\'s Gate: Descent',
              'fr': 'L\'Éveil d\'Éden - Descente',
              'ja': '希望の園エデン：覚醒編2',
              'ko': '희망의 낙원 에덴: 각성편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          851: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 觉醒之章3',
              'de': 'Edens Erwachen - Überflutung',
              'en': 'Eden\'s Gate: Inundation',
              'fr': 'L\'Éveil d\'Éden - Déluge',
              'ja': '希望の園エデン：覚醒編3',
              'ko': '희망의 낙원 에덴: 각성편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 38
          },
          852: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 觉醒之章4',
              'de': 'Edens Erwachen - Beerdigung',
              'en': 'Eden\'s Gate: Sepulture',
              'fr': 'L\'Éveil d\'Éden - Inhumation',
              'ja': '希望の園エデン：覚醒編4',
              'ko': '희망의 낙원 에덴: 각성편 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          853: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 觉醒之章1',
              'de': 'Edens Erwachen - Auferstehung (episch)',
              'en': 'Eden\'s Gate: Resurrection (Savage)',
              'fr': 'L\'Éveil d\'Éden - Résurrection (sadique)',
              'ja': '希望の園エデン零式：覚醒編1',
              'ko': '희망의 낙원 에덴: 각성편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          854: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 觉醒之章2',
              'de': 'Edens Erwachen - Niederkunft (episch)',
              'en': 'Eden\'s Gate: Descent (Savage)',
              'fr': 'L\'Éveil d\'Éden - Descente (sadique)',
              'ja': '希望の園エデン零式：覚醒編2',
              'ko': '희망의 낙원 에덴: 각성편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          855: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 觉醒之章3',
              'de': 'Edens Erwachen - Überflutung (episch)',
              'en': 'Eden\'s Gate: Inundation (Savage)',
              'fr': 'L\'Éveil d\'Éden - Déluge (sadique)',
              'ja': '希望の園エデン零式：覚醒編3',
              'ko': '희망의 낙원 에덴: 각성편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 38
          },
          856: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 觉醒之章4',
              'de': 'Edens Erwachen - Beerdigung (episch)',
              'en': 'Eden\'s Gate: Sepulture (Savage)',
              'fr': 'L\'Éveil d\'Éden - Inhumation (sadique)',
              'ja': '希望の園エデン零式：覚醒編4',
              'ko': '희망의 낙원 에덴: 각성편(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          858: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '缇坦妮雅歼殛战',
              'de': 'Letzte Läuterung - Titania',
              'en': 'The Dancing Plague (Extreme)',
              'fr': 'La Valse du Monarque (extrême)',
              'ja': '極ティターニア討滅戦',
              'ko': '극 티타니아 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 103
          },
          859: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '机关、诅咒、剧毒与……',
              'de': 'Der Beichtstuhl von Toupasa dem Älteren',
              'en': 'Legend of the Not-so-hidden Temple',
              'fr': 'Le Confessionnal de Toupasa l\'ancien',
              'ja': '仕掛けと呪いと毒と',
              'ko': '함정과 저주와 독'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 102
          },
          860: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '废都拿巴示艾兰',
              'de': 'Vater und Bruder',
              'en': 'Coming Clean',
              'fr': 'Sur les rails de Nabaath Areng',
              'ja': '廃都ナバスアレン',
              'ko': '나바스아렝 폐허'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 102
          },
          873: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '摇摆的天平',
              'de': 'Ob Mitleid oder Hass',
              'en': 'The Hardened Heart',
              'fr': 'Naissance d\'un bourreau',
              'ja': '揺れる天秤',
              'ko': '흔들리는 천칭'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          874: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '古代大再生魔法',
              'de': 'Alter Zauber',
              'en': 'The Lost and the Found',
              'fr': 'Magie ancestrale',
              'ja': '古の大再生魔法',
              'ko': '고대의 대재생 마법'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 110
          },
          875: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '勇敢的猎人',
              'de': 'Der Legende auf der Spur',
              'en': 'The Hunter\'s Legacy',
              'fr': 'La chasseuse de légende',
              'ja': '勇気の狩人',
              'ko': '용기 있는 사냥꾼'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 63
          },
          876: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '奈贝尔特的后悔',
              'de': 'Ein großes Opfer',
              'en': 'Nyelbert\'s Lament',
              'fr': 'Une cupidité bien généreuse',
              'ja': 'ナイルベルトの後悔',
              'ko': '나일베르트의 후회'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          879: {
            'contentType': 9,
            'exVersion': 3,
            'name': {
              'cn': '梦羽宝境',
              'de': 'Verliese von Lyhe Ghiah',
              'en': 'The Dungeons of Lyhe Ghiah',
              'fr': 'Le Donjon hypogéen du Lyhe Ghiah',
              'ja': '宝物庫 リェー・ギア・ダンジョン',
              'ko': '보물고 리예 기아 지하미궁'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          882: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '复制工厂废墟',
              'de': 'Die kopierte Fabrik',
              'en': 'The Copied Factory',
              'fr': 'La réplique de l\'usine désaffectée',
              'ja': '複製サレタ工場廃墟',
              'ko': '복제된 공장 폐허'
            },
            'offsetX': 610,
            'offsetY': 70,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          884: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '魔法宫殿宇宙宫',
              'de': 'Chateau Cosmea',
              'en': 'The Grand Cosmos',
              'fr': 'Le Cosmos coruscant',
              'ja': '魔法宮殿 グラン・コスモス',
              'ko': '그랑 코스모스'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          885: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '哈迪斯孤念歼灭战',
              'de': 'Letzte Läuterung - Hades',
              'en': 'The Minstrel\'s Ballad: Hades\'s Elegy',
              'fr': 'Le Râle de l\'Agonie (extrême)',
              'ja': '極ハーデス討滅戦',
              'ko': '극 하데스 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 105
          },
          887: {
            'contentType': 28,
            'exVersion': 3,
            'name': {
              'cn': '亚历山大绝境战',
              'de': 'Alexander (fatal)',
              'en': 'The Epic of Alexander (Ultimate)',
              'fr': 'L\'Odyssée d\'Alexander (fatal)',
              'ja': '絶アレキサンダー討滅戦',
              'ko': '절 알렉산더 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          888: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '昂萨哈凯尔（竞争战）',
              'de': 'Onsal Hakair (Danshig Naadam)',
              'en': 'Onsal Hakair (Danshig Naadam)',
              'fr': 'Onsal Hakair (Danshig Naadam)',
              'ja': 'オンサル・ハカイル (終節戦)',
              'ko': '온살 하카이르(계절끝 합전)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 117
          },
          893: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '纯白誓约、漆黑密约',
              'de': 'Der Wolf und der Drachenreiter',
              'en': 'Vows of Virtue, Deeds of Cruelty',
              'fr': 'Vœux de vertu, actes de cruauté',
              'ja': '白き誓約、黒き密約',
              'ko': '하얀 서약, 검은 밀약'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          894: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '我心依旧',
              'de': 'Trubel im Traumland',
              'en': 'As the Heart Bids',
              'fr': 'À l\'écoute de soi',
              'ja': 'この心が望むがままに',
              'ko': '이 마음이 원하는 대로'
            },
            'offsetX': -12,
            'offsetY': 50,
            'sizeFactor': 400,
            'weatherRate': 40
          },
          897: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '红宝石神兵破坏作战',
              'de': 'Rubinfeuer - Entfesselung',
              'en': 'Cinder Drift',
              'fr': 'Les Nuées de Brandons',
              'ja': 'ルビーウェポン破壊作戦',
              'ko': '루비 웨폰 파괴작전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 28
          },
          898: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '黑风海底阿尼德罗追忆馆',
              'de': 'Anamnesis Anyder',
              'en': 'Anamnesis Anyder',
              'fr': 'Anamnesis Anydre',
              'ja': '黒風海底 アニドラス・アナムネーシス',
              'ko': '애니드라스 아남네시스'
            },
            'offsetX': 100,
            'offsetY': -390,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          900: {
            'contentType': 16,
            'exVersion': 0,
            'name': {
              'cn': '出海垂钓',
              'de': 'Auf großer Fahrt',
              'en': 'Ocean Fishing',
              'fr': 'Pêche en mer',
              'ja': 'オーシャンフィッシング',
              'ko': '먼바다 낚시'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 14
          },
          902: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 共鸣之章1',
              'de': 'Edens Resonanz - Entladung',
              'en': 'Eden\'s Verse: Fulmination',
              'fr': 'Les Accords d\'Éden - Fulmination',
              'ja': '希望の園エデン：共鳴編1',
              'ko': '희망의 낙원 에덴: 공명편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          903: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 共鸣之章2',
              'de': 'Edens Resonanz - Raserei',
              'en': 'Eden\'s Verse: Furor',
              'fr': 'Les Accords d\'Éden - Fureur',
              'ja': '希望の園エデン：共鳴編2',
              'ko': '희망의 낙원 에덴: 공명편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          904: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 共鸣之章3',
              'de': 'Edens Resonanz - Bildersturm',
              'en': 'Eden\'s Verse: Iconoclasm',
              'fr': 'Les Accords d\'Éden - Iconoclasme',
              'ja': '希望の園エデン：共鳴編3',
              'ko': '희망의 낙원 에덴: 공명편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          905: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 共鸣之章4',
              'de': 'Edens Resonanz - Erstarrung',
              'en': 'Eden\'s Verse: Refulgence',
              'fr': 'Les Accords d\'Éden - Éclat',
              'ja': '希望の園エデン：共鳴編4',
              'ko': '희망의 낙원 에덴: 공명편 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 46
          },
          906: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 共鸣之章1',
              'de': 'Edens Resonanz - Entladung (episch)',
              'en': 'Eden\'s Verse: Fulmination (Savage)',
              'fr': 'Les Accords d\'Éden - Fulmination (sadique)',
              'ja': '希望の園エデン零式：共鳴編1',
              'ko': '희망의 낙원 에덴: 공명편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          907: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 共鸣之章2',
              'de': 'Edens Resonanz - Raserei (episch)',
              'en': 'Eden\'s Verse: Furor (Savage)',
              'fr': 'Les Accords d\'Éden - Fureur (sadique)',
              'ja': '希望の園エデン零式：共鳴編2',
              'ko': '희망의 낙원 에덴: 공명편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          908: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 共鸣之章3',
              'de': 'Edens Resonanz - Bildersturm (episch)',
              'en': 'Eden\'s Verse: Iconoclasm (Savage)',
              'fr': 'Les Accords d\'Éden - Iconoclasme (sadique)',
              'ja': '希望の園エデン零式：共鳴編3',
              'ko': '희망의 낙원 에덴: 공명편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          909: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 共鸣之章4',
              'de': 'Edens Resonanz - Erstarrung (episch)',
              'en': 'Eden\'s Verse: Refulgence (Savage)',
              'fr': 'Les Accords d\'Éden - Éclat (sadique)',
              'ja': '希望の園エデン零式：共鳴編4',
              'ko': '희망의 낙원 에덴: 공명편(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 46
          },
          911: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '博兹雅堡垒蒸发事件',
              'de': 'Der Bozja-Vorfall',
              'en': 'The Bozja Incident',
              'fr': 'Prélude à la catastrophe',
              'ja': 'シタデル・ボズヤ蒸発事変',
              'ko': '보즈야 사건'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 123
          },
          912: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '红宝石神兵狂想作战',
              'de': 'Rubinfeuer - Trauma',
              'en': 'Cinder Drift (Extreme)',
              'fr': 'Les Nuées de Brandons (extrême)',
              'ja': '極ルビーウェポン破壊作戦',
              'ko': '극 루비 웨폰 파괴작전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 28
          },
          913: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '博兹雅堡垒追忆战',
              'de': 'Memoria Misera (extrem)',
              'en': 'Memoria Misera (Extreme)',
              'fr': 'Memoria Misera (extrême)',
              'ja': '極シタデル・ボズヤ追憶戦',
              'ko': '극 보즈야 추억전'
            },
            'offsetX': -35,
            'offsetY': 683,
            'sizeFactor': 400,
            'weatherRate': 123
          },
          914: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '英雄无法安息',
              'de': 'Von schlafenden Helden',
              'en': 'A Sleep Disturbed',
              'fr': 'L\'épreuve ronka',
              'ja': '汝、英雄の眠り妨げるは',
              'ko': '그대, 영웅의 잠을 방해하는가'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          916: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '暗影决战诺弗兰特',
              'de': 'Schlacht um Norvrandt',
              'en': 'The Heroes\' Gauntlet',
              'fr': 'La Traversée de Norvrandt',
              'ja': '漆黒決戦 ノルヴラント',
              'ko': '노르브란트'
            },
            'offsetX': 626,
            'offsetY': -611,
            'sizeFactor': 200,
            'weatherRate': 125
          },
          917: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '人偶军事基地',
              'de': 'Die Puppenfestung',
              'en': 'The Puppets\' Bunker',
              'fr': 'La base militaire des Pantins',
              'ja': '人形タチノ軍事基地',
              'ko': '인형들의 군사 기지'
            },
            'offsetX': 290,
            'offsetY': -190,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          920: {
            'contentType': 29,
            'exVersion': 3,
            'name': {
              'cn': '南方博兹雅战线',
              'de': 'Bozja-Südfront',
              'en': 'The Bozjan Southern Front',
              'fr': 'Front sud de Bozja',
              'ja': '南方ボズヤ戦線',
              'ko': '남부 보즈야 전선'
            },
            'offsetX': -127,
            'offsetY': -424,
            'sizeFactor': 100,
            'weatherRate': 124
          },
          922: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '光之战士歼灭战',
              'de': 'Krieger des Lichts',
              'en': 'The Seat of Sacrifice',
              'fr': 'Le Trône du Sacrifice',
              'ja': 'ウォーリア・オブ・ライト討滅戦',
              'ko': '빛의 전사 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 125
          },
          923: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '光之战士幻耀歼灭战',
              'de': 'Krieger des Lichts (extrem)',
              'en': 'The Seat of Sacrifice (Extreme)',
              'fr': 'Le Trône du Sacrifice (extrême)',
              'ja': '極ウォーリア・オブ・ライト討滅戦',
              'ko': '극 빛의 전사 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 126
          },
          924: {
            'contentType': 9,
            'exVersion': 3,
            'name': {
              'cn': '梦羽宝殿',
              'de': 'Das Karussell von Lyhe Ghiah',
              'en': 'The Shifting Oubliettes of Lyhe Ghiah',
              'fr': 'Le Jardin secret du Lyhe Ghiah',
              'ja': '宝物庫 リェー・ギア・ダンジョン祭殿',
              'ko': '보물고 리예 기아 지하미궁 제전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          925: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '飞翔吧，前往维尔利特！',
              'de': 'Luftangriff auf Werlyt',
              'en': 'Sleep Now in Sapphire',
              'fr': 'Sur la mer de saphir',
              'ja': '飛べ！ ウェルリトへ ',
              'ko': '날아라! 웰리트를 향하여'
            },
            'offsetX': 15,
            'offsetY': -610,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          929: {
            'contentType': 16,
            'exVersion': 1,
            'name': {
              'cn': '天上福地云冠群岛',
              'de': 'Das Diadem - Erschließung',
              'en': 'The Diadem',
              'fr': 'Le Diadème',
              'ja': '雲海採集 ディアデム諸島',
              'ko': '디아뎀 제도'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 68
          },
          930: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '希瓦幻巧战',
              'de': 'Traumprüfung - Shiva',
              'en': 'The Akh Afah Amphitheatre (Unreal)',
              'fr': 'L\'Amphithéâtre d\'Akh Afah (irréel)',
              'ja': '幻シヴァ討滅戦',
              'ko': '환 시바 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 46
          },
          932: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '褪色的记忆',
              'de': 'Verblasste Erinnerungen',
              'en': 'Faded Memories',
              'fr': 'Souvenir périssable',
              'ja': '色あせた記憶',
              'ko': '빛바랜 기억'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 114
          },
          933: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '魔术工房玛托雅工作室',
              'de': 'Matoyas Atelier',
              'en': 'Matoya\'s Relict',
              'fr': 'L\'Atelier abandonné de Matoya',
              'ja': '魔術工房 マトーヤのアトリエ',
              'ko': '마토야의 공방'
            },
            'offsetX': 0,
            'offsetY': -75,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          934: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '绿宝石神兵破坏作战',
              'de': 'Smaragdsturm - Entfesselung',
              'en': 'Castrum Marinum',
              'fr': 'Castrum Marinum',
              'ja': 'エメラルドウェポン破壊作戦',
              'ko': '에메랄드 웨폰 파괴작전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          935: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '绿宝石神兵狂想作战',
              'de': 'Smaragdsturm - Trauma',
              'en': 'Castrum Marinum (Extreme)',
              'fr': 'Castrum Marinum (extrême)',
              'ja': '極エメラルドウェポン破壊作戦',
              'ko': '극 에메랄드 웨폰 파괴작전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          936: {
            'contentType': 29,
            'exVersion': 3,
            'name': {
              'cn': '女王古殿',
              'de': 'Delubrum Reginae',
              'en': 'Delubrum Reginae',
              'fr': 'Delubrum Reginae',
              'ja': 'グンヒルド・ディルーブラム',
              'ko': '군힐드 사원'
            },
            'offsetX': 0,
            'offsetY': -378,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          937: {
            'contentType': 29,
            'exVersion': 3,
            'name': {
              'cn': '零式女王古殿',
              'de': 'Delubrum Reginae (episch)',
              'en': 'Delubrum Reginae (Savage)',
              'fr': 'Delubrum Reginae (sadique)',
              'ja': 'グンヒルド・ディルーブラム零式',
              'ko': '군힐드 사원(영웅)'
            },
            'offsetX': 0,
            'offsetY': -378,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          938: {
            'contentType': 2,
            'exVersion': 3,
            'name': {
              'cn': '黄金平原帕戈尔赞草原',
              'de': 'Die Goldene Ebene von Paglth\'an',
              'en': 'Paglth\'an',
              'fr': 'La grande prairie de Paglth\'an',
              'ja': '黄金平原 パガルザン',
              'ko': '파글단'
            },
            'offsetX': 415,
            'offsetY': -110,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          940: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '九宫幻卡：官方锦标赛',
              'de': 'Triple Triad: Manderville-Turnier',
              'en': 'Triple Triad Open Tournament',
              'fr': 'Tournoi officiel de Triple Triade',
              'ja': 'トリプルトライアド：オフィシャルトーナメント',
              'ko': '트리플 트라이어드: 공식 토너먼트'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 800,
            'weatherRate': 0
          },
          941: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '九宫幻卡：锦标赛对局室',
              'de': 'Triple Triad: Privatturnier',
              'en': 'Triple Triad Invitational Parlor',
              'fr': 'Salle de tournoi libre de Triple Triade',
              'ja': 'トリプルトライアド：カスタムトーナメントルーム',
              'ko': '트리플 트라이어드: 친선 토너먼트'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 800,
            'weatherRate': 0
          },
          942: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 再生之章1',
              'de': 'Edens Verheißung - Umbra',
              'en': 'Eden\'s Promise: Umbra',
              'fr': 'La Promesse d\'Éden - Nuée',
              'ja': '希望の園エデン：再生編1',
              'ko': '희망의 낙원 에덴: 재생편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          943: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 再生之章2',
              'de': 'Edens Verheißung - Litanei',
              'en': 'Eden\'s Promise: Litany',
              'fr': 'La Promesse d\'Éden - Litanie',
              'ja': '希望の園エデン：再生編2',
              'ko': '희망의 낙원 에덴: 재생편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          944: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 再生之章3',
              'de': 'Edens Verheißung - Anamorphose',
              'en': 'Eden\'s Promise: Anamorphosis',
              'fr': 'La Promesse d\'Éden - Anamorphose',
              'ja': '希望の園エデン：再生編3',
              'ko': '희망의 낙원 에덴: 재생편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          945: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸希望乐园 再生之章4',
              'de': 'Edens Verheißung - Ewigkeit',
              'en': 'Eden\'s Promise: Eternity',
              'fr': 'La Promesse d\'Éden - Éternité',
              'ja': '希望の園エデン：再生編4',
              'ko': '희망의 낙원 에덴: 재생편 4'
            },
            'offsetX': -71,
            'offsetY': 23,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          946: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 再生之章1',
              'de': 'Edens Verheißung - Umbra (episch)',
              'en': 'Eden\'s Promise: Umbra (Savage)',
              'fr': 'La Promesse d\'Éden - Nuée (sadique)',
              'ja': '希望の園エデン零式：再生編1',
              'ko': '희망의 낙원 에덴: 재생편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          947: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 再生之章2',
              'de': 'Edens Verheißung - Litanei (episch)',
              'en': 'Eden\'s Promise: Litany (Savage)',
              'fr': 'La Promesse d\'Éden - Litanie (sadique)',
              'ja': '希望の園エデン零式：再生編2',
              'ko': '희망의 낙원 에덴: 재생편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          948: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 再生之章3',
              'de': 'Edens Verheißung - Anamorphose (episch)',
              'en': 'Eden\'s Promise: Anamorphosis (Savage)',
              'fr': 'La Promesse d\'Éden - Anamorphose (sadique)',
              'ja': '希望の園エデン零式：再生編3',
              'ko': '희망의 낙원 에덴: 재생편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          949: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '伊甸零式希望乐园 再生之章4',
              'de': 'Edens Verheißung - Ewigkeit (episch)',
              'en': 'Eden\'s Promise: Eternity (Savage)',
              'fr': 'La Promesse d\'Éden - Éternité (sadique)',
              'ja': '希望の園エデン零式：再生編4',
              'ko': '희망의 낙원 에덴: 재생편(영웅) 4'
            },
            'offsetX': 0,
            'offsetY': 75,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          950: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '钻石神兵捕获作战',
              'de': 'Diamantblitz - Entfesselung',
              'en': 'The Cloud Deck',
              'fr': 'Le Tillac des Cirrus',
              'ja': 'ダイヤウェポン捕獲作戦',
              'ko': '다이아몬드 웨폰 포획작전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          951: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '钻石神兵狂想作战',
              'de': 'Diamantblitz - Trauma',
              'en': 'The Cloud Deck (Extreme)',
              'fr': 'Le Tillac des Cirrus (extrême)',
              'ja': '極ダイヤウェポン捕獲作戦',
              'ko': '극 다이아몬드 웨폰 포획작전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          952: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '异形楼阁佐特塔',
              'de': 'Der Turm von Zot',
              'en': 'The Tower of Zot',
              'fr': 'La tour de Zott',
              'ja': '異形楼閣 ゾットの塔',
              'ko': '조트 탑'
            },
            'offsetX': -50,
            'offsetY': -50,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          953: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '泰坦幻巧战',
              'de': 'Traumprüfung - Titan',
              'en': 'The Navel (Unreal)',
              'fr': 'Le Nombril (irréel)',
              'ja': '幻タイタン討滅戦',
              'ko': '환 타이탄 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          954: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '威尔布兰德扬帆起航',
              'de': 'Gute Winde für Vylbrand',
              'en': 'The Great Ship Vylbrand',
              'fr': 'Un navire nommé Vylbrand',
              'ja': 'バイルブランドの船出',
              'ko': '바일브랜드 출항'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          955: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '神佑女王',
              'de': 'Hinab in die Ruinen',
              'en': 'Fit for a Queen',
              'fr': 'Que les Dieux gardent la Reine',
              'ja': 'ゴッド・セイブ・ザ・クイーン',
              'ko': '갓 세이브 더 퀸'
            },
            'offsetX': 0,
            'offsetY': -750,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          956: {
            'exVersion': 4,
            'name': {
              'cn': '迷津',
              'de': 'Labyrinthos',
              'en': 'Labyrinthos',
              'fr': 'Le Labyrinthos',
              'ja': 'ラヴィリンソス',
              'ko': '라비린토스'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 131
          },
          957: {
            'exVersion': 4,
            'name': {
              'cn': '萨维奈岛',
              'de': 'Thavnair',
              'en': 'Thavnair',
              'fr': 'Thavnair',
              'ja': 'サベネア島',
              'ko': '사베네어 섬'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 132
          },
          958: {
            'exVersion': 4,
            'name': {
              'cn': '加雷马',
              'de': 'Garlemald',
              'en': 'Garlemald',
              'fr': 'Garlemald',
              'ja': 'ガレマルド',
              'ko': '갈레말드'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 133
          },
          959: {
            'exVersion': 4,
            'name': {
              'cn': '叹息海',
              'de': 'Mare Lamentorum',
              'en': 'Mare Lamentorum',
              'fr': 'Mare Lamentorum',
              'ja': '嘆きの海',
              'ko': '비탄의 바다'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 135
          },
          960: {
            'exVersion': 4,
            'name': {
              'cn': '天外天垓',
              'de': 'Ultima Thule',
              'en': 'Ultima Thule',
              'fr': 'Ultima Thulé',
              'ja': 'ウルティマ・トゥーレ',
              'ko': '울티마 툴레'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 136
          },
          961: {
            'exVersion': 4,
            'name': {
              'cn': '厄尔庇斯',
              'de': 'Elpis',
              'en': 'Elpis',
              'fr': 'Elpis',
              'ja': 'エルピス',
              'ko': '엘피스'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 134
          },
          962: {
            'exVersion': 4,
            'name': {
              'cn': '旧萨雷安',
              'de': 'Alt-Sharlayan',
              'en': 'Old Sharlayan',
              'fr': 'Vieille Sharlayan',
              'ja': 'オールド・シャーレアン',
              'ko': '올드 샬레이안'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 137
          },
          963: {
            'exVersion': 4,
            'name': {
              'cn': '拉札罕',
              'de': 'Radz-at-Han',
              'en': 'Radz-at-Han',
              'fr': 'Radz-at-Han',
              'ja': 'ラザハン',
              'ko': '라자한'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 138
          },
          966: {
            'contentType': 5,
            'exVersion': 3,
            'name': {
              'cn': '希望之炮台：“塔”',
              'de': 'Der Turm, Paradigmenbrecher',
              'en': 'The Tower at Paradigm\'s Breach',
              'fr': 'La tour de la Contingence',
              'ja': '希望ノ砲台：「塔」',
              'ko': '희망의 포대: \'탑\''
            },
            'offsetX': 808,
            'offsetY': -772,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          968: {
            'contentType': 28,
            'exVersion': 4,
            'name': {
              'cn': '幻想龙诗绝境战',
              'de': 'Drachenkrieg (fatal)',
              'en': 'Dragonsong\'s Reprise (Ultimate)',
              'fr': 'La Guerre du chant des dragons (fatal)',
              'ja': '絶竜詩戦争',
              'ko': '절 용시전쟁'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          969: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '魔导神门巴别塔',
              'de': 'Der Turm von Babil',
              'en': 'The Tower of Babil',
              'fr': 'La tour de Babil',
              'ja': '魔導神門 バブイルの塔',
              'ko': '바브일 탑'
            },
            'offsetX': 270,
            'offsetY': -300,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          970: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '末日树海万相森国',
              'de': 'Vanaspati',
              'en': 'Vanaspati',
              'fr': 'Vanaspati',
              'ja': '終末樹海 ヴァナスパティ',
              'ko': '바나스파티'
            },
            'offsetX': 280,
            'offsetY': 8,
            'sizeFactor': 200,
            'weatherRate': 141
          },
          972: {
            'contentType': 4,
            'exVersion': 3,
            'name': {
              'cn': '利维亚桑幻巧战',
              'de': 'Traumprüfung - Leviathan',
              'en': 'The <Emphasis>Whorleater</Emphasis> (Unreal)',
              'fr': 'Le Briseur de marées (irréel)',
              'ja': '幻リヴァイアサン討滅戦',
              'ko': '환 리바이어선 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 38
          },
          973: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '最终幻想末世终迹',
              'de': 'Das Sternengrab',
              'en': 'The Dead Ends',
              'fr': 'L\'Issue aux Impasses',
              'ja': '最終幻想 レムナント',
              'ko': '잔해별'
            },
            'offsetX': -310,
            'offsetY': 15,
            'sizeFactor': 200,
            'weatherRate': 144
          },
          974: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '创造环境极北造物院',
              'de': 'Ktisis Hyperboreia',
              'en': 'Ktisis Hyperboreia',
              'fr': 'L\'Hyperborée',
              'ja': '創造環境 ヒュペルボレア造物院',
              'ko': '휘페르보레아 조물원'
            },
            'offsetX': 40,
            'offsetY': -150,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          975: {
            'contentType': 29,
            'exVersion': 3,
            'name': {
              'cn': '扎杜诺尔高原',
              'de': 'Zadnor-Hochebene',
              'en': 'Zadnor',
              'fr': 'Hauts plateaux de Zadnor',
              'ja': 'ザトゥノル高原',
              'ko': '자트노르 고원'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 130
          },
          976: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '乐园都市笑笑镇',
              'de': 'Smileton',
              'en': 'Smileton',
              'fr': 'Risette-sur-lune',
              'ja': '楽園都市 スマイルトン',
              'ko': '스마일턴'
            },
            'offsetX': -22,
            'offsetY': -42,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          977: {
            'contentType': 7,
            'exVersion': 3,
            'name': {
              'cn': '死斗至黎明',
              'de': 'Kampf im Morgengrauen',
              'en': 'Death Unto Dawn',
              'fr': 'Aube meurtrière',
              'ja': '黎明の死闘',
              'ko': '여명의 사투'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 114
          },
          978: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '星海深幽寻因星晶镜',
              'de': 'Das Aitiaskop',
              'en': 'The Aitiascope',
              'fr': 'Le Prisme de l\'Aitia',
              'ja': '星海潜航 アイティオン星晶鏡',
              'ko': '아이티온 별현미경'
            },
            'offsetX': 8,
            'offsetY': -501,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          986: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '电脑梦境斯提格玛四',
              'de': 'Stigma-Holometrie',
              'en': 'The Stigma Dreamscape',
              'fr': 'Rêve électrique de Stigma-4',
              'ja': '電脳夢想 スティグマ・フォー',
              'ko': '스티그마-4'
            },
            'offsetX': 144,
            'offsetY': -14,
            'sizeFactor': 200,
            'weatherRate': 140
          },
          992: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '佐迪亚克歼灭战',
              'de': 'Prophetie - Zodiark',
              'en': 'The Dark Inside',
              'fr': 'Le Cratère des Martyrs',
              'ja': 'ゾディアーク討滅戦',
              'ko': '조디아크 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 139
          },
          993: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '佐迪亚克暝暗歼灭战',
              'de': 'Eschatos - Zodiark',
              'en': 'The Minstrel\'s Ballad: Zodiark\'s Fall',
              'fr': 'Le Cratère des Martyrs (extrême)',
              'ja': '極ゾディアーク討滅戦',
              'ko': '극 조디아크 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 139
          },
          994: {
            'contentType': 22,
            'exVersion': 0,
            'name': {
              'cn': '滑稽灵殿闹鬼盛宴',
              'de': 'Lustiges Bankett',
              'en': 'The Phantoms\' Feast',
              'fr': 'Le banquet cauchemardesque',
              'ja': '道化饗宴 ホーンテッドフィースト',
              'ko': '유령의 연회'
            },
            'offsetX': 20,
            'offsetY': 10,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          995: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '海德林歼灭战',
              'de': 'Prophetie - Hydaelyn',
              'en': 'The Mothercrystal',
              'fr': 'Le Cristal-mère',
              'ja': 'ハイデリン討滅戦',
              'ko': '하이델린 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 139
          },
          996: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '海德林晖光歼灭战',
              'de': 'Eschatos - Hydaelyn',
              'en': 'The Minstrel\'s Ballad: Hydaelyn\'s Call',
              'fr': 'Le Cristal-mère (extrême)',
              'ja': '極ハイデリン討滅戦',
              'ko': '극 하이델린 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 139
          },
          997: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '终结之战',
              'de': 'Prophetie - Endsängerin',
              'en': 'The Final Day',
              'fr': 'Le Répons final',
              'ja': '終焉の戦い',
              'ko': '종언의 결전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 116
          },
          998: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '终极之战',
              'de': 'Eschatos - Endsängerin',
              'en': 'The Minstrel\'s Ballad: Endsinger\'s Aria',
              'fr': 'Le Répons final (extrême)',
              'ja': '終極の戦い',
              'ko': '종극의 결전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 146
          },
          1000: {
            'contentType': 9,
            'exVersion': 4,
            'name': {
              'cn': '惊奇百宝城',
              'de': 'Euphoratron',
              'en': 'The Excitatron 6000',
              'fr': 'Le Ludodrome',
              'ja': '宝物庫 エキサイトロン',
              'ko': '보물고 익사이트론'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1002: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 边境之狱1',
              'de': 'Asphodelos - Erster Kreis',
              'en': 'Asphodelos: The First Circle',
              'fr': 'Les Limbes du Pandæmonium - Parvis',
              'ja': '万魔殿パンデモニウム：辺獄編1',
              'ko': '마의 전당 판데모니움: 변옥편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1003: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 边境之狱1',
              'de': 'Asphodelos - Erster Kreis (episch)',
              'en': 'Asphodelos: The First Circle (Savage)',
              'fr': 'Les Limbes du Pandæmonium - Parvis (sadique)',
              'ja': '万魔殿パンデモニウム零式：辺獄編1',
              'ko': '마의 전당 판데모니움: 변옥편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1004: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 边境之狱2',
              'de': 'Asphodelos - Zweiter Kreis',
              'en': 'Asphodelos: The Second Circle',
              'fr': 'Les Limbes du Pandæmonium - Cloaque',
              'ja': '万魔殿パンデモニウム：辺獄編2',
              'ko': '마의 전당 판데모니움: 변옥편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1005: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 边境之狱2',
              'de': 'Asphodelos - Zweiter Kreis (episch)',
              'en': 'Asphodelos: The Second Circle (Savage)',
              'fr': 'Les Limbes du Pandæmonium - Cloaque (sadique)',
              'ja': '万魔殿パンデモニウム零式：辺獄編2',
              'ko': '마의 전당 판데모니움: 변옥편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1006: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 边境之狱3',
              'de': 'Asphodelos - Dritter Kreis',
              'en': 'Asphodelos: The Third Circle',
              'fr': 'Les Limbes du Pandæmonium - Fournaise',
              'ja': '万魔殿パンデモニウム：辺獄編3',
              'ko': '마의 전당 판데모니움: 변옥편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1007: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 边境之狱3',
              'de': 'Asphodelos - Dritter Kreis (episch)',
              'en': 'Asphodelos: The Third Circle (Savage)',
              'fr': 'Les Limbes du Pandæmonium - Fournaise (sadique)',
              'ja': '万魔殿パンデモニウム零式：辺獄編3',
              'ko': '마의 전당 판데모니움: 변옥편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1008: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 边境之狱4',
              'de': 'Asphodelos - Vierter Kreis',
              'en': 'Asphodelos: The Fourth Circle',
              'fr': 'Les Limbes du Pandæmonium - Abîme',
              'ja': '万魔殿パンデモニウム：辺獄編4',
              'ko': '마의 전당 판데모니움: 변옥편 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1009: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 边境之狱4',
              'de': 'Asphodelos - Vierter Kreis (episch)',
              'en': 'Asphodelos: The Fourth Circle (Savage)',
              'fr': 'Les Limbes du Pandæmonium - Abîme (sadique)',
              'ja': '万魔殿パンデモニウム零式：辺獄編4',
              'ko': '마의 전당 판데모니움: 변옥편(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1010: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '踏破风雪',
              'de': 'Ein frostiger Empfang',
              'en': 'A Frosty Reception',
              'fr': 'Un accueil glacial',
              'ja': '霜雪を踏みしめて',
              'ko': '눈서리를 밟고'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1011: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '无尽寒夜',
              'de': 'In fremder Haut',
              'en': 'In from the Cold',
              'fr': 'Le voleur de corps',
              'ja': '寒夜のこと',
              'ko': '어느 추운 밤에'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 27
          },
          1012: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '扩散的末日',
              'de': 'Rote Himmel, roter Schnee',
              'en': 'As the Heavens Burn',
              'fr': 'L\'arène des neiges',
              'ja': '拡がる終末',
              'ko': '퍼져가는 종말'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 141
          },
          1013: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '晓月之终途',
              'de': 'Endschreiter',
              'en': 'Endwalker',
              'fr': 'Arpenteur des finitudes',
              'ja': '暁月のフィナーレ',
              'ko': '효월의 종언'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 100,
            'weatherRate': 143
          },
          1014: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '上一任阿谢姆的教导',
              'de': ' Es reimt sich auf Gebell',
              'en': 'Worthy of His Back',
              'fr': 'Le défi de l\'ancienne Azem',
              'ja': '前代アゼムの手ほどき',
              'ko': '선대 아젬과의 대련'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 134
          },
          1015: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '未来之路',
              'de': 'Offen für neue Wege',
              'en': 'A Path Unveiled',
              'fr': 'Des esprits et des hommes',
              'ja': '開かれた道の先へ',
              'ko': '열린 길 저편으로'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 3
          },
          1016: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '驶向融合的巨轮',
              'de': 'Im Hafen des Friedens',
              'en': 'To Calmer Seas',
              'fr': 'Cap sur la paix',
              'ja': '融和への船出',
              'ko': '화합을 향한 출항'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1017: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '英魂安息',
              'de': 'Domanisches Begräbnis',
              'en': 'Laid to Rest',
              'fr': 'Des adieux domiens',
              'ja': 'ドマの弔い',
              'ko': '도마의 추도'
            },
            'offsetX': 240,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1018: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '仰望苍穹，不断迈进',
              'de': 'Der Weg zur Erneuerung',
              'en': 'Ever March Heavensward',
              'fr': 'La voie du renouveau',
              'ja': '蒼天を仰ぎ、歩み続ける',
              'ko': '창천을 보며 나아가자'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 114
          },
          1019: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '目送生者前行',
              'de': 'Trauer und Hoffnung',
              'en': 'The Gift of Mercy',
              'fr': 'Acceptation',
              'ja': '僕たちは還り、君を見送ろう',
              'ko': '우리는 돌아가 그대를 보내리'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1020: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '大镰的意义',
              'de': 'Die Bedeutung der Sense',
              'en': 'The Harvest Begins',
              'fr': 'La vraie puissance de la faux',
              'ja': '大鎌の意味',
              'ko': '큰낫의 의미'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1021: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '暗杀道',
              'de': 'Die Kunst des Tötens',
              'en': 'The Killing Art',
              'fr': 'La voie du néant',
              'ja': '暗殺道',
              'ko': '암살의 길'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 42
          },
          1022: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '贤者的短杖',
              'de': 'Des Weisen wundersames Werkzeug',
              'en': 'Sage\'s Focus',
              'fr': 'Les armes du sage',
              'ja': '賢者の短杖',
              'ko': '현자의 짧은 지팡이'
            },
            'offsetX': 40,
            'offsetY': 6,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1023: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '生命瞬逝，术道恒久',
              'de': 'Das Leben ist kurz, die Kunst ist lang',
              'en': 'Life Ephemeral, Path Eternal',
              'fr': 'Existences éphémères et savoir éternel',
              'ja': '人命は儚く、術のみちは永久に',
              'ko': '생명은 덧없으나 기술은 영원하리'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 50
          },
          1035: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '究极神兵幻巧战',
              'de': 'Traumprüfung - Ultima',
              'en': 'Ultima\'s Bane (Unreal)',
              'fr': 'Le fléau d\'Ultima (irréel)',
              'ja': '幻アルテマウェポン破壊作戦'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 31
          },
          1036: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '天然要害沙斯塔夏溶洞',
              'de': 'Sastasha',
              'en': 'Sastasha',
              'fr': 'Sastasha',
              'ja': '天然要害 サスタシャ浸食洞',
              'ko': '사스타샤 침식 동굴'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1037: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '地下灵殿塔姆·塔拉墓园',
              'de': 'Totenacker Tam-Tara',
              'en': 'The Tam–Tara Deepcroft',
              'fr': 'L\'Hypogée de Tam-Tara',
              'ja': '地下霊殿 タムタラの墓所',
              'ko': '탐타라 묘소'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 300,
            'weatherRate': 0
          },
          1038: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '封锁坑道铜铃铜山',
              'de': 'Kupferglocken-Mine',
              'en': 'Copperbell Mines',
              'fr': 'Les Mines de Clochecuivre',
              'ja': '封鎖坑道 カッパーベル銅山',
              'ko': '구리종 광산'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1039: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '监狱废墟托托·拉克千狱',
              'de': 'Tausend Löcher von Toto-Rak',
              'en': 'The Thousand Maws of Toto–Rak',
              'fr': 'Les Mille Gueules de Toto-Rak',
              'ja': '監獄廃墟 トトラクの千獄',
              'ko': '토토라크 감옥'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1040: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '名门府邸静语庄园',
              'de': 'Haukke-Herrenhaus',
              'en': 'Haukke Manor',
              'fr': 'Le Manoir des Haukke',
              'ja': '名門屋敷 ハウケタ御用邸',
              'ko': '하우케타 별궁'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1041: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '休养胜地布雷福洛克斯野营地',
              'de': 'Brüllvolx\' Langrast',
              'en': 'Brayflox\'s Longstop',
              'fr': 'Le Bivouac de Brayflox',
              'ja': '奪還支援 ブレイフロクスの野営地',
              'ko': '브레이플록스의 야영지'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1042: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '对龙城塞石卫塔',
              'de': 'Steinerne Wacht',
              'en': 'The Stone Vigil',
              'fr': 'Le Vigile de Pierre',
              'ja': '城塞攻略 ストーンヴィジル',
              'ko': '돌방패 경계초소'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 27
          },
          1043: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '神兵要塞帝国南方堡',
              'de': 'Castrum Meridianum - Außenbereich',
              'en': 'Castrum Meridianum',
              'fr': 'Castrum Meridianum',
              'ja': '外郭攻略 カストルム・メリディアヌム',
              'ko': '카스트룸 메리디아눔'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1044: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '最终决战天幕魔导城',
              'de': 'Castrum Meridianum - Praetorium',
              'en': 'The Praetorium',
              'fr': 'Le Praetorium',
              'ja': '最終決戦 魔導城プラエトリウム',
              'ko': '마도성 프라이토리움'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1045: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '伊弗利特讨伐战',
              'de': 'Das Grab der Lohe',
              'en': 'The Bowl of Embers',
              'fr': 'Le Cratère des tisons',
              'ja': 'イフリート討伐戦',
              'ko': '이프리트 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 25
          },
          1046: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '泰坦讨伐战',
              'de': 'Der Nabel',
              'en': 'The Navel',
              'fr': 'Le Nombril',
              'ja': 'タイタン討伐戦',
              'ko': '타이탄 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 23
          },
          1047: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '迦楼罗讨伐战',
              'de': 'Das Tosende Auge',
              'en': 'The Howling Eye',
              'fr': 'Hurlœil',
              'ja': 'ガルーダ討伐戦',
              'ko': '가루다 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 26
          },
          1048: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '究极神兵破坏作战',
              'de': 'Porta Decumana',
              'en': 'The Porta Decumana',
              'fr': 'Porta Decumana',
              'ja': 'アルテマウェポン破壊作戦',
              'ko': '알테마 웨폰 파괴작전'
            },
            'offsetX': 772,
            'offsetY': 600,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1049: {
            'contentType': 7,
            'exVersion': 0,
            'name': {
              'cn': '里塔提恩强攻战',
              'de': 'Kap Westwind',
              'en': 'Cape Westwind',
              'fr': 'Le Cap Vendouest',
              'ja': 'リットアティン強襲戦',
              'ko': '리트아틴 강습전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1050: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '近东秘宝阿尔扎达尔海底遗迹群',
              'de': 'Alzadaals Vermächtnis',
              'en': 'Alzadaal\'s Legacy',
              'fr': 'Le legs d\'Alzadaal',
              'ja': '近東秘宝 アルザダール海底遺跡群',
              'ko': '알자달 해저 유적'
            },
            'offsetX': 15,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1051: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '涅尔瓦的帝国',
              'de': 'Nervas Reich',
              'en': 'Forlorn Glory',
              'fr': 'Nerva, le patriote',
              'ja': 'ネルウァの帝国',
              'ko': '네르바의 제국'
            },
            'offsetX': -230,
            'offsetY': -250,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          1052: {
            'contentType': 7,
            'exVersion': 0,
            'name': {
              'cn': '拉哈布雷亚讨伐战',
              'de': 'Das Antlitz der Kaltblütigkeit',
              'en': 'Devastation',
              'fr': 'Le Praetorium en flammes',
              'ja': 'アシエン・ラハブレア討伐戦',
              'ko': '아씨엔 라하브레아 토벌전'
            },
            'offsetX': 704,
            'offsetY': -480,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1054: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '灿烂神域阿格莱亚',
              'de': 'Aglaia',
              'en': 'Aglaia',
              'fr': 'Domaine divin - Aglaé',
              'ja': '輝ける神域 アグライア',
              'ko': '찬란한 신역 아글라이아'
            },
            'offsetX': -80,
            'offsetY': -550,
            'sizeFactor': 200,
            'weatherRate': 147
          },
          1058: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '水晶冲突（角力学校：自定赛）',
              'de': 'Crystalline Conflict: Die Palästra (Schaukampf)',
              'en': 'Crystalline Conflict (Custom Match - The Palaistra)',
              'fr': 'Crystalline Conflict (partie personnalisée - Le Palestre)',
              'ja': 'クリスタルコンフリクト(パライストラ：カスタムマッチ)',
              'ko': '크리스탈라인 컨플릭트(팔라이스트라: 친선 경기)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1059: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '水晶冲突（火山之心：自定赛）',
              'de': 'Crystalline Conflict: Das Herz des Vulkans (Schaukampf)',
              'en': 'Crystalline Conflict (Custom Match - The Volcanic Heart)',
              'fr': 'Crystalline Conflict (partie personnalisée - Le Cœur volcanique)',
              'ja': 'クリスタルコンフリクト(ヴォルカニック・ハート：カスタムマッチ)',
              'ko': '크리스탈라인 컨플릭트(화산심장: 친선 경기)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1060: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '水晶冲突（九霄云上：自定赛）',
              'de': 'Crystalline Conflict: Wolke Sieben (Schaukampf)',
              'en': 'Crystalline Conflict (Custom Match - Cloud Nine)',
              'fr': 'Crystalline Conflict (partie personnalisée - Le Petit Nuage)',
              'ja': 'クリスタルコンフリクト(クラウドナイン：カスタムマッチ)',
              'ko': '크리스탈라인 컨플릭트(절정의 구름: 친선 경기)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1062: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '凛冽洞天披雪大冰壁',
              'de': 'Das Schneekleid',
              'en': 'Snowcloak',
              'fr': 'Manteneige',
              'ja': '氷結潜窟 スノークローク大氷壁',
              'ko': '얼음외투 대빙벽'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 42
          },
          1063: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '幻龙残骸密约之塔',
              'de': 'Hüter des Sees',
              'en': 'The Keeper of the Lake',
              'fr': 'Le Gardien du lac',
              'ja': '幻龍残骸 黙約の塔',
              'ko': '묵약의 탑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 74
          },
          1064: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '天山绝顶索姆阿尔灵峰',
              'de': 'Sohm Al',
              'en': 'Sohm Al',
              'fr': 'Sohm Al',
              'ja': '霊峰踏破 ソーム・アル',
              'ko': '솜 알'
            },
            'offsetX': 185,
            'offsetY': 51,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1065: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '邪龙王座龙巢神殿',
              'de': 'Nest des Drachen',
              'en': 'The Aery',
              'fr': 'L\'Aire',
              'ja': '邪竜血戦 ドラゴンズエアリー',
              'ko': '용의 둥지'
            },
            'offsetX': -40,
            'offsetY': 55,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          1066: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '圣教中枢伊修加德教皇厅',
              'de': 'Erzbasilika',
              'en': 'The Vault',
              'fr': 'La Voûte',
              'ja': '強硬突入 イシュガルド教皇庁',
              'ko': '이슈가르드 교황청'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1067: {
            'contentType': 4,
            'exVersion': 0,
            'name': {
              'cn': '莫古力贤王歼灭战',
              'de': 'Königliche Konfrontation (schwer)',
              'en': 'Thornmarch (Hard)',
              'fr': 'La Lisière de ronces (brutal)',
              'ja': '善王モグル・モグXII世討滅戦',
              'ko': '선왕 모그루 모그 XII세 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 30
          },
          1068: {
            'contentType': 7,
            'exVersion': 0,
            'name': {
              'cn': '皇都伊修加德保卫战',
              'de': 'Der Schicksalsweg',
              'en': 'The Steps of Faith',
              'fr': 'Le Siège de la sainte Cité d\'Ishgard',
              'ja': '皇都イシュガルド防衛戦',
              'ko': '성도 이슈가르드 방어전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          1069: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '多变迷宫 希拉狄哈水道',
              'de': 'Die Unterstadt von Sil\'dih',
              'en': 'The Sil\'dihn Subterrane',
              'fr': 'Les canalisations sildiennes - Donjon à embranchements',
              'ja': 'ヴァリアントダンジョン シラディハ水道',
              'ko': '변형 던전: 실디하 지하수도'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1070: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '异界孤城特罗亚宫廷',
              'de': 'Der Schwarze Hof von Troia',
              'en': 'The Fell Court of Troia',
              'fr': 'Le Château de Troïa',
              'ja': '異界孤城 トロイアコート',
              'ko': '트로이아 궁정'
            },
            'offsetX': -76,
            'offsetY': -180,
            'sizeFactor': 200,
            'weatherRate': 149
          },
          1071: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '巴尔巴莉希娅歼灭战',
              'de': 'Prophetie - Barbarizia',
              'en': 'Storm\'s Crown',
              'fr': 'La Toison des tempêtes',
              'ja': 'バルバリシア討滅戦',
              'ko': '바르바리차 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 149
          },
          1072: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '巴尔巴莉希娅歼殛战',
              'de': 'Eschatos - Barbarizia',
              'en': 'Storm\'s Crown (Extreme)',
              'fr': 'La Toison des tempêtes (extrême)',
              'ja': '極バルバリシア討滅戦',
              'ko': '극 바르바리차 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 149
          },
          1075: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '异闻迷宫 异闻希拉狄哈水道',
              'de': 'Die kuriose Unterstadt von Sil\'dih',
              'en': 'Another Sil\'dihn Subterrane',
              'fr': 'Les canalisations sildiennes annexes - Donjon alternatif',
              'ja': 'アナザーダンジョン 異聞シラディハ水道',
              'ko': '파생 던전: 번외 실디하 지하수도'
            },
            'offsetX': 335,
            'offsetY': 100,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1076: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '异闻迷宫 零式异闻希拉狄哈水道',
              'de': 'Die kuriose Unterstadt von Sil\'dih (episch)',
              'en': 'Another Sil\'dihn Subterrane (Savage)',
              'fr': 'Les canalisations sildiennes annexes - Donjon alternatif (sadique)',
              'ja': 'アナザーダンジョン 異聞シラディハ水道 零式',
              'ko': '파생 던전: 번외 실디하 지하수도(영웅)'
            },
            'offsetX': 335,
            'offsetY': 100,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1081: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 炼净之狱1',
              'de': 'Abyssos - Fünfter Kreis',
              'en': 'Abyssos: The Fifth Circle',
              'fr': 'Le Purgatoire du Pandæmonium - Cages',
              'ja': '万魔殿パンデモニウム：煉獄編1',
              'ko': '마의 전당 판데모니움: 연옥편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1082: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 炼净之狱1',
              'de': 'Abyssos - Fünfter Kreis (episch)',
              'en': 'Abyssos: The Fifth Circle (Savage)',
              'fr': 'Le Purgatoire du Pandæmonium - Cages (sadique)',
              'ja': '万魔殿パンデモニウム零式：煉獄編1',
              'ko': '마의 전당 판데모니움: 연옥편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1083: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 炼净之狱2',
              'de': 'Abyssos - Sechster Kreis',
              'en': 'Abyssos: The Sixth Circle',
              'fr': 'Le Purgatoire du Pandæmonium - Croisements',
              'ja': '万魔殿パンデモニウム：煉獄編2',
              'ko': '마의 전당 판데모니움: 연옥편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1084: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 炼净之狱2',
              'de': 'Abyssos - Sechster Kreis (episch)',
              'en': 'Abyssos: The Sixth Circle (Savage)',
              'fr': 'Le Purgatoire du Pandæmonium - Croisements (sadique)',
              'ja': '万魔殿パンデモニウム零式：煉獄編2',
              'ko': '마의 전당 판데모니움: 연옥편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1085: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 炼净之狱3',
              'de': 'Abyssos - Siebter Kreis',
              'en': 'Abyssos: The Seventh Circle',
              'fr': 'Le Purgatoire du Pandæmonium - Racines',
              'ja': '万魔殿パンデモニウム：煉獄編3',
              'ko': '마의 전당 판데모니움: 연옥편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1086: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 炼净之狱3',
              'de': 'Abyssos - Siebter Kreis (episch)',
              'en': 'Abyssos: The Seventh Circle (Savage)',
              'fr': 'Le Purgatoire du Pandæmonium - Racines (sadique)',
              'ja': '万魔殿パンデモニウム零式：煉獄編3',
              'ko': '마의 전당 판데모니움: 연옥편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1087: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 炼净之狱4',
              'de': 'Abyssos - Achter Kreis',
              'en': 'Abyssos: The Eighth Circle',
              'fr': 'Le Purgatoire du Pandæmonium - Hérédité',
              'ja': '万魔殿パンデモニウム：煉獄編4',
              'ko': '마의 전당 판데모니움: 연옥편 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1088: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 炼净之狱4',
              'de': 'Abyssos - Achter Kreis (episch)',
              'en': 'Abyssos: The Eighth Circle (Savage)',
              'fr': 'Le Purgatoire du Pandæmonium - Hérédité (sadique)',
              'ja': '万魔殿パンデモニウム零式：煉獄編4',
              'ko': '마의 전당 판데모니움: 연옥편(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1090: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '萨菲洛特幻巧战',
              'de': 'Traumprüfung - Sephirot',
              'en': 'Containment Bay S1T7 (Unreal)',
              'fr': 'Unité de contention S1P7 (irréel)',
              'ja': '幻魔神セフィロト討滅戦'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 66
          },
          1091: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '失传的力量',
              'de': 'Wo alles seinen Anfang nimmt',
              'en': 'Where Everything Begins',
              'fr': 'Au commencement était Zero',
              'ja': '失われた力',
              'ko': '잃어버린 힘'
            },
            'offsetX': 143,
            'offsetY': -64,
            'sizeFactor': 200,
            'weatherRate': 149
          },
          1095: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '卢比坎特歼灭战',
              'de': 'Prophetie - Rubicante',
              'en': 'Mount Ordeals',
              'fr': 'Le Mont du Supplice',
              'ja': 'ルビカンテ討滅戦',
              'ko': '루비칸테 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1096: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '卢比坎特歼殛战',
              'de': 'Eschatos - Rubicante',
              'en': 'Mount Ordeals (Extreme)',
              'fr': 'Le Mont du Supplice (extrême)',
              'ja': '極ルビカンテ討滅戦',
              'ko': '극 루비칸테 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1097: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '雪山奥窟冥魂石洞',
              'de': 'Lapis Manalis',
              'en': 'Lapis Manalis',
              'fr': 'Lapis Manalis',
              'ja': '雪山冥洞 ラピス・マナリス',
              'ko': '라피스 마날리스'
            },
            'offsetX': -46,
            'offsetY': 570,
            'sizeFactor': 200,
            'weatherRate': 42
          },
          1099: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下1～10层',
              'de': 'Eureka Orthos (Ebenen 1-10)',
              'en': 'Eureka Orthos (Floors 1-10)',
              'fr': 'Eurêka Orthos (sous-sols 1-10)',
              'ja': 'オルト・エウレカ B1～B10',
              'ko': '에우레카 오르토스 B1~B10'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1100: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下11～20层',
              'de': 'Eureka Orthos (Ebenen 11-20)',
              'en': 'Eureka Orthos (Floors 11-20)',
              'fr': 'Eurêka Orthos (sous-sols 11-20)',
              'ja': 'オルト・エウレカ B11～B20',
              'ko': '에우레카 오르토스 B11~B20'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1101: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下21～30层',
              'de': 'Eureka Orthos (Ebenen 21-30)',
              'en': 'Eureka Orthos (Floors 21-30)',
              'fr': 'Eurêka Orthos (sous-sols 21-30)',
              'ja': 'オルト・エウレカ B21～B30',
              'ko': '에우레카 오르토스 B21~B30'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1102: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下31～40层',
              'de': 'Eureka Orthos (Ebenen 31-40)',
              'en': 'Eureka Orthos (Floors 31-40)',
              'fr': 'Eurêka Orthos (sous-sols 31-40)',
              'ja': 'オルト・エウレカ B31～B40',
              'ko': '에우레카 오르토스 B31~B40'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1103: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下41～50层',
              'de': 'Eureka Orthos (Ebenen 41-50)',
              'en': 'Eureka Orthos (Floors 41-50)',
              'fr': 'Eurêka Orthos (sous-sols 41-50)',
              'ja': 'オルト・エウレカ B41～B50',
              'ko': '에우레카 오르토스 B41~B50'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1104: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下51～60层',
              'de': 'Eureka Orthos (Ebenen 51-60)',
              'en': 'Eureka Orthos (Floors 51-60)',
              'fr': 'Eurêka Orthos (sous-sols 51-60)',
              'ja': 'オルト・エウレカ B51～B60',
              'ko': '에우레카 오르토스 B51~B60'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1105: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下61～70层',
              'de': 'Eureka Orthos (Ebenen 61-70)',
              'en': 'Eureka Orthos (Floors 61-70)',
              'fr': 'Eurêka Orthos (sous-sols 61-70)',
              'ja': 'オルト・エウレカ B61～B70',
              'ko': '에우레카 오르토스 B61~B70'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1106: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下71～80层',
              'de': 'Eureka Orthos (Ebenen 71-80)',
              'en': 'Eureka Orthos (Floors 71-80)',
              'fr': 'Eurêka Orthos (sous-sols 71-80)',
              'ja': 'オルト・エウレカ B71～B80',
              'ko': '에우레카 오르토스 B71~B80'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1107: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下81～90层',
              'de': 'Eureka Orthos (Ebenen 81-90)',
              'en': 'Eureka Orthos (Floors 81-90)',
              'fr': 'Eurêka Orthos (sous-sols 81-90)',
              'ja': 'オルト・エウレカ B81～B90',
              'ko': '에우레카 오르토스 B81~B90'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1108: {
            'contentType': 21,
            'exVersion': 4,
            'name': {
              'cn': '正统优雷卡 地下91～100层',
              'de': 'Eureka Orthos (Ebenen 91-100)',
              'en': 'Eureka Orthos (Floors 91-100)',
              'fr': 'Eurêka Orthos (sous-sols 91-100)',
              'ja': 'オルト・エウレカ B91～B100',
              'ko': '에우레카 오르토스 B91~B100'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1109: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '学识宝库迦巴勒幻想图书馆',
              'de': 'Große Gubal-Bibliothek',
              'en': 'The Great Gubal Library',
              'fr': 'La Grande bibliothèque de Gubal',
              'ja': '禁書回収 グブラ幻想図書館',
              'ko': '구브라 환상도서관'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1110: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '血战苍穹魔科学研究所',
              'de': 'Ätherochemisches For­schungs­labor',
              'en': 'The Aetherochemical Research Facility',
              'fr': 'Le Laboratoire de magismologie',
              'ja': '蒼天聖戦 魔科学研究所',
              'ko': '마과학 연구소'
            },
            'offsetX': -18,
            'offsetY': 149,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1111: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '星海空间颠倒塔',
              'de': 'Antiturm',
              'en': 'The Antitower',
              'fr': 'L\'Antitour',
              'ja': '星海観測 逆さの塔',
              'ko': '거꾸로 선 탑'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1112: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '天龙宫殿忆罪宫',
              'de': 'Sohr Khai',
              'en': 'Sohr Khai',
              'fr': 'Sohr Khai',
              'ja': '天竜宮殿 ソール・カイ',
              'ko': '소르 카이'
            },
            'offsetX': 370,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1113: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '险峻峡谷塞尔法特尔溪谷',
              'de': 'Xelphatol',
              'en': 'Xelphatol',
              'fr': 'Xelphatol',
              'ja': '峻厳渓谷 ゼルファトル',
              'ko': '젤파톨'
            },
            'offsetX': -148,
            'offsetY': 35,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          1114: {
            'contentType': 2,
            'exVersion': 1,
            'name': {
              'cn': '坚牢铁壁巴埃萨长城',
              'de': 'Baelsar-Wall',
              'en': 'Baelsar\'s Wall',
              'fr': 'La Muraille de Baelsar',
              'ja': '巨大防壁 バエサルの長城',
              'ko': '바일사르 장성'
            },
            'offsetX': 182,
            'offsetY': 32,
            'sizeFactor': 200,
            'weatherRate': 40
          },
          1115: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '充满活力的父子',
              'de': 'Väterliche Liebe',
              'en': 'Generational Bonding',
              'fr': 'Tel gentilhomme, tel gentilhomme',
              'ja': 'はつらつとした親子',
              'ko': '은밀한 음모'
            },
            'offsetX': -230,
            'offsetY': -250,
            'sizeFactor': 200,
            'weatherRate': 28
          },
          1116: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '机关大殿',
              'de': 'Die Mechanische Menagerie',
              'en': 'The Clockwork Castletown',
              'fr': 'Le Traquenard oriental',
              'ja': '東方絡繰御殿',
              'ko': '동방 꼭두각시 어전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1117: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '水晶冲突（机关大殿：自定赛）',
              'de': 'Crystalline Conflict: Die Mechanische Menagerie (Schaukampf)',
              'en': 'Crystalline Conflict (Custom Match - The Clockwork Castletown)',
              'fr': 'Crys. Conflict (partie perso. - Le Traquenard oriental)',
              'ja': 'クリスタルコンフリクト(東方絡繰御殿：カスタムマッチ)',
              'ko': '크리스탈라인 컨플릭트(동방 꼭두각시 어전: 친선 경기)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1118: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '喜悦神域欧芙洛绪涅',
              'de': 'Euphrosyne',
              'en': 'Euphrosyne',
              'fr': 'Domaine divin - Euphrosyne',
              'ja': '喜びの神域 エウプロシュネ',
              'ko': '환희의 신역 에우프로시네'
            },
            'offsetX': 0,
            'offsetY': 480,
            'sizeFactor': 200,
            'weatherRate': 147
          },
          1120: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '一块面包的交易',
              'de': 'Der Wert einer Buuds',
              'en': 'An Unforeseen Bargain',
              'fr': 'Pour une bouchée de pain',
              'ja': 'パンひとつと引き換えに',
              'ko': '빵 하나와 바꾸어'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 58
          },
          1121: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '索菲娅幻巧战',
              'de': 'Traumprüfung - Sophia',
              'en': 'Containment Bay P1T6 (Unreal)',
              'fr': 'Unité de contention P1P6 (irréel)',
              'ja': '幻女神ソフィア討滅戦'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 69
          },
          1122: {
            'contentType': 28,
            'exVersion': 4,
            'name': {
              'cn': '欧米茄绝境验证战',
              'de': 'Omega (fatal)',
              'en': 'The Omega Protocol (Ultimate)',
              'fr': 'Le Protocole Oméga (fatal)',
              'ja': '絶オメガ検証戦',
              'ko': '절 오메가 검증전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 150
          },
          1123: {
            'contentType': 9,
            'exVersion': 4,
            'name': {
              'cn': '厄尔庇斯育体宝殿',
              'de': 'Gymnasion Agonon',
              'en': 'The Shifting Gymnasion Agonon',
              'fr': 'Elpis Gymnasion',
              'ja': '宝物庫 エルピス・ギュムナシオン祭殿',
              'ko': '보물고 엘피스 김나시온 제전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1126: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '间歇灵泉哈姆岛',
              'de': 'Ätherborn',
              'en': 'The Aetherfont',
              'fr': 'L\'île de Haam',
              'ja': '星霊間欠 ハーム島',
              'ko': '함 섬'
            },
            'offsetX': 368,
            'offsetY': -277,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1127: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '处理显示标记的攻击',
              'de': 'Achte auf Attackenmarkierungen!',
              'en': 'React to Attack Markers',
              'fr': 'Réagir à des marquages',
              'ja': 'マーカーが出る攻撃に対処しよう！'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1128: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '处理在地面显示预兆的攻击',
              'de': 'Achte auf Geländemarkierungen!',
              'en': 'React to Floor Markers',
              'fr': 'Réagir à des indications au sol',
              'ja': '地面に予兆が出る攻撃に対処しよう！'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1129: {
            'contentType': 20,
            'exVersion': 0,
            'name': {
              'cn': '处理各种攻击',
              'de': 'Stelle dich allerlei Angriffsmanövern!',
              'en': 'React to Advanced Visual Indicators',
              'fr': 'Réagir à des mécaniques variées',
              'ja': 'さまざまな攻撃に対処しよう！'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1136: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '阿修罗歼灭战',
              'de': 'Prophetie - Asura',
              'en': 'The Gilded Araya',
              'fr': 'Le temple doré d\'Araya',
              'ja': 'アスラ討滅戦',
              'ko': '아수라 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 114
          },
          1137: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '多变迷宫 六根山',
              'de': 'Der Rokkon',
              'en': 'Mount Rokkon',
              'fr': 'Le mont Rokkon - Donjon à embranchements',
              'ja': 'ヴァリアントダンジョン 六根山',
              'ko': '변형 던전: 육근산'
            },
            'offsetX': -145,
            'offsetY': -820,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1138: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '赤土红沙',
              'de': 'Die Roten Sande',
              'en': 'The Red Sands',
              'fr': 'Les Sables sanglants',
              'ja': 'レッド・サンズ',
              'ko': '붉은 사막'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1139: {
            'contentType': 6,
            'exVersion': 0,
            'name': {
              'cn': '水晶冲突（赤土红沙：自定赛）',
              'de': 'Crystalline Conflict: Die Roten Sande (Schaukampf)',
              'en': 'Crystalline Conflict (Custom Match - The Red Sands)',
              'fr': 'Crystalline Conflict (partie personnalisée - Les Sables sanglants)',
              'ja': 'クリスタルコンフリクト(レッド・サンズ：カスタムマッチ)',
              'ko': '크리스탈라인 컨플릭트(붉은 사막: 친선 경기)'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1140: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '高贝扎歼灭战',
              'de': 'Prophetie - Golbez',
              'en': 'The Voidcast Dais',
              'fr': 'La Chaire de l\'Exilée',
              'ja': 'ゴルベーザ討滅戦',
              'ko': '골베자 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 149
          },
          1141: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '高贝扎歼殛战',
              'de': 'Eschatos - Golbez',
              'en': 'The Voidcast Dais (Extreme)',
              'fr': 'La Chaire de l\'Exilée (extrême)',
              'ja': '極ゴルベーザ討滅戦',
              'ko': '극 골베자 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 149
          },
          1142: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '漂流海域妖歌海',
              'de': 'Sirenen-See',
              'en': 'The Sirensong Sea',
              'fr': 'La Mer du Chant des sirènes',
              'ja': '漂流海域 セイレーン海',
              'ko': '세이렌 해'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 36
          },
          1143: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '试炼行路巴儿达木霸道',
              'de': 'Bardams Probe',
              'en': 'Bardam\'s Mettle',
              'fr': 'La Force de Bardam',
              'ja': '伝統試練 バルダム覇道',
              'ko': '바르담 패도'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1144: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '解放决战多玛王城',
              'de': 'Burg Doma',
              'en': 'Doma Castle',
              'fr': 'Le Château de Doma',
              'ja': '解放決戦 ドマ城',
              'ko': '도마 성'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1145: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '巨炮要塞帝国白山堡',
              'de': 'Castrum Abania',
              'en': 'Castrum Abania',
              'fr': 'Castrum Abania',
              'ja': '巨砲要塞 カストルム・アバニア',
              'ko': '카스트룸 아바니아'
            },
            'offsetX': 72,
            'offsetY': -186,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1146: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '鏖战红莲阿拉米格',
              'de': 'Ala Mhigo',
              'en': 'Ala Mhigo',
              'fr': 'Ala Mhigo',
              'ja': '紅蓮決戦 アラミゴ',
              'ko': '알라미고'
            },
            'offsetX': 292,
            'offsetY': -163,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1147: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 荒天之狱1',
              'de': 'Anabaseios - Neunter Kreis',
              'en': 'Anabaseios: The Ninth Circle',
              'fr': 'Le Paradis du Pandæmonium - Métempsycose',
              'ja': '万魔殿パンデモニウム：天獄編1',
              'ko': '마의 전당 판데모니움: 천옥편 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1148: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 荒天之狱1',
              'de': 'Anabaseios - Neunter Kreis (episch)',
              'en': 'Anabaseios: The Ninth Circle (Savage)',
              'fr': 'Le Paradis du Pandæmonium - Métempsycose (sadique)',
              'ja': '万魔殿パンデモニウム零式：天獄編1',
              'ko': '마의 전당 판데모니움: 천옥편(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1149: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 荒天之狱2',
              'de': 'Anabaseios - Zehnter Kreis',
              'en': 'Anabaseios: The Tenth Circle',
              'fr': 'Le Paradis du Pandæmonium - Monochrome',
              'ja': '万魔殿パンデモニウム：天獄編2',
              'ko': '마의 전당 판데모니움: 천옥편 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1150: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 荒天之狱2',
              'de': 'Anabaseios - Zehnter Kreis (episch)',
              'en': 'Anabaseios: The Tenth Circle (Savage)',
              'fr': 'Le Paradis du Pandæmonium - Monochrome (sadique)',
              'ja': '万魔殿パンデモニウム零式：天獄編2',
              'ko': '마의 전당 판데모니움: 천옥편(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1151: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 荒天之狱3',
              'de': 'Anabaseios - Elfter Kreis',
              'en': 'Anabaseios: The Eleventh Circle',
              'fr': 'Le Paradis du Pandæmonium - Tribunal',
              'ja': '万魔殿パンデモニウム：天獄編3',
              'ko': '마의 전당 판데모니움: 천옥편 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1152: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 荒天之狱3',
              'de': 'Anabaseios - Elfter Kreis (episch)',
              'en': 'Anabaseios: The Eleventh Circle (Savage)',
              'fr': 'Le Paradis du Pandæmonium - Tribunal (sadique)',
              'ja': '万魔殿パンデモニウム零式：天獄編3',
              'ko': '마의 전당 판데모니움: 천옥편(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1153: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '万魔殿 荒天之狱4',
              'de': 'Anabaseios - Zwölfter Kreis',
              'en': 'Anabaseios: The Twelfth Circle',
              'fr': 'Le Paradis du Pandæmonium - Apothéose',
              'ja': '万魔殿パンデモニウム：天獄編4',
              'ko': '마의 전당 판데모니움: 천옥편 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1154: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '零式万魔殿 荒天之狱4',
              'de': 'Anabaseios - Zwölfter Kreis (episch)',
              'en': 'Anabaseios: The Twelfth Circle (Savage)',
              'fr': 'Le Paradis du Pandæmonium - Apothéose (sadique)',
              'ja': '万魔殿パンデモニウム零式：天獄編4',
              'ko': '마의 전당 판데모니움: 천옥편(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 145
          },
          1155: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '异闻迷宫 异闻六根山',
              'de': 'Der kuriose Rokkon',
              'en': 'Another Mount Rokkon',
              'fr': 'Le mont Rokkon annexe - Donjon alternatif',
              'ja': 'アナザーダンジョン 異聞六根山',
              'ko': '파생 던전: 번외 육근산'
            },
            'offsetX': 0,
            'offsetY': 40,
            'sizeFactor': 200,
            'weatherRate': 74
          },
          1156: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '异闻迷宫 零式异闻六根山',
              'de': 'Der kuriose Rokkon (episch)',
              'en': 'Another Mount Rokkon (Savage)',
              'fr': 'Le mont Rokkon annexe - Donjon alternatif (sadique)',
              'ja': 'アナザーダンジョン 異聞六根山 零式',
              'ko': '파생 던전: 번외 육근산(영웅)'
            },
            'offsetX': 0,
            'offsetY': 40,
            'sizeFactor': 200,
            'weatherRate': 74
          },
          1157: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '祖尔宛幻巧战',
              'de': 'Traumprüfung - Zurvan',
              'en': 'Containment Bay Z1T9 (Unreal)',
              'fr': 'Unité de contention Z1P9 (irréel)',
              'ja': '幻鬼神ズルワーン討滅戦'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 75
          },
          1164: {
            'contentType': 2,
            'exVersion': 4,
            'name': {
              'cn': '异界深渊月面地下溪谷',
              'de': 'Monduntergrund',
              'en': 'The Lunar Subterrane',
              'fr': 'Le Souterrain lunaire',
              'ja': '深淵潜行 月の地下渓谷',
              'ko': '달의 지하계곡'
            },
            'offsetX': 440,
            'offsetY': 130,
            'sizeFactor': 200,
            'weatherRate': 149
          },
          1165: {
            'contentType': 19,
            'exVersion': 0,
            'name': {
              'cn': '金碟巨豆中心',
              'de': 'Stolperville',
              'en': 'Blunderville',
              'fr': 'Blunderville',
              'ja': 'ブランダーヴィル',
              'ko': '블런더빌'
            },
            'offsetX': -200,
            'offsetY': -133,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1166: {
            'contentType': 7,
            'exVersion': 0,
            'name': {
              'cn': '纵使前路狱火焰毒',
              'de': 'Der Pfad der Flammen',
              'en': 'Memory of Embers',
              'fr': 'Flammes primordiales',
              'ja': '炎影の旅路',
              'ko': '염영의 여로'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 155
          },
          1167: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '丛林竞流生息河岸',
              'de': 'Ihuykatumu',
              'en': 'Ihuykatumu',
              'fr': 'La Remontée de l\'Ihuykatumu',
              'ja': '濁流遡上 イフイカ・トゥム',
              'ko': '이후이카 투무'
            },
            'offsetX': -44,
            'offsetY': -88,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1168: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '泽罗姆斯歼灭战',
              'de': 'Prophetie - Zeromus',
              'en': 'The Abyssal Fracture',
              'fr': 'La Fracture abyssale',
              'ja': 'ゼロムス討滅戦',
              'ko': '제로무스 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 149
          },
          1169: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '泽罗姆斯歼殛战',
              'de': 'Eschatos - Zeromus',
              'en': 'The Abyssal Fracture (Extreme)',
              'fr': 'La Fracture abyssale (extrême)',
              'ja': '極ゼロムス討滅戦',
              'ko': '극 제로무스 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 149
          },
          1172: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '沉没神殿斯卡拉遗迹',
              'de': 'Die versunkene Stadt Skalla',
              'en': 'The Drowned City of Skalla',
              'fr': 'La Cité engloutie de Skalla',
              'ja': '水没遺構 スカラ',
              'ko': '스칼라 유적'
            },
            'offsetX': 185,
            'offsetY': 5,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1173: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '死亡大地终末焦土',
              'de': 'Das Kargland',
              'en': 'The Burn',
              'fr': 'L\'Escarre',
              'ja': '永久焦土 ザ・バーン',
              'ko': '영구 초토지대'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 97
          },
          1174: {
            'contentType': 2,
            'exVersion': 2,
            'name': {
              'cn': '国境防线基姆利特暗区',
              'de': 'Die Ghimlyt-Finsternis',
              'en': 'The Ghimlyt Dark',
              'fr': 'Les Ténèbres de Ghimlyt',
              'ja': '境界戦線 ギムリトダーク',
              'ko': '김리트 황야'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1175: {
            'contentType': 4,
            'exVersion': 4,
            'name': {
              'cn': '圆桌骑士幻巧战',
              'de': 'Traumprüfung - Singularitäts-Reaktor',
              'en': 'The Singularity Reactor (Unreal)',
              'fr': 'Le Réacteur de singularité (irréel)',
              'ja': '幻ナイツ・オブ・ラウンド討滅戦',
              'ko': '환 나이츠 오브 라운드 토벌전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 56
          },
          1176: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '多变迷宫 阿罗阿罗岛',
              'de': 'Aloalo',
              'en': 'Aloalo Island',
              'fr': 'L\'île d\'Aloalo - Donjon à embranchements',
              'ja': 'ヴァリアントダンジョン アロアロ島',
              'ko': '변형 던전: 알로알로 섬'
            },
            'offsetX': 0,
            'offsetY': -785,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1177: {
            'contentType': 7,
            'exVersion': 4,
            'name': {
              'cn': '那双眼中映出的是',
              'de': 'Die Jagd ist eröffnet',
              'en': 'The Game Is Afoot',
              'fr': 'Par-delà l\'horizon',
              'ja': 'その瞳が見据えるもの',
              'ko': '그 눈동자가 바라보는 것'
            },
            'offsetX': 368,
            'offsetY': -277,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1178: {
            'contentType': 5,
            'exVersion': 4,
            'name': {
              'cn': '荣华神域塔利亚',
              'de': 'Thaleia',
              'en': 'Thaleia',
              'fr': 'Domaine divin - Thalie',
              'ja': '華めく神域 タレイア',
              'ko': '번영의 신역 탈레이아'
            },
            'offsetX': 800,
            'offsetY': 783,
            'sizeFactor': 200,
            'weatherRate': 147
          },
          1179: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '异闻迷宫 异闻阿罗阿罗岛',
              'de': 'Kurioses Aloalo',
              'en': 'Another Aloalo Island',
              'fr': 'L\'île d\'Aloalo annexe - Donjon alternatif',
              'ja': 'アナザーダンジョン 異聞アロアロ島',
              'ko': '파생 던전: 번외 알로알로 섬'
            },
            'offsetX': 0,
            'offsetY': -60,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1180: {
            'contentType': 30,
            'exVersion': 4,
            'name': {
              'cn': '异闻迷宫 零式异闻阿罗阿罗岛',
              'de': 'Kurioses Aloalo (episch)',
              'en': 'Another Aloalo Island (Savage)',
              'fr': 'L\'île d\'Aloalo annexe - Donjon alternatif (sadique)',
              'ja': 'アナザーダンジョン 異聞アロアロ島 零式',
              'ko': '파생 던전: 번외 알로알로 섬(영웅)'
            },
            'offsetX': 0,
            'offsetY': -60,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1185: {
            'exVersion': 5,
            'name': {
              'cn': '图莱尤拉',
              'de': 'Tuliyollal',
              'en': 'Tuliyollal',
              'fr': 'Tuliyollal',
              'ja': 'トライヨラ',
              'ko': '툴라이욜라'
            },
            'offsetX': 50,
            'offsetY': -70,
            'sizeFactor': 180,
            'weatherRate': 159
          },
          1186: {
            'exVersion': 5,
            'name': {
              'cn': '九号解决方案',
              'de': 'Lösung Neun',
              'en': 'Solution Nine',
              'fr': 'Solution Neuf',
              'ja': 'ソリューション・ナイン',
              'ko': '솔루션 나인'
            },
            'offsetX': 0,
            'offsetY': 90,
            'sizeFactor': 180,
            'weatherRate': 163
          },
          1187: {
            'exVersion': 5,
            'name': {
              'cn': '奥阔帕恰山',
              'de': 'Urqopacha',
              'en': 'Urqopacha',
              'fr': 'Urqopacha',
              'ja': 'オルコ・パチャ',
              'ko': '오르코 파차'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 160
          },
          1188: {
            'exVersion': 5,
            'name': {
              'cn': '克扎玛乌卡湿地',
              'de': 'Kozama\'uka',
              'en': 'Kozama\'uka',
              'fr': 'Kozama\'uka',
              'ja': 'コザマル・カ',
              'ko': '코자말루 카'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 161
          },
          1189: {
            'exVersion': 5,
            'name': {
              'cn': '亚克特尔树海',
              'de': 'Yak T\'el',
              'en': 'Yak T\'el',
              'fr': 'Yak T\'el',
              'ja': 'ヤクテル樹海',
              'ko': '야크텔 밀림'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 162
          },
          1190: {
            'exVersion': 5,
            'name': {
              'cn': '夏劳尼荒野',
              'de': 'Shaaloani',
              'en': 'Shaaloani',
              'fr': 'Shaaloani',
              'ja': 'シャーローニ荒野',
              'ko': '샬로니 황야'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 164
          },
          1191: {
            'exVersion': 5,
            'name': {
              'cn': '遗产之地',
              'de': 'Ewiges Erbe',
              'en': 'Heritage Found',
              'fr': 'L\'Hoirie recouvrée',
              'ja': 'ヘリテージファウンド',
              'ko': '헤리티지 파운드'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 165
          },
          1192: {
            'exVersion': 5,
            'name': {
              'cn': '活着的记忆',
              'de': 'Lebende Erinnerung',
              'en': 'Living Memory',
              'fr': 'La Mémoire vivante',
              'ja': 'リビング・メモリー',
              'ko': '리빙 메모리'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 166
          },
          1193: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '通天绝壁沃刻佐莫山',
              'de': 'Worqor Zormor',
              'en': 'Worqor Zormor',
              'fr': 'Worqor Zormor',
              'ja': '山嶺登頂 ウォーコー・ゾーモー',
              'ko': '워코 조모'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1194: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '神圣禁地深空天坑',
              'de': 'Himmelstiefer Cenote',
              'en': 'The Skydeep Cenote',
              'fr': 'Le cénote des Cieux infinis',
              'ja': '遺産踏査 天深きセノーテ',
              'ko': '하늘심연 세노테'
            },
            'offsetX': 0,
            'offsetY': 144,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1195: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '艳翼蛇鸟歼灭战',
              'de': 'Zel Tajaal - Valigarmanda',
              'en': 'Worqor Lar Dor',
              'fr': 'Worqor Lar Dor',
              'ja': 'ヴァリガルマンダ討滅戦',
              'ko': '발리가르만다 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1196: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '艳翼蛇鸟歼殛战',
              'de': 'Gok Tajaal - Valigarmanda',
              'en': 'Worqor Lar Dor (Extreme)',
              'fr': 'Worqor Lar Dor (extrême)',
              'ja': '極ヴァリガルマンダ討滅戦',
              'ko': '극 발리가르만다 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1198: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '前哨基地先锋营',
              'de': 'Der Außenposten',
              'en': 'Vanguard',
              'fr': 'L\'Avant-garde',
              'ja': '外征前哨 ヴァンガード',
              'ko': '뱅가드'
            },
            'offsetX': 0,
            'offsetY': -20,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1199: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '忆中金曦亚历山德里亚',
              'de': 'Alexandria',
              'en': 'Alexandria',
              'fr': 'Alexandrie',
              'ja': '記憶幻想 アレクサンドリア',
              'ko': '알렉산드리아'
            },
            'offsetX': 29,
            'offsetY': -95,
            'sizeFactor': 200,
            'weatherRate': 157
          },
          1200: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '佐拉加歼灭战',
              'de': 'Zel Tajaal - Zoraal Ja',
              'en': 'Everkeep',
              'fr': 'Le Pinacle de l\'Éternité',
              'ja': 'ゾラージャ討滅戦',
              'ko': '조라쟈 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 158
          },
          1201: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '佐拉加歼殛战',
              'de': 'Gok Tajaal - Zoraal Ja',
              'en': 'Everkeep (Extreme)',
              'fr': 'Le Pinacle de l\'Éternité (extrême)',
              'ja': '極ゾラージャ討滅戦',
              'ko': '극 조라쟈 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 158
          },
          1202: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '永恒女王歼灭战',
              'de': 'Zel Tajaal - Ewige Königin',
              'en': 'The Interphos',
              'fr': 'Interphos',
              'ja': 'エターナルクイーン討滅戦',
              'ko': '이터널 퀸 토벌전'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 157
          },
          1203: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '荒野秘境仙人刺谷',
              'de': 'Kaktorsenke',
              'en': 'Tender Valley',
              'fr': 'La Vallée des Pampas',
              'ja': '荒野秘境 サボテンダーバレー',
              'ko': '사보텐더 계곡'
            },
            'offsetX': 130,
            'offsetY': -348,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1204: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '噩梦乐园迷途鬼区',
              'de': 'Mahrlingen-Promenade',
              'en': 'The Strayborough Deadwalk',
              'fr': 'Le Parc-aux-Errants',
              'ja': '悪夢遊園 ストレイバロー',
              'ko': '헤매는 성'
            },
            'offsetX': 0,
            'offsetY': -150,
            'sizeFactor': 200,
            'weatherRate': 150
          },
          1208: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '魂魄工厂创生设施',
              'de': 'Origenik',
              'en': 'Origenics',
              'fr': 'L\'Origenèse',
              'ja': '魂魄工廠 オリジェニクス',
              'ko': '오리제닉스'
            },
            'offsetX': -30,
            'offsetY': -63,
            'sizeFactor': 200,
            'weatherRate': 156
          },
          1209: {
            'contentType': 9,
            'exVersion': 5,
            'name': {
              'cn': '加加财富天坑',
              'de': 'Cenote Ja Ja Gural',
              'en': 'Cenote Ja Ja Gural',
              'fr': 'Cénote Ja Ja Gural',
              'ja': '宝物庫 セノーテ・ジャジャグラル',
              'ko': '보물고 세노테 쟈쟈구랄'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1210: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '一位国王，一位父亲',
              'de': 'Des Vaters viele Sorgen',
              'en': 'A Father First',
              'fr': 'L\'Aurarque et le père',
              'ja': '王として、父として',
              'ko': '왕으로서, 아버지로서'
            },
            'offsetX': 0,
            'offsetY': -19,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1211: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '为守护笑容而战',
              'de': 'Mit scharfer Axt und leichtem Lächeln',
              'en': 'Taking a Stand',
              'fr': 'Préserver la paix',
              'ja': '笑顔を護るための戦い',
              'ko': '행복을 지키기 위한 싸움'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1212: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '友之试炼',
              'de': 'Von Schuld und Sühne',
              'en': 'The Feat of the Brotherhood',
              'fr': 'L\'épreuve de l\'amitié',
              'ja': '友の試練',
              'ko': '친구의 시련'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1213: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '守护者还是毁灭者',
              'de': 'Schützer des Volkes, Schlächter des Volkes',
              'en': 'The Protector and the Destroyer',
              'fr': 'Protecteurs et destructeurs',
              'ja': '護る者、壊す者',
              'ko': '지키는 자, 파괴하는 자'
            },
            'offsetX': 0,
            'offsetY': 90,
            'sizeFactor': 180,
            'weatherRate': 0
          },
          1214: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '不论酣睡还是无眠',
              'de': 'Neue Bande der Freund­schaft',
              'en': 'Dreams of a New Day',
              'fr': 'Rêves éveillés',
              'ja': '寝ても覚めても',
              'ko': '잠이 들어도, 잠에서 깨어나도'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 95,
            'weatherRate': 0
          },
          1215: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '剧毒与康复的巅峰对决',
              'de': 'Heilkunst gegen Hexerei',
              'en': 'An Antidote for Anarchy',
              'fr': 'Les deux faces du scorpion',
              'ja': '毒と癒やしの頂上決戦',
              'ko': '독과 치유의 결전'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1216: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '无可指摘的猎人',
              'de': 'Krönender Abschuss',
              'en': 'A Hunter True',
              'fr': 'Chasseuse à lunettes... chasseuse honnête',
              'ja': '一端の狩人',
              'ko': '어엿한 사냥꾼'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1217: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '打倒！沙尔托菲特盗贼团！',
              'de': 'Der mächtigste Schild',
              'en': 'The Mightiest Shield',
              'fr': 'Mauvais cru pour Chalteaufite',
              'ja': '打倒！ シャルトフィット盗賊団',
              'ko': '타도! 샬토피트 도적단'
            },
            'offsetX': -250,
            'offsetY': 128,
            'sizeFactor': 200,
            'weatherRate': 36
          },
          1218: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '祭器创造的假象',
              'de': 'Ein Mythos in Trümmern',
              'en': 'Heroes and Pretenders',
              'fr': 'Le château de cartes s\'effondre',
              'ja': '祭器と作られた虚像',
              'ko': '제기로 만든 허상'
            },
            'offsetX': -693,
            'offsetY': -46,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1225: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚登天斗技场 轻量级1',
              'de': 'Arkadion - Halbschwergewicht R1',
              'en': 'AAC Light-heavyweight M1',
              'fr': 'Poids mi-lourds CCA - match 1',
              'ja': '至天の座アルカディア：ライトヘビー級1',
              'ko': '아르카디아 선수권: 라이트헤비급 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1226: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚零式登天斗技场 轻量级1',
              'de': 'Arkadion - Halbschwergewicht R1 (episch)',
              'en': 'AAC Light-heavyweight M1 (Savage)',
              'fr': 'Poids mi-lourds CCA - match 1 (sadique)',
              'ja': '至天の座アルカディア零式：ライトヘビー級1',
              'ko': '아르카디아 선수권: 라이트헤비급(영웅) 1'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1227: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚登天斗技场 轻量级2',
              'de': 'Arkadion - Halbschwergewicht R2',
              'en': 'AAC Light-heavyweight M2',
              'fr': 'Poids mi-lourds CCA - match 2',
              'ja': '至天の座アルカディア：ライトヘビー級2',
              'ko': '아르카디아 선수권: 라이트헤비급 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1228: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚零式登天斗技场 轻量级2',
              'de': 'Arkadion - Halbschwergewicht R2 (episch)',
              'en': 'AAC Light-heavyweight M2 (Savage)',
              'fr': 'Poids mi-lourds CCA - match 2 (sadique)',
              'ja': '至天の座アルカディア零式：ライトヘビー級2',
              'ko': '아르카디아 선수권: 라이트헤비급(영웅) 2'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1229: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚登天斗技场 轻量级3',
              'de': 'Arkadion - Halbschwergewicht R3',
              'en': 'AAC Light-heavyweight M3',
              'fr': 'Poids mi-lourds CCA - match 3',
              'ja': '至天の座アルカディア：ライトヘビー級3',
              'ko': '아르카디아 선수권: 라이트헤비급 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1230: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚零式登天斗技场 轻量级3',
              'de': 'Arkadion - Halbschwergewicht R3 (episch)',
              'en': 'AAC Light-heavyweight M3 (Savage)',
              'fr': 'Poids mi-lourds CCA - match 3 (sadique)',
              'ja': '至天の座アルカディア零式：ライトヘビー級3',
              'ko': '아르카디아 선수권: 라이트헤비급(영웅) 3'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1231: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚登天斗技场 轻量级4',
              'de': 'Arkadion - Halbschwergewicht R4',
              'en': 'AAC Light-heavyweight M4',
              'fr': 'Poids mi-lourds CCA - match 4',
              'ja': '至天の座アルカディア：ライトヘビー級4',
              'ko': '아르카디아 선수권: 라이트헤비급 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1232: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '阿卡狄亚零式登天斗技场 轻量级4',
              'de': 'Arkadion - Halbschwergewicht R4 (episch)',
              'en': 'AAC Light-heavyweight M4 (Savage)',
              'fr': 'Poids mi-lourds CCA - match 4 (sadique)',
              'ja': '至天の座アルカディア零式：ライトヘビー級4',
              'ko': '아르카디아 선수권: 라이트헤비급(영웅) 4'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1233: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '旅行画家的森都旅程',
              'de': 'Nächtliche Ruhestörung',
              'en': 'Mind over Manor',
              'fr': 'Tapage nocturne',
              'ja': '旅する画家は森都を征く',
              'ko': '떠돌이 화가는 숲의 도시로'
            },
            'offsetX': 32,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1234: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '旅行画家的幻想旅程',
              'de': 'Begegnungen und Abschiede',
              'en': 'Somewhere Only She Knows',
              'fr': 'L\'œuvre de la maturité',
              'ja': '旅する画家は幻想を征く',
              'ko': '떠돌이 화가는 환상 속으로'
            },
            'offsetX': 0,
            'offsetY': 286,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1235: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '蝰蛇剑士的使命',
              'de': 'Einführung in die Viperologie',
              'en': 'Fangs of the Viper',
              'fr': 'Le devoir des rôdeurs vipère',
              'ja': 'ヴァイパーの使命',
              'ko': '바이퍼의 사명'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1236: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '图拉尔威爪猎手',
              'de': 'Der Wille der Natur',
              'en': 'Vengeance of the Viper',
              'fr': 'Le fléau des Tural vidraal',
              'ja': 'トラルヴィドラールを狩る者',
              'ko': '투랄비드랄을 사냥하는 자'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1238: {
            'contentType': 28,
            'exVersion': 5,
            'name': {
              'de': 'Eine zweite Zukunft (fatal)',
              'en': 'Futures Rewritten (Ultimate)',
              'fr': 'Avenirs réécrits (fatal)',
              'ja': '絶もうひとつの未来'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 0
          },
          1239: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '白虎幻巧战',
              'de': 'Traumprüfung - Byakko',
              'en': 'The Jade Stoa (Unreal)',
              'fr': 'La Clairière de Jade (irréel)',
              'ja': '幻白虎征魂戦'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 400,
            'weatherRate': 93
          },
          1241: {
            'contentType': 37,
            'exVersion': 5,
            'name': {
              'de': 'Die Wolke der Dunkelheit (chaotisch)',
              'en': 'The Cloud of Darkness (Chaotic)',
              'fr': 'La Tour de Ténèbres (chaotique)',
              'ja': '滅暗闇の雲激闘戦'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 28
          },
          1242: {
            'contentType': 2,
            'exVersion': 5,
            'name': {
              'cn': '废弃据点玉韦亚瓦塔实验站',
              'de': 'Forschungsstation Yuweyawata',
              'en': 'Yuweyawata Field Station',
              'fr': 'Le centre de recherche de Yuweyawata',
              'ja': '廃地討究 ユウェヤーワータ'
            },
            'offsetX': -35,
            'offsetY': -398,
            'sizeFactor': 200,
            'weatherRate': 86
          },
          1243: {
            'contentType': 4,
            'exVersion': 5,
            'name': {
              'cn': '永恒女王忆想歼灭战',
              'de': 'Gok Tajaal - Ewige Königin',
              'en': 'The Minstrel\'s Ballad: Sphene\'s Burden',
              'fr': 'Interphos (extrême)',
              'ja': '極エターナルクイーン討滅戦'
            },
            'offsetX': -100,
            'offsetY': -100,
            'sizeFactor': 400,
            'weatherRate': 157
          },
          1244: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'cn': '家人的温暖',
              'de': 'Ein Land, eine Familie',
              'en': 'The Warmth of Family',
              'fr': 'La famille de l\'Aurarque',
              'ja': '王の家族'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1245: {
            'contentType': 2,
            'exVersion': 0,
            'name': {
              'cn': '魔兽领域日影地修炼所',
              'de': 'Halatali',
              'en': 'Halatali',
              'fr': 'Halatali',
              'ja': '魔獣領域 ハラタリ修練所',
              'ko': '할라탈리 수련장'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 200,
            'weatherRate': 0
          },
          1246: {
            'contentType': 7,
            'exVersion': 5,
            'name': {
              'de': 'Kampf an Zorgor der Weiten',
              'en': 'Bar the Passage',
              'fr': 'Pour s\'affranchir de la tyrannie, tout s\'appelle vertu',
              'ja': '決戦、ゾーゴー永結橋'
            },
            'offsetX': 0,
            'offsetY': 0,
            'sizeFactor': 100,
            'weatherRate': 0
          },
          1248: {
            'contentType': 5,
            'exVersion': 5,
            'name': {
              'cn': '朱诺：第一巡行',
              'de': 'Jeuno: Die erste Etappe',
              'en': 'Jeuno: The First Walk',
              'fr': 'Jeuno - La première perambulation',
              'ja': 'ジュノ：ザ・ファーストウォーク'
            },
            'offsetX': -800,
            'offsetY': -595,
            'sizeFactor': 200,
            'weatherRate': 150
          }
        };
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (data);

        /***/
      })

    /******/
  });
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
      /******/
    }
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
      /******/
    };
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
    /******/
  }
/******/
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for (var key in definition) {
/******/ 				if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
          /******/
        }
        /******/
      }
      /******/
    };
    /******/
  })();
/******/
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
    /******/
  })();
  /******/
  /************************************************************************/
  var __webpack_exports__ = {};
  // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
  (() => {

    // EXTERNAL MODULE: ./resources/netlog_defs.ts
    var netlog_defs = __webpack_require__(21);
    // EXTERNAL MODULE: ./resources/netregexes.ts
    var netregexes = __webpack_require__(622);
    // EXTERNAL MODULE: ./resources/overlay_plugin_api.ts
    var overlay_plugin_api = __webpack_require__(959);
    // EXTERNAL MODULE: ./resources/user_config.ts
    var user_config = __webpack_require__(456);
    // EXTERNAL MODULE: ./resources/not_reached.ts
    var not_reached = __webpack_require__(62);
    ;// CONCATENATED MODULE: ./resources/timerbar.ts

    class TimerBar extends HTMLElement {
      static get observedAttributes() {
        return ['duration', 'value', 'elapsed', 'hideafter', 'lefttext', 'centertext', 'righttext', 'width', 'height', 'bg', 'fg', 'stylefill', 'toward', 'loop'];
      }

      /** create an instance of TimerBar with attributes */
      static create(o) {
        if (!window.customElements.get('timer-bar')) window.customElements.define('timer-bar', TimerBar);
        const element = document.createElement('timer-bar');
        if (!o) return element;
        if (typeof o.duration === 'number') element.duration = o.duration;
        if (typeof o.value === 'number') element.value = o.value;
        if (typeof o.elapsed === 'number') element.elapsed = o.elapsed;
        if (typeof o.hideafter === 'number') element.hideafter = o.hideafter;
        if (typeof o.lefttext === 'string') element.lefttext = o.lefttext;
        if (typeof o.centertext === 'string') element.centertext = o.centertext;
        if (typeof o.righttext === 'string') element.righttext = o.righttext;
        if (typeof o.width === 'string') element.width = o.width;
        if (typeof o.height === 'string') element.height = o.height;
        if (typeof o.bg === 'string') element.bg = o.bg;
        if (typeof o.fg === 'string') element.fg = o.fg;
        if (typeof o.stylefill === 'string') element.stylefill = o.stylefill;
        if (typeof o.toward === 'string') element.toward = o.toward;
        if (typeof o.loop === 'boolean') element.loop = o.loop;
        return element;
      }

      // Background color.
      set bg(c) {
        if (c === null) this.removeAttribute('bg'); else this.setAttribute('bg', c);
      }
      get bg() {
        return this.getAttribute('bg');
      }

      // Foreground color.
      set fg(c) {
        if (c === null) this.removeAttribute('fg'); else this.setAttribute('fg', c);
      }
      get fg() {
        return this.getAttribute('fg');
      }

      // The width of the bar.
      set width(w) {
        if (w === null) this.removeAttribute('width'); else this.setAttribute('width', w);
      }
      get width() {
        return this.getAttribute('width');
      }

      // The height of the bar.
      set height(w) {
        if (w === null) this.removeAttribute('height'); else this.setAttribute('height', w);
      }
      get height() {
        return this.getAttribute('height');
      }

      // The total length of time to count down.
      set duration(s) {
        if (s === null) this.removeAttribute('duration'); else this.setAttribute('duration', s.toString());
      }
      get duration() {
        const s = this.getAttribute('duration');
        if (s === null) return null;
        return parseFloat(s);
      }

      // The length remaining in the count down.
      set value(s) {
        this.setAttribute('value', s.toString());
      }
      get value() {
        if (!this._start) return this._duration;
        const elapsedMs = Date.now() - this._start;
        return Math.max(0, this._duration - elapsedMs / 1000);
      }

      // The elapsed time.
      set elapsed(s) {
        this.setAttribute('elapsed', s.toString());
      }
      get elapsed() {
        if (!this._start) return 0;
        return (Date.now() - this._start) / 1000;
      }

      // If "right" then animates left-to-right (the default). If "left"
      // then animates right-to-left.
      set toward(t) {
        if (t === null) this.removeAttribute('toward'); else this.setAttribute('toward', t);
      }
      get toward() {
        return this.getAttribute('toward');
      }

      // If "fill" then the progress goes empty-to-full, if "empty" then the
      // progress bar starts full and goes to empty.
      set stylefill(s) {
        if (s === null) this.removeAttribute('stylefill'); else this.setAttribute('stylefill', s);
      }
      get stylefill() {
        return this.getAttribute('stylefill');
      }

      // When the bar reaches 0, it is hidden after this many seconds. If null
      // then it is not hidden.
      set hideafter(h) {
        if (h === null) this.removeAttribute('hideafter'); else this.setAttribute('hideafter', h.toString());
      }
      get hideafter() {
        const h = this.getAttribute('hideafter');
        if (h === null) return null;
        return parseInt(h);
      }

      // Chooses what should be shown in the text field in each area of
      // the bar. Can be one of:
      // empty - nothing is shown.
      // "remain" - shows the remaining time.
      // "duration" - shows the remaining and total duration time
      //              of the bar.
      // "percent" - shows the percentage of remaining time to
      //             the duration.
      // "elapsed"   - shows the elapsed time
      // anything else - the given text is shown literally.
      set lefttext(p) {
        if (p === null) this.removeAttribute('lefttext'); else this.setAttribute('lefttext', p);
      }
      get lefttext() {
        return this.getAttribute('lefttext');
      }
      set righttext(p) {
        if (p === null) this.removeAttribute('righttext'); else this.setAttribute('righttext', p);
      }
      get righttext() {
        return this.getAttribute('righttext');
      }
      set centertext(p) {
        if (p === null) this.removeAttribute('centertext'); else this.setAttribute('centertext', p);
      }
      get centertext() {
        return this.getAttribute('centertext');
      }

      // If this attribute is present, the timer will loop forever.
      set loop(l) {
        if (l) this.setAttribute('loop', ''); else this.removeAttribute('loop');
      }
      get loop() {
        return this.hasAttribute('loop');
      }

      // This would be used with window.customElements.
      constructor() {
        super();
        const root = this.attachShadow({
          mode: 'open'
        });
        this.init(root);
        this._connected = false;

        // Default values.
        this._start = 0;
        this._duration = 0;
        this._width = '100%';
        this._height = '100%';
        this._bg = 'black';
        this._fg = 'yellow';
        this._towardRight = false;
        this._fill = false;
        this._leftText = '';
        this._centerText = '';
        this._rightText = '';
        this._hideAfter = -1;
        this._loop = false;
        this._hideTimer = 0;
        this.rootElement = this.shadowRoot?.getElementById('root');
        this.foregroundElement = this.shadowRoot?.getElementById('fg');
        this.backgroundElement = this.shadowRoot?.getElementById('bg');
        this.leftTextElement = this.shadowRoot?.getElementById('lefttext');
        this.centerTextElement = this.shadowRoot?.getElementById('centertext');
        this.rightTextElement = this.shadowRoot?.getElementById('righttext');
      }
      init(root) {
        root.innerHTML = `
      <style>
        .timerbar-root {
          position: relative;
          border: 1px solid black;
          box-sizing: border-box;
        }
        .timerbar-bg {
          position: absolute;
          width: 100%;
          height: 100%;
          opacity: 0.8;
        }
        .timerbar-fg {
          position: absolute;
          width: 100%;
          height: 100%;
          opacity: 1.0;
        }
        .text {
          position: absolute;
          font-family: arial;
          font-weight: bold;
          color: white;
          text-shadow: -1px 0 3px black, 0 1px 3px black, 1px 0 3px black, 0 -1px 3px black;
          will-change: content;
        }
        .text-container {
          position: absolute;
          left: 0px;
          top: calc(50% - 1.2ex);
          width: 100%;
          height: 100%;
          overflow: hidden;
        }
        .timerbar-lefttext {
          position: relative;
          text-align: left;
          padding: 0px 0.4em 0px 0.4em;
        }
        .timerbar-centertext {
          position: relative;
          text-align: center;
          padding: 0px 0.4em 0px 0.4em;
        }
        .timerbar-righttext {
          position: relative;
          text-align: right;
          padding: 0px 0.4em 0px 0.4em;
        }
        :host-context(.just-a-number) .timerbar-root {
          border: none;
        }
        :host-context(.just-a-number) .timerbar-bg {
          display: none;
        }
        :host-context(.just-a-number) .timerbar-fg {
          display: none;
        }
        /* Korean better visibility CSS */
        :lang(ko) .text-container {
          top: calc(50% - 1.5ex);
          height: calc(100% + 0.3ex);
        }
        :lang(ko) .timerbar-righttext {
          top: 0.3ex;
        }
      </style>
      <div id="root" class="timerbar-root" part="timerbar-root">
        <div id="bg" class="timerbar-bg" part="timerbar-bg"></div>
        <div id="fg" class="timerbar-fg" part="timerbar-fg"></div>
        <div class="text-container" part="text-container">
          <div id="lefttext" class="text timerbar-lefttext" part="text timerbar-lefttext"></div>
        </div>
        <div class="text-container" part="text-container">
          <div id="centertext" class="text timerbar-centertext" part="text timerbar-centertext"></div>
        </div>
        <div class="text-container" part="text-container">
          <div id="righttext" class="text timerbar-righttext" part="text timerbar-righttext"></div>
        </div>
      </div>
    `;
      }
      connectedCallback() {
        this._connected = true;
        this.layout();
        this.updateText();
        if (!this._start) this.setvalue(this._duration); else this.advance();
      }
      disconnectedCallback() {
        this._connected = false;
      }
      attributeChangedCallback(name, _oldValue, newValue) {
        if (name === 'duration') {
          this._duration = Math.max(parseFloat(newValue), 0);
          this.setvalue(this._duration);
        } else if (name === 'value') {
          this.setvalue(Math.max(parseFloat(newValue), 0));
        } else if (name === 'elapsed') {
          this.setvalue(this._duration - Math.max(parseFloat(newValue), 0));
        } else if (name === 'width') {
          this._width = newValue;
          this.layout();
        } else if (name === 'height') {
          this._height = newValue;
          this.layout();
        } else if (name === 'bg') {
          this._bg = newValue;
          this.layout();
        } else if (name === 'fg') {
          this._fg = newValue;
          this.layout();
        } else if (name === 'stylefill') {
          this._fill = newValue === 'fill';
          this.layout();
        } else if (name === 'toward') {
          this._towardRight = newValue === 'right';
          this.layout();
        } else if (name === 'lefttext') {
          const update = newValue !== this._leftText && this._connected;
          this._leftText = newValue;
          if (update) this.updateText();
        } else if (name === 'centertext') {
          const update = newValue !== this._centerText && this._connected;
          this._centerText = newValue;
          if (update) this.updateText();
        } else if (name === 'righttext') {
          const update = newValue !== this._rightText && this._connected;
          this._rightText = newValue;
          if (update) this.updateText();
        } else if (name === 'hideafter') {
          this._hideAfter = Math.max(this.hideafter ?? 0, 0);
          if (this.value === 0) {
            if (this._hideAfter >= 0) this.hide(); else this.show();
          }
        } else if (name === 'loop') {
          this._loop = newValue !== null;
        }
        if (this._connected) this.draw();
      }
      layout() {
        if (!this._connected) return;
        this.backgroundElement.style.background = this._bg;
        this.foregroundElement.style.background = this._fg;
        this.rootElement.style.width = this._width;
        this.rootElement.style.height = this._height;

        // To start full and animate to empty, we animate backwards and flip
        // the direction.
        if (this._towardRight !== this._fill) {
          this.foregroundElement.style.left = '';
          this.foregroundElement.style.right = '0px';
          this.foregroundElement.style.transformOrigin = 'right center';
        } else {
          this.foregroundElement.style.left = '0px';
          this.foregroundElement.style.right = '';
          this.foregroundElement.style.transformOrigin = 'left center';
        }
      }
      updateText() {
        const varyingTexts = ['elapsed', 'duration', 'percent', 'remain'];
        // These values are filled in during draw() when the values change.
        if (!varyingTexts.includes(this._leftText)) {
          // Otherwise the value is fixed so it can be set here.
          this.leftTextElement.innerHTML = this._leftText;
        }
        if (!varyingTexts.includes(this._centerText)) this.centerTextElement.innerHTML = this._centerText;
        if (!varyingTexts.includes(this._rightText)) this.rightTextElement.innerHTML = this._rightText;
      }
      draw() {
        const elapsedSec = (Date.now() - this._start) / 1000;
        const remainSec = Math.max(0, this._duration - elapsedSec);
        let percent = this._duration <= 0 ? 0 : remainSec / this._duration;
        // Keep it between 0 and 1.
        percent = Math.min(1, Math.max(0, percent));
        const displayRemain = remainSec ? remainSec.toFixed(1) : '';
        const displayElapsed = elapsedSec.toFixed(1);
        if (this._fill) percent = 1.0 - percent;
        this.foregroundElement.style.transform = `scaleX(${percent.toFixed(3)})`;
        if (this._leftText !== '') {
          if (this._leftText === 'remain') this.leftTextElement.innerText = displayRemain; else if (this._leftText === 'duration') this.leftTextElement.innerText = `${displayRemain} / ${this._duration}`; else if (this._leftText === 'percent') this.leftTextElement.innerText = `${(percent * 100).toFixed(1)} %`; else if (this._leftText === 'elapsed') this.leftTextElement.innerText = displayElapsed;
        }
        if (this._centerText !== '') {
          if (this._centerText === 'remain') this.centerTextElement.innerText = displayRemain; else if (this._centerText === 'duration') this.centerTextElement.innerText = `${displayRemain} / ${this._duration}`; else if (this._centerText === 'percent') this.centerTextElement.innerText = `${(percent * 100).toFixed(1)} %`; else if (this._centerText === 'elapsed') this.centerTextElement.innerText = displayElapsed;
        }
        if (this._rightText !== '') {
          if (this._rightText === 'remain') this.rightTextElement.innerText = displayRemain; else if (this._rightText === 'duration') this.rightTextElement.innerText = `${displayRemain} / ${this._duration}`; else if (this._rightText === 'percent') this.rightTextElement.innerText = `${(percent * 100).toFixed(1)} %`; else if (this._rightText === 'elapsed') this.rightTextElement.innerText = displayElapsed;
        }
      }

      // Apply all styles from an object where keys are CSS properties
      applyStyles(styles) {
        const s = Object.keys(styles).map(k => {
          return `${k}:${styles?.[k] ?? ''};`;
        }).join('');
        const left = this.shadowRoot?.getElementById('lefttext');
        const center = this.shadowRoot?.getElementById('centertext');
        const right = this.shadowRoot?.getElementById('righttext');
        if (!left || !center || !right) throw new not_reached/* UnreachableCode */.$();
        left.style.cssText += s;
        center.style.cssText += s;
        right.style.cssText += s;
      }
      setvalue(remainSec) {
        const elapsedSec = Math.max(0, this._duration - remainSec);
        this._start = Date.now() - elapsedSec * 1000;
        if (!this._connected) return;
        this.show();
        clearTimeout(this._hideTimer ?? 0);
        this._hideTimer = null;
        this.advance();
      }
      advance() {
        // If the element has been disconnected from the DOM, stop requesting animation frames
        if (!this._connected) return;
        const elapsedSec = (Date.now() - this._start) / 1000;
        if (elapsedSec >= this._duration) {
          // Timer completed
          if (this._loop && this._duration > 0) {
            // Sets the remaining time to include any extra elapsed seconds past the duration
            this.setvalue(this._duration + (this._duration - elapsedSec) % this._duration);
            return;
          }

          // Sets the attribute to 0 so users can see the counter is done, and
          // if they set the same duration again it will count.
          this._duration = 0;
          if (this._hideAfter > 0) this._hideTimer = window.setTimeout(this.hide.bind(this), this._hideAfter * 1000); else if (this._hideAfter === 0) this.hide();
        } else {
          // Timer not completed, request another animation frame
          window.requestAnimationFrame(this.advance.bind(this));
        }
        this.draw();
      }
      show() {
        if (this._connected) this.rootElement.style.display = 'block';
      }
      hide() {
        if (this._connected) this.rootElement.style.display = 'none';
      }
    }
    window.customElements.define('timer-bar', TimerBar);
    ;// CONCATENATED MODULE: ./ui/fisher/fisher-ui.js

    class FisherBar extends TimerBar {
      stop() {
        cancelAnimationFrame(this._animationFrame);
        this._animationFrame = null;
      }
    }
    if (window.customElements) {
      // Preferred method but old CEF doesn't have this.
      window.customElements.define('fisher-bar', FisherBar);
    } else {
      document.registerElement('fisher-bar', {
        prototype: Object.create(FisherBar.prototype)
      });
    }
    class FisherUI {
      constructor(options, element) {
        this.element = element;
        this.options = options;
        this.baitEl = element.querySelector('#bait-name');
        this.placeEl = element.querySelector('#place-name');
        this.timeEl = element.querySelector('#cast-duration');
        this.arrowEl = element.querySelector('#fisher-arrow');
        this.tugNames = ['unknown', 'light', 'medium', 'heavy'];
        this.castStart = null;
        this.fishing = false;
        this.animationFrame = false;
        this.bars = [];
      }
      draw() {
        const timeMs = new Date() - this.castStart;
        const time = (timeMs / 1000).toFixed(1);
        this.timeEl.innerHTML = time;
        this.arrowEl.style.top = `${timeMs / 600}%`;
        this.animationFrame = requestAnimationFrame(this.draw.bind(this));
      }
      setBait(baitName) {
        this.baitEl.innerHTML = baitName;
      }
      setPlace(place) {
        const oldPlace = this.placeEl.innerHTML;
        if (!place) {
          if (oldPlace && oldPlace[0] !== '(') this.placeEl.innerHTML = `(${oldPlace})`; else this.placeEl.innerHTML = '------------';
        } else {
          this.placeEl.innerHTML = place;
        }
      }
      startTimers() {
        const barData = {};
        const rows = this.element.querySelectorAll('.table-row');
        for (let i = 0; i < rows.length; i++) {
          const row = rows[i];
          const min = row.getAttribute('data-min');
          const max = row.getAttribute('data-max');
          const bar = document.createElement('fisher-bar');
          let timeouts = [];
          bar.centertext = row.getAttribute('data-fish');

          // Step one: fill until the minimum time
          if (min && min !== 'undefined' && max && max !== 'undefined') {
            row.opacity = 0.8;
            bar.duration = min / 1000;
            bar.stylefill = 'fill';
            // Step two: empty until the maximum time
            timeouts.push(window.setTimeout(() => {
              row.style.opacity = 1;
              bar.stylefill = 'empty';
              bar.value = 0;
              bar.duration = (max - min) / 1000;
              timeouts.push(window.setTimeout(() => {
                row.style.opacity = 0.5;
              }, max - min));
            }, min));
          } else {
            bar.duration = 0;
            timeouts = [];
          }
          if (row.getAttribute('data-tug')) bar.fg = this.options.Colors[this.tugNames[row.getAttribute('data-tug')]];
          while (row.lastChild) row.removeChild(row.lastChild);
          row.appendChild(bar);
          this.bars.push({
            'row': row,
            'bar': bar,
            'timeouts': timeouts
          });
        }
        this.draw();
      }
      stopTimers() {
        // Stops cast time timer and arrow
        cancelAnimationFrame(this.animationFrame);
        this.animationFrame = null;
        this.bars.forEach(bar => {
          // Stops the timed events
          bar.timeouts.forEach(timeout => {
            clearTimeout(timeout);
          });

          // Stops the bar
          bar.bar.stop();
        });
      }
      redrawFish(hookTimes, tugTypes) {
        // Sort hook times by minimum time, with undefineds being at the end
        const sortedKeys = Object.keys(hookTimes).sort((a, b) => {
          const t = hookTimes;
          if ((!t[a] || !t[a].min) && (!t[b] || !t[b].min)) return 0; else if (!t[a] || !t[a].min) return 1; else if (!t[b] || !t[b].min) return -1;
          return t[a].min - t[b].min;
        });

        // Remove current values from all wells
        Array.prototype.forEach.call(this.element.querySelectorAll('.well-entry, .table-row'), node => {
          node.parentNode.removeChild(node);
        });
        for (let i = 0; i < sortedKeys.length; i++) {
          // First, draw on the well
          const fish = sortedKeys[i];
          if (tugTypes[fish] && hookTimes[fish].min && hookTimes[fish].max) {
            const tug = tugTypes[fish];
            // Create the element with fish-specific styles
            const el = document.createElement('div');
            el.classList.add('well-entry');
            el.setAttribute('data-fish', fish);
            el.style.top = `${(hookTimes[fish].min / 600).toString()}%`;
            el.style.height = `${((hookTimes[fish].max - hookTimes[fish].min) / 600).toString()}%`;
            el.style.backgroundColor = this.options.Colors[this.tugNames[tug]];

            // Put the element in the well
            const well = this.element.querySelector(`#fisher-well-${this.tugNames[tug]}`);
            well.appendChild(el);
          }

          // Next, make the row for the table
          const row = document.createElement('div');
          row.classList.add('table-row');
          row.setAttribute('data-fish', fish);
          row.setAttribute('data-tug', tugTypes[fish]);
          row.setAttribute('data-min', hookTimes[fish].min);
          row.setAttribute('data-max', hookTimes[fish].max);

          // Add the row to the table
          const table = this.element.querySelector('#fisher-table');
          table.appendChild(row);
        }
      }
      startFishing() {
        this.fishing = true;
        this.castStart = new Date();
        this.startTimers();
      }
      stopFishing() {
        this.stopTimers();
        this.fishing = false;
        this.animationFrame = null;
      }
    }
    ;// CONCATENATED MODULE: ./ui/fisher/static-data.ts
    // Auto-generated from gen_fisher_data.py
    // DO NOT EDIT THIS FILE DIRECTLY
    const data = {
      'fish': {
        'cn': {
          '4776': '星里海带',
          '4869': '梅尔托尔虾虎',
          '4870': '罗敏萨鳀鱼',
          '4871': '手指虾',
          '4872': '海云水母',
          '4873': '藤皮海参',
          '4874': '海港鲱',
          '4875': '比阿纳可蛤蜊',
          '4876': '珊瑚蝶',
          '4877': '莫拉比鲽鱼',
          '4878': '石软蟹',
          '4879': '虎纹鳕',
          '4880': '钢盔鲎',
          '4881': '罗斯利特牡蛎',
          '4882': '海神刀',
          '4883': '神仙鱼',
          '4884': '折刀贝',
          '4885': '蓝章鱼',
          '4886': '海毒鲀',
          '4887': '刀鳍沙丁鱼',
          '4888': '魔梭鱼',
          '4889': '钓鮟鱇',
          '4890': '海马',
          '4891': '比阿纳可鲷鱼',
          '4892': '黑鳎',
          '4893': '锤头鲨',
          '4894': '苍皮海参',
          '4895': '苍茫鲱',
          '4896': '灰海金枪鱼',
          '4897': '叶海龙',
          '4898': '满月沙丁鱼',
          '4899': '哈拉尔黑线鳕',
          '4900': '白蝶贝',
          '4901': '薰衣草印鱼',
          '4902': '气泡鱼',
          '4903': '银鲨',
          '4904': '梭子鰆',
          '4905': '求雨鱼',
          '4906': '鹦鹉螺',
          '4907': '刺鳗',
          '4908': '隆头鱼',
          '4909': '平鱼',
          '4910': '海魔鱼',
          '4911': '海岩龙虾',
          '4912': '拟鮟鱇',
          '4913': '小撒拉奥斯',
          '4914': '愿贝',
          '4915': '麻希鲯鳅',
          '4916': '大比目鱼',
          '4917': '马兹拉雅枪鱼',
          '4918': '腔棘鱼',
          '4919': '巨型乌贼',
          '4920': '基迦章鱼',
          '4921': '翻车鱼',
          '4922': '恐鱼',
          '4923': '巨齿鲨',
          '4924': '锯鲛',
          '4925': '蝲蛄',
          '4926': '鲢鱼',
          '4927': '斑纹虾虎',
          '4928': '小鲶鱼',
          '4929': '骨蝲蛄',
          '4930': '公主鳟',
          '4931': '幽暗虾虎',
          '4932': '皮皮拉鱼',
          '4933': '红蝲蛄',
          '4934': '潜沙鱼',
          '4935': '黄铜泥鳅',
          '4936': '白妙鲤',
          '4937': '阿巴拉提亚公鱼',
          '4938': '盲鱼',
          '4939': '弹涂鱼',
          '4940': '虹鳟鱼',
          '4941': '河蟹',
          '4942': '斗鱼',
          '4943': '仙女鲈',
          '4944': '橡果蜗牛',
          '4945': '暗塘鳢',
          '4946': '拉诺西亚刺鱼',
          '4947': '沟鲫鱼',
          '4948': '铜鱼',
          '4949': '蓝铃鲑',
          '4950': '泥软蟹',
          '4951': '三色鲤',
          '4952': '深红蝲蛄',
          '4953': '翡翠鳗',
          '4954': '圆蚌',
          '4955': '暖水鳟',
          '4956': '玻璃刺鱼',
          '4957': '四眼鱼',
          '4958': '黑鳗',
          '4959': '暗鲈',
          '4960': '圣盾虾',
          '4961': '清道琵琶鱼',
          '4962': '上爬刺鱼',
          '4963': '黑鲶鱼',
          '4964': '黑鬼鱼',
          '4965': '八目鳗',
          '4966': '披骨鱼',
          '4967': '宇格拉姆鲑鱼',
          '4968': '斑纹琵琶鱼',
          '4969': '带鱼',
          '4970': '神握鳉',
          '4971': '净骨蜗牛',
          '4972': '蔓根跳鱼',
          '4973': '骨舌鱼',
          '4974': '硬毛蟹',
          '4975': '蒙凯恩凯鱼',
          '4976': '樱鳟',
          '4977': '沙鱼',
          '4978': '银鱼',
          '4979': '小丑鳅',
          '4980': '铠甲琵琶鱼',
          '4981': '巨鲈',
          '4982': '威罗迪纳鲤鱼',
          '4983': '斑点鲀',
          '4984': '黄金鳅',
          '4985': '纳尔札尔鳗鱼',
          '4986': '绯红鳟',
          '4987': '盘丽鱼',
          '4988': '石绿湖鳟鱼',
          '4989': '火狱蜗牛',
          '4990': '王家琵琶鱼',
          '4991': '雷纹鱼',
          '4992': '龙门鱼',
          '4993': '刀背鱼',
          '4994': '橡根鱼',
          '4995': '杜父鱼',
          '4996': '南方狗鱼',
          '4997': '北方狗鱼',
          '4998': '地灵鲀',
          '4999': '射水鱼',
          '5000': '哥布林刺鱼',
          '5001': '永恒鲤',
          '5002': '暗斗鱼',
          '5003': '淤泥跳鱼',
          '5004': '震雷鱼',
          '5005': '雀鳝',
          '5006': '北洲鲈',
          '5007': '帕戈尔赞盘丽鱼',
          '5008': '争斗琵琶鱼',
          '5009': '繁星鳟鱼',
          '5010': '战争神狗鱼',
          '5011': '金鱼',
          '5012': '吸血八目鳗',
          '5013': '山岳神杜父鱼',
          '5014': '洞穴螯虾',
          '5015': '豹鱼',
          '5016': '大钝甲鱼',
          '5017': '日轮',
          '5018': '长吻鳄鳝',
          '5019': '乌兹刀背鱼',
          '5020': '巨鲶鱼',
          '5021': '腐鱼',
          '5022': '蘑菇蟹',
          '5023': '雷神鱼',
          '5024': '斑点雀鳝',
          '5025': '煌鱼',
          '5026': '弓鳍鱼',
          '5027': '环棘鱼',
          '5028': '泷太郎',
          '5029': '巨骨舌鱼',
          '5030': '庞鱼',
          '5031': '丛林鲶鱼',
          '5032': '沙鲷鱼',
          '5033': '沙鲶鱼',
          '5034': '土遁鱼',
          '5035': '飞沙鱼',
          '5036': '蚁狮蛞蝓',
          '5037': '沙丘蝠鲼',
          '5038': '云水母',
          '5039': '天鱼',
          '5040': '破云飞鱼',
          '5041': '飞蝠鲼',
          '5042': '扬帆鱼',
          '5043': '撒沟厉钓鮟鱇',
          '5044': '浮云碟',
          '5045': '旅沙鳗',
          '5046': '喙嘴龙',
          '5460': '白珊瑚',
          '5461': '蓝珊瑚',
          '5462': '红珊瑚',
          '5466': '黑蝶贝',
          '5544': '绿灯球藻',
          '6185': '精金幼龟',
          '6191': '巨蝌蚪',
          '7678': '扎尔艾拉',
          '7679': '无赖王',
          '7680': '山神印',
          '7681': '高声鲶鱼',
          '7682': '水晶刺鱼',
          '7683': '莫尔巴',
          '7684': '拾荒鮟鱇',
          '7685': '金鳍蝶',
          '7686': '巨鲨',
          '7687': '鳞脚螺',
          '7688': '隐沙鱼',
          '7689': '暗骑士',
          '7690': '银君',
          '7691': '剑齿鳕',
          '7692': '梦幻虾虎',
          '7693': '海神剑',
          '7694': '暗兵鳢',
          '7695': '审判鳐',
          '7696': '酿血鱼',
          '7697': '仙后鲈',
          '7698': '滑溜帝王',
          '7699': '蓝寡妇',
          '7700': '人面鲤',
          '7701': '倔强鲫鱼',
          '7702': '朝圣泥鱼',
          '7703': '垂暮蝲蛄',
          '7704': '净髓蜗牛',
          '7705': '外科医生',
          '7706': '泥巨蟹兵',
          '7707': '猛犸章鱼',
          '7708': '圣母鲤',
          '7709': '高刺鱼',
          '7710': '希尔德拉',
          '7711': '铆钉牡蛎',
          '7712': '剪刀手雅克',
          '7713': '招雨王',
          '7714': '铜镜',
          '7902': '鱼大叔',
          '7903': '陨石幸存者',
          '7904': '圣鳟贞德',
          '7905': '特拉玛豹鱼',
          '7906': '断指龙虾',
          '7907': '终结者',
          '7908': '大蛇鳗',
          '7909': '比阿纳可大帝',
          '7910': '肮脏鲱',
          '7911': '虚空之眼',
          '7912': '妖祸鱼',
          '7913': '浮游石',
          '7914': '露齿鲤',
          '7915': '金枪鲨',
          '7916': '尼姆蠕虫',
          '7917': '抽须王',
          '7918': '太阳神杖',
          '7919': '枪鼻头',
          '7920': '雷神光',
          '7921': '沉川鲑',
          '7922': '刺鱼教父',
          '7923': '芳香蝾螈',
          '7924': '轰击泡',
          '7925': '浓盐鲀',
          '7926': '孤独杀手',
          '7927': '温泉王',
          '7928': '铁饼',
          '7929': '铁索',
          '7930': '沙海肠虫',
          '7931': '魔毯',
          '7932': '圣人标',
          '7933': '冥河灯',
          '7934': '绿小丑',
          '7935': '血浴',
          '7936': '雷皇子',
          '7937': '吞雷鱼',
          '7938': '沉溺射手',
          '7939': '丽舞蟹',
          '7940': '银镜鱼',
          '7941': '翻舵手',
          '7942': '千年殇',
          '7943': '汉尼拔',
          '7944': '黎明少女',
          '7945': '星光鳟鱼',
          '7946': '一家之母',
          '7947': '影纹狗鱼',
          '7948': '船长圣杯',
          '7949': '奇虾',
          '7950': '皱鳃鲨',
          '7951': '以太虱',
          '8752': '皇金鱼',
          '8753': '海中老人',
          '8754': '涅普特龙',
          '8755': '空棘鱼',
          '8756': '内角石',
          '8757': '海巫婆',
          '8758': '炼狱火角',
          '8759': '虚无鲈',
          '8760': '科内利亚',
          '8761': '忍斗鱼',
          '8762': '加诺',
          '8763': '杀手库诺',
          '8764': '海盗猎人',
          '8765': '恩登德奇',
          '8766': '吸血鞭',
          '8767': '乌兹刀背鱼·天极',
          '8768': '旋齿鲨',
          '8769': '暗星',
          '8770': '蓝尸',
          '8771': '马哈尔',
          '8772': '秀尼鱼龙',
          '8773': '魔幻蘑菇蟹',
          '8774': '大泷太郎',
          '8775': '波太郎',
          '8776': '血红龙',
          '10123': '大愿贝',
          '12713': '碎冰鱼',
          '12714': '白云珊瑚',
          '12715': '冰战神',
          '12716': '天虫',
          '12718': '山峰蟹',
          '12719': '利齿蛤蜊',
          '12720': '湖胆',
          '12721': '赤刺',
          '12722': '蓝螯虾',
          '12723': '星花',
          '12724': '冰川核',
          '12725': '魔角蜗牛',
          '12726': '黑巫鱼',
          '12727': '热破',
          '12728': '麻伊博伊',
          '12729': '三唇鲤',
          '12730': '牛蛙',
          '12731': '云鱼',
          '12732': '马湖瓦伊',
          '12733': '石蚌',
          '12734': '飘浮蛋',
          '12735': '白影',
          '12736': '蓝天珊瑚',
          '12737': '显贵樱鳟',
          '12738': '角菊石',
          '12739': '凸眼金鱼',
          '12740': '草鱼',
          '12741': '皮皮拉皮拉鱼',
          '12742': '倒仰鲶鱼',
          '12743': '亲吻鱼',
          '12744': '法冠蛞蝓',
          '12745': '熔岩鲎',
          '12746': '风暴核',
          '12747': '知识神杜父鱼',
          '12748': '基迦石斑鱼',
          '12749': '瓦努头',
          '12750': '图丽鱼',
          '12751': '肺鱼',
          '12752': '虎鱼',
          '12753': '夕月天女',
          '12754': '花岗蟹',
          '12755': '火妖小马',
          '12756': '船虫',
          '12757': '蝼蛄',
          '12758': '莫古球球',
          '12759': '岩浆树',
          '12760': '云上骑士',
          '12761': '龙堡鲈',
          '12762': '山地鲀',
          '12763': '求雪鱼',
          '12764': '龙骨鱼',
          '12765': '冰神鱼',
          '12766': '食冰水母',
          '12767': '多鳍鱼',
          '12768': '白丽鱼',
          '12769': '暗影须',
          '12770': '哥布面具',
          '12771': '蓝色美杜莎',
          '12772': '鳞匠螺',
          '12773': '黑鞭',
          '12774': '小钝口螈',
          '12775': '亚拉戈高位钢盔鲎',
          '12776': '白金鱼',
          '12777': '以太之眼',
          '12778': '阿济兹鱼',
          '12779': '水晶鳍',
          '12780': '香鱼',
          '12781': '蝴蝶鱼',
          '12782': '百鳍',
          '12783': '秋叶鱼',
          '12784': '魔帆',
          '12785': '天空清道夫',
          '12786': '岩浆虱',
          '12787': '陨龟',
          '12788': '魔科学物质123',
          '12789': '褐飞刀',
          '12790': '学士贝',
          '12791': '水剑鱼',
          '12792': '西水弓鳍鱼',
          '12793': '气球鲀',
          '12794': '朝日天女',
          '12795': '黄昏珊瑚',
          '12796': '白章鱼',
          '12797': '龙魂',
          '12798': '龙卷鲨',
          '12799': '高风水母',
          '12800': '化石骨舌鱼',
          '12801': '原型洛浦肯',
          '12802': '凯门鳄',
          '12803': '真光层巨骨舌鱼',
          '12804': '青蓝之手刺鱼',
          '12805': '高天鱼',
          '12806': '瓦斯鲀',
          '12807': '魔鱼',
          '12808': '不明飞行物',
          '12809': '温泉医生鱼',
          '12810': '蛉蝎',
          '12811': '攀岩鱼',
          '12812': '鲜血跳鱼',
          '12813': '眼镜蛇鱼',
          '12814': '飞灵',
          '12815': '油鳗',
          '12816': '宝石水母',
          '12817': '战舰鱼',
          '12818': '星码龙虾',
          '12819': '内陆刺鱼',
          '12820': '熔岩鲶鱼',
          '12821': '无齿翼龙',
          '12822': '飞翼鲂',
          '12823': '温泉胆',
          '12824': '樱鳟鱼',
          '12825': '惊龟',
          '12826': '黑魔法鱼',
          '12827': '桶眼鱼',
          '12828': '落雷鳗',
          '12829': '飞猫杀手',
          '12830': '哲学骨舌鱼',
          '12831': '沙利亚克鳄',
          '12832': '熔岩王',
          '12833': '妖精翼龙',
          '12834': '吸血魔毯',
          '12835': '风暴骑士',
          '12836': '狂斗鱼',
          '12837': '毛鳞鱼',
          '13727': '欧洛浦肯',
          '13728': '库尔札斯海若螺',
          '13729': '龙堡公鱼',
          '13730': '天空珊瑚',
          '13731': '太阳帆',
          '13732': '哥布林鲈',
          '14211': '琥珀蝾螈',
          '14212': '沼鯥',
          '14213': '棉云魟',
          '14214': '夜翼鱼龙',
          '14215': '熔岩蜗牛',
          '14216': '祭司鱼',
          '14217': '库尔札斯牡蛎',
          '14218': '古象鼻鱼',
          '14219': '妖祸克拉肯',
          '14220': '鳞鲶',
          '15439': '魔法水桶',
          '15626': '鼓钱袋',
          '15627': '雪人杀手',
          '15628': '拉·雷亚尔',
          '15629': '龙鳞撕裂者',
          '15630': '噩梦之种',
          '15631': '巨陨龟',
          '15632': '水瓶王',
          '15633': '维德弗尼尔',
          '15634': '拉塔托斯克之魂',
          '15635': '水墨鱼',
          '15636': '卷风鲨',
          '15637': '进化型亚拉戈高位钢盔鲎',
          '15638': '无光层巨骨舌鱼',
          '16742': '双型齿翼龙',
          '16743': '姥鲨',
          '16744': '亚拉戈剑鲨',
          '16745': '吞冰水母',
          '16746': '核爆鱼',
          '16747': '叉舌鱼',
          '16748': '蝴蝶夫人',
          '16749': '莫古尔古球球',
          '16750': '卷层云魟',
          '16751': '圣龙泪',
          '16752': '魔科学物质666',
          '16753': '百目螈',
          '16754': '万事通鲈',
          '16756': '冰之巫女',
          '17562': '萨维奈秋叶鱼',
          '17563': '清澈冰战神',
          '17564': '云海红珊瑚',
          '17565': '心贝',
          '17566': '河虾',
          '17577': '大祭司鱼',
          '17578': '尼摩船长',
          '17579': '猴面雀杀手',
          '17580': '赛缇',
          '17581': '水晶飞鸽',
          '17582': '雷鳞蝾螈',
          '17583': '里德尔',
          '17584': '熔岩帝王',
          '17585': '能言者',
          '17586': '千鳍',
          '17587': '风暴血骑士',
          '17588': '莫名熔岩鱼',
          '17589': '欧巴宾海蝎',
          '17590': '铠鱼',
          '17591': '云海蝴蝶螺',
          '17592': '沙里贝涅',
          '17593': '兰代勒翼龙',
          '20018': '鳍龙',
          '20019': '阿拉米格缎带鱼',
          '20020': '延夏红眼鲈',
          '20021': '天女鱼',
          '20022': '扇贝海蛇',
          '20023': '红翅鱼',
          '20024': '汗鱼',
          '20025': '岩盐咸鱼',
          '20026': '彗星鲦',
          '20027': '无二草鱼',
          '20028': '武士鱼',
          '20029': '金丽鱼',
          '20030': '哈克苦鱼',
          '20031': '亚特虾虎',
          '20032': '白姑鱼',
          '20033': '谷爬鱼',
          '20034': '大天竺鱼',
          '20035': '白马',
          '20036': '青鳉',
          '20037': '黑斑花蛇鳗',
          '20038': '赤点石斑鱼',
          '20039': '盐盾',
          '20040': '雕塑家',
          '20041': '珍珠眼',
          '20042': '阿巴拉提亚苦鱼',
          '20043': '白钢鲨',
          '20044': '塔奥苦鱼',
          '20045': '暗缟虾虎',
          '20046': '河红眼鲈',
          '20047': '幻象鲢鱼',
          '20048': '迎春鱼',
          '20049': '头铁鳟',
          '20050': '石楠嘉鱼',
          '20051': '绢鲤',
          '20052': '黄彩鱼',
          '20053': '青彩鱼',
          '20054': '花海马',
          '20055': '破损蟹',
          '20056': '基拉巴尼亚鳟',
          '20057': '唾血龙虾',
          '20058': '缪恩鱼',
          '20059': '武斗鱼',
          '20060': '电鲶鱼',
          '20061': '非信仰巨骨舌鱼',
          '20062': '寺院鲫鱼',
          '20063': '银币鱼',
          '20064': '气球蛙',
          '20065': '灯笼球藻',
          '20066': '死亡鳅',
          '20067': '夫蟹',
          '20068': '妇虾',
          '20069': '素面蝲蛄',
          '20070': '逆流鱼',
          '20071': '阿巴拉提亚蝾螈',
          '20072': '精金多鳍鱼',
          '20073': '冥想鱼',
          '20074': '裁定鱼',
          '20075': '高山骨舌鱼',
          '20076': '猛牛口食',
          '20077': '窥视鱼',
          '20078': '弯刀鱼',
          '20079': '基迦鲈',
          '20080': '月神恩惠',
          '20081': '洞穴鳉',
          '20082': '溶骨蜗牛',
          '20083': '落叶鱼',
          '20084': '小流星',
          '20085': '倾仰鲶鱼',
          '20086': '涅槃蟹',
          '20087': '威罗迪纳草鱼',
          '20088': '威罗迪纳黑鲤',
          '20089': '拉尔戈落雷',
          '20090': '高地刺鱼',
          '20091': '砂砾鱼',
          '20092': '鳀鱼',
          '20093': '琉璃鲱',
          '20094': '地狱水母',
          '20095': '红玉珊瑚',
          '20096': '苍玉珊瑚',
          '20097': '白骨珊瑚',
          '20098': '东洲蝴蝶鱼',
          '20099': '鱼大夫',
          '20100': '剑旗鱼',
          '20101': '木叶龙',
          '20102': '琉璃鲽鱼',
          '20103': '绝鬼鳄',
          '20104': '大王乌贼',
          '20105': '毯子章鱼',
          '20106': '滑翔鱼',
          '20107': '刺鲀',
          '20108': '圆扇贝',
          '20109': '石头鱼',
          '20110': '琉璃金枪鱼',
          '20111': '多玛蝲蛄',
          '20112': '红玉虾',
          '20113': '虎纹河豚',
          '20114': '雷遁鱼',
          '20115': '白纸鱼',
          '20116': '龙鱼',
          '20117': '王室鲑',
          '20118': '延夏鲤',
          '20119': '东洲巨骨舌鱼',
          '20120': '长须鲶鱼',
          '20121': '赏梅鱼',
          '20122': '熊猫蝶尾鱼',
          '20123': '多玛鳟',
          '20124': '多玛鳗',
          '20125': '黄铜鱼',
          '20126': '东洲鳟',
          '20127': '嘎牙子',
          '20128': '草跳鱼',
          '20129': '枯草跳鱼',
          '20130': '太阳鲈',
          '20131': '青空泪',
          '20132': '晨曦蝲蛄',
          '20133': '暮晖蝲蛄',
          '20134': '弓鱼',
          '20135': '翡翠河鹿鱼',
          '20136': '角尊鳅',
          '20137': '野鲤',
          '20138': '天幕鱼',
          '20140': '硬鳞鱼',
          '20141': '东方刺鱼',
          '20142': '幽灵鱼',
          '20143': '小珀琉喀斯',
          '20524': '巧儿海陆行鸟',
          '20785': '基拉巴尼亚鲢鱼',
          '20786': '珊瑚海马',
          '20787': '恋心球藻',
          '20788': '威罗迪纳鲑鱼',
          '20789': '紫圆盾',
          '21174': '枢机鱼',
          '21175': '岩石鱼',
          '21176': '浮木鱼',
          '21177': '紫彩鱼',
          '21178': '虹鳉',
          '22389': '幻河鲯',
          '22390': '仿麻鱼',
          '22391': '鳄龟',
          '22392': '红尾鲶',
          '22393': '薄毯章鱼',
          '22394': '盐磨鲨',
          '22395': '盆栽鱼',
          '22396': '花须鯙',
          '22397': '红彩鱼',
          '22398': '河中长老',
          '23054': '尖叫者',
          '23055': '白彩鱼',
          '23056': '橙彩鱼',
          '23057': '吞钩苦鱼',
          '23058': '蓝宝石扇鳉',
          '23059': '教皇鱼',
          '23060': '怨妇虾',
          '23061': '不定鱼',
          '23062': '钻石眼',
          '23063': '花海龙',
          '23064': '赌命河豚',
          '23065': '春不知',
          '23066': '速疾鬼鳄',
          '23067': '卜传',
          '23068': '天女鲤',
          '23069': '神谕苦鱼',
          '23070': '亚特可汗',
          '23071': '康复鱼',
          '23072': '释法来豹鱼',
          '23073': '热鳍鱼',
          '23074': '白银贝',
          '23075': '青蓝之面',
          '24203': '蓝彩鱼',
          '24204': '绿彩鱼',
          '24205': '拉尔戈鲶鱼',
          '24206': '红尾僵尸鱼',
          '24207': '硬头鳟',
          '24208': '下游鱼',
          '24209': '骸鲢鱼',
          '24210': '最后一滴泪',
          '24211': '黑蒙鱼',
          '24212': '解脱鱼',
          '24213': '公主青鳉',
          '24214': '苦尔鳗',
          '24215': '大海蛇',
          '24216': '羽衣美人',
          '24217': '暮辉鱼',
          '24218': '刀片跳鱼',
          '24557': '北境生蚝',
          '24558': '红玉海藻',
          '24559': '脉轮鲶',
          '24560': '狱卒鮟鱇',
          '24561': '奥萨德鲑鱼',
          '24881': '阿拉米格面纱鱼',
          '24882': '菜食王',
          '24883': '七星',
          '24884': '万刺鲀',
          '24885': '石榴海',
          '24886': '鬼视',
          '24887': '仙寿翁',
          '24888': '水天一碧',
          '24889': '车轴鱼',
          '24890': '一束彩虹',
          '24891': '月神的爱宠',
          '24892': '菜叶跳鱼',
          '24893': '晨曦旗鱼',
          '24990': '异刺鲨',
          '24991': '镰甲鱼',
          '24992': '胸脊鲨',
          '24993': '红龙',
          '24994': '七彩天主',
          '24995': '众神之爱',
          '26746': '八眼鳗',
          '26747': '奶蚝',
          '26748': '大王镜贝',
          '26749': '琥珀鮟鱇',
          '27410': '水晶都脂鲤',
          '27411': '拉克汕鲤',
          '27412': '蓝色公主海星',
          '27413': '外套蜗牛',
          '27414': '爱人之花',
          '27415': '吐罪鱼',
          '27416': '徘徊鲶鱼',
          '27417': '水晶刀鱼',
          '27418': '骸骨鱼',
          '27419': '乳白珊瑚',
          '27420': '砂砾贝',
          '27421': '赤色海蜘蛛',
          '27422': '骨鳀鱼',
          '27423': '游末邦蝴蝶鱼',
          '27424': '红锤头鲨',
          '27425': '硬糖藻',
          '27426': '水球鱼',
          '27427': '紫角蜗牛',
          '27428': '净碟鱼',
          '27429': '兔跳鱼',
          '27430': '黄体鲈',
          '27431': '白化鳄',
          '27432': '白金虹鳉',
          '27433': '雾鳉',
          '27434': '白色石软蟹',
          '27435': '蛇斑盘丽鱼',
          '27436': '白化雀鳝',
          '27437': '贤岛巨鱼',
          '27438': '食骨虾',
          '27439': '太妃蜗牛',
          '27440': '沃茨鳟',
          '27441': '哲罗鱼',
          '27442': '斧鱼',
          '27443': '贵族圆扇鱼',
          '27444': '斑纹鲶',
          '27445': '深褐鳎',
          '27446': '碎贝海带',
          '27447': '血色气球鱼',
          '27448': '珂露西亚鲽鱼',
          '27449': '南珂露西亚鳕鱼',
          '27450': '剃刀鱼',
          '27451': '蔷薇虾',
          '27452': '变形鱼',
          '27453': '艺术鱼',
          '27454': '珂露西亚隆头鱼',
          '27455': '枯叶海龙',
          '27456': '剑齿龙鳖',
          '27457': '尖枪乌贼',
          '27458': '比朗螃蟹',
          '27459': '沙遁鱼',
          '27460': '角骨鱼',
          '27461': '沙蹼壁虎',
          '27462': '沙卵',
          '27463': '琥珀八目鳗',
          '27464': '沙漠锯',
          '27465': '迦利克螃蟹',
          '27466': '拿巴示蝠鲼',
          '27467': '刺棘蜥蜴',
          '27468': '蝴蝶彩虹鳉',
          '27469': '珍珠鳞',
          '27470': '灰跳鱼',
          '27471': '仙子鱼',
          '27472': '血眼蛙',
          '27473': '樱桃鲱鱼',
          '27474': '胭脂鱼',
          '27475': '柠檬鱼',
          '27476': '叛逆鱼',
          '27477': '狂野红斗鱼',
          '27478': '斑点攀鲈',
          '27479': '青蓝鳅',
          '27480': '黄金龙虾',
          '27481': '水泡眼',
          '27482': '弧边招潮蟹',
          '27483': '黑色三连星',
          '27484': '强盗蟹',
          '27485': '黑根鳗',
          '27486': '黄色皮皮拉鱼',
          '27487': '忠义鱼',
          '27488': '骑士鲈',
          '27489': '拉凯提卡鳟',
          '27490': '王冠脂鲤',
          '27491': '引螈',
          '27492': '钻石皮皮拉鱼',
          '27493': '银鲶',
          '27494': '永暗鱼',
          '27495': '暗紫珊瑚',
          '27496': '西考拉克斯贝',
          '27497': '黑风鱼',
          '27498': '青色海蜘蛛',
          '27499': '卡利班骨头鱼',
          '27500': '骗子鱼',
          '27501': '巨型鮟鱇',
          '27502': '鳍人族的鱼叉',
          '27503': '鳍人族的宿敌',
          '27504': '斑点鳗',
          '27505': '海洋陷阱',
          '27506': '古代虾',
          '27507': '绒毛女神虾',
          '27508': '斑斓菊石螺',
          '27509': '青色海恶魔',
          '27510': '薄饼章鱼',
          '27511': '食人贝',
          '27512': '观星鱼',
          '27513': '食用蚝',
          '27514': '彩虹虾',
          '27515': '猎手鱼',
          '28065': '悬挂脂鲤',
          '28066': '贵妇蝴蝶鱼',
          '28067': '重罪石软蟹',
          '28068': '铜褐鳎',
          '28069': '冠骨鱼',
          '28070': '狂怒斗鱼',
          '28071': '洛克瓦卫兵',
          '28072': '猎星鱼',
          '28189': '拉克汕墨螺',
          '28190': '白油刺鱼',
          '28191': '仙女贝',
          '28192': '艾兰凶龟',
          '28193': '珂露西亚帝王蟹',
          '28719': '贻贝',
          '28925': '不朽巨鱼',
          '28926': '白色隆索',
          '28927': '刺钉蜥蜴',
          '28928': '仙子彩虹鳉',
          '28929': '黑色喷气乱流',
          '28930': '鳍人叹息',
          '28937': '加拉迪翁虾虎',
          '28938': '加拉迪翁鳀鱼',
          '28939': '玫瑰鲷鱼',
          '28940': '三角刺鱼',
          '28941': '阳光蝴蝶鱼',
          '28942': '暗淡鲨',
          '29673': '智慧珊瑚',
          '29678': '龙骨贝',
          '29718': '海投刀',
          '29719': '碧玉头',
          '29720': '梅尔托尔龙虾',
          '29721': '天堂鱼',
          '29722': '尸鬼梭鱼',
          '29723': '猎豹鳗',
          '29724': '海中爆弹',
          '29725': '莫莫拉·莫拉',
          '29726': '梅尔托尔蝴蝶鱼',
          '29727': '步兵剑',
          '29728': '罗塔诺梭子鰆',
          '29729': '罗塔诺沙丁鱼',
          '29730': '深海平鱼',
          '29731': '深红钓鮟鱇',
          '29732': '灯鱼',
          '29733': '魔鳗',
          '29734': '青色章鱼',
          '29735': '铬铁锤头鲨',
          '29736': '浮冰鱼',
          '29737': '巨乌贼',
          '29738': '放浪神之石',
          '29739': '拉诺西亚水母',
          '29740': '蓬松海龙',
          '29741': '蜘蛛蟹',
          '29742': '暗鹦鹉螺',
          '29743': '古老恐鱼',
          '29744': '醉鱼',
          '29745': '小利维亚桑',
          '29746': '海铠靴',
          '29747': '海流星',
          '29748': '锤爪龙虾',
          '29749': '天堂之钥',
          '29750': '幽灵鲨',
          '29751': '流银刃',
          '29752': '海神印',
          '29753': '钉牡蛎',
          '29754': '巨食鮟鱇',
          '29755': '秘银君',
          '29756': '灵敏舞者',
          '29757': '海荨麻',
          '29758': '巨大枪鱼',
          '29759': '海难船帆',
          '29760': '太阳神面纱',
          '29761': '高级以太药虱',
          '29762': '浮游碟鱼',
          '29763': '以太海龙',
          '29764': '珊瑚海龙',
          '29765': '无赖龙',
          '29766': '人鱼发',
          '29767': '清道夫',
          '29768': '沉寂者',
          '29769': '深海鳗',
          '29770': '处刑者',
          '29771': '狂野海胆',
          '29772': '尖吻鲈',
          '29773': '幻纱披风',
          '29774': '蜗牛鱼',
          '29775': '阿龙纳斯',
          '29776': '尾骨鱼',
          '29777': '剪碎手巴塞洛缪',
          '29778': '巡游者',
          '29779': '寄生幸存者',
          '29780': '浪子鱼',
          '29781': '守领鳍龙',
          '29782': '漏斗鲨',
          '29783': '坠天鱼',
          '29784': '幻光巨齿鲨',
          '29785': '幻光盘丽鱼',
          '29786': '幻光海马',
          '29787': '幻光鲈',
          '29788': '索蒂斯',
          '29789': '珊瑚蝠鲼',
          '29790': '石骨鱼',
          '29791': '依拉丝莫龙',
          '29994': '第二期重建用的云冠跳鱼',
          '29995': '第二期重建用的冥想鱼',
          '29996': '第二期重建用的豹鱼',
          '29997': '第二期重建用的雀鳝',
          '29998': '第二期重建用的巨骨舌鱼',
          '29999': '第二期重建用的褐飞刀',
          '30000': '第二期重建用的苦鱼',
          '30001': '第二期重建用的凯门鳄',
          '30002': '第二期重建用的破云飞鱼',
          '30003': '第二期重建用的吸血魔毯',
          '30004': '第二期重建用的妖精翼龙',
          '30005': '第二期重建用的飞蝠鲼',
          '30006': '第二期重建用的特供菱龙',
          '30007': '第二期重建用的特供哥布面具',
          '30008': '第二期重建用的特供翼手龙',
          '30009': '第二期重建用的特供天鱼',
          '30010': '第二期重建用的特供彗星鱼',
          '30011': '第二期重建用的特供奇虾',
          '30012': '第二期重建用的特供喙嘴龙',
          '30013': '第二期重建用的特供龙魂',
          '30432': '散罪鱼',
          '30433': '食人鳄',
          '30434': '哲罗鲑',
          '30435': '阔面鱼',
          '30436': '黄金雕金匠',
          '30437': '书记官杀手',
          '30438': '头领薄饼章鱼',
          '30439': '蛋白石虾',
          '30487': '蓝蟹',
          '30488': '重盾贝',
          '30489': '钓钩鱼',
          '30490': '云草',
          '30491': '巨鲱',
          '30492': '墨贝',
          '30593': '倒挂金钟的花蕾',
          '31129': '梅花贝',
          '31134': '亚拉戈猎手',
          '31578': '第三期重建用的雷纹鱼',
          '31579': '第三期重建用的鳄龟',
          '31580': '第三期重建用的骨舌鱼',
          '31581': '第三期重建用的泥仙人',
          '31582': '第三期重建用的弹涂鱼',
          '31583': '第三期重建用的菜蛙',
          '31584': '第三期重建用的黄金鳅',
          '31585': '第三期重建用的仙女鲈',
          '31586': '第三期重建用的洞穴螯虾',
          '31587': '第三期重建用的绿灯球藻',
          '31588': '第三期重建用的徘徊鲶鱼',
          '31589': '第三期重建用的稻鱼',
          '31590': '第三期重建用的蛉蝎',
          '31591': '第三期重建用的白影',
          '31592': '第三期重建用的无齿翼龙',
          '31593': '第三期重建用的皇家披风',
          '31594': '第三期重建用的蓝色美杜莎',
          '31595': '第三期重建用的飞翼鲂',
          '31596': '第三期重建用的特供白丽鱼',
          '31597': '第三期重建用的特供飞蝠鲼',
          '31598': '第三期重建用的特供沧龙',
          '31599': '第三期重建用的特供飞沙鱼',
          '31600': '第三期重建用的特供始祖鸟',
          '31601': '第三期重建用的特供飞龙',
          '31602': '第三期重建用的特供云鲨',
          '31603': '第三期重建用的特供旋齿鲨',
          '31770': '点火鱼',
          '31771': '褪色球球',
          '32049': '月光虹鳉',
          '32050': '元首的军扇',
          '32051': '战盾剑齿龙鳖',
          '32052': '深泳的古书',
          '32053': '珍珠皮皮拉鱼',
          '32054': '鳍人之敌',
          '32055': '龟甲蟹',
          '32056': '艾德薇雅的戒指',
          '32057': '金属箱',
          '32058': '古菩鳐',
          '32059': '海瓦魔蛾',
          '32060': '眼镜王蛇鱼',
          '32061': '真麻希鲯鳅',
          '32062': '混种薰衣草印鱼',
          '32063': '幻光蝴蝶鱼',
          '32064': '谢尔达莱结晶',
          '32065': '泰坦硬甲蟹',
          '32066': '秘银箱',
          '32067': '雾须酒杯',
          '32068': '帚状奇虾',
          '32069': '火烈鳗',
          '32070': '喷射蝠鲼',
          '32071': '恶魔刺',
          '32072': '美鲶',
          '32073': '浮游翻车鱼',
          '32074': '哈弗古法',
          '32075': '沙利亚克河蟹',
          '32076': '破坏神的星尘',
          '32077': '真鲹',
          '32078': '渗血隆头鱼',
          '32079': '染血抛光蟹',
          '32080': '蓝针',
          '32081': '血红金枪鱼',
          '32082': '落水面具',
          '32083': '幻光鳗',
          '32084': '素面',
          '32085': '神谕蟹',
          '32086': '龙堡鲷鱼',
          '32087': '余韵',
          '32088': '锯齿蛤蜊',
          '32089': '幸福愿景',
          '32090': '歼灭者',
          '32091': '血玉金枪鱼',
          '32092': '八鳍腔棘鱼',
          '32093': '石英锤头鲨',
          '32094': '海洋蟾蜍',
          '32095': '暗鸦鲀',
          '32096': '罗斯利特海带',
          '32097': '鬼灯水母',
          '32098': '蜂巢鱼',
          '32099': '海神的睡床',
          '32100': '雇佣兵',
          '32101': '萨维奈鲨鱼',
          '32102': '翡翠软玉鳗',
          '32103': '幻光鱼龙',
          '32104': '银杏鱼',
          '32105': '鱼酱罐',
          '32106': '海猎豹',
          '32107': '罗斯利特贝',
          '32108': '利维幼鳗',
          '32109': '珍珠爆弹',
          '32110': '巨魔鱼',
          '32111': '潘诺普忒斯',
          '32112': '金鞋底',
          '32113': '刀颚鱼',
          '32114': '盾齿龙',
          '32882': '第四期重建用的嘎牙子',
          '32883': '第四期重建用的雕金蟹',
          '32884': '第四期重建用的斜方鱊',
          '32885': '第四期重建用的苍穹鳅',
          '32886': '第四期重建用的冰川核',
          '32887': '第四期重建用的亲吻鱼',
          '32888': '第四期重建用的斩马鱼',
          '32889': '第四期重建用的魔帆',
          '32890': '第四期重建用的星花',
          '32891': '第四期重建用的青色螃蟹',
          '32892': '第四期重建用的不忠蛇',
          '32893': '第四期重建用的欧洛浦肯',
          '32894': '第四期重建用的清澈冰战神',
          '32895': '第四期重建用的不死鱼',
          '32896': '第四期重建用的白马',
          '32897': '第四期重建用的海云水母',
          '32898': '第四期重建用的黑头巾',
          '32899': '第四期重建用的翻车鱼',
          '32900': '第四期重建用的特供汗鱼',
          '32901': '第四期重建用的特供雕塑家',
          '32902': '第四期重建用的特供小撒拉奥斯',
          '32903': '第四期重建用的特供蓝色风暴',
          '32904': '第四期重建用的特供马尔三叶虫',
          '32905': '第四期重建用的特供红波太郎',
          '32906': '第四期重建用的特供狮鹫',
          '32907': '第四期重建用的特供巨脉蜻蜓',
          '33219': '龙堡扇贝',
          '33220': '云海海带',
          '33221': '猩红蛙',
          '33222': '白蜃蛤蜊',
          '33223': '熏香鱼',
          '33239': '利斯塔克鲨',
          '33240': '自走鱼偶',
          '33241': '惊喜蛋',
          '33242': '镜中蝶',
          '33243': '隆卡的大水蛇？',
          '33244': '长吻帆蜥鱼',
          '33316': '三艺之星',
          '33317': '蟒斑盘丽鱼',
          '33318': '钢刀鱼',
          '33319': '变影鱼',
          '33320': '拿巴示锯',
          '33321': '达穆伦樱桃鲱鱼',
          '33322': '顶天眼',
          '33323': '底暗鱼',
          '33324': '金色皮皮拉鱼',
          '33325': '奸隐鱼',
          '33326': '绒毛海神虾',
          '35604': '特级以太药虱',
          '35605': '雷咏隆头鱼',
          '35606': '加雷马蛤蜊',
          '35607': '助木剌',
          '36385': '海扇蛤',
          '36386': '北洋鲱',
          '36387': '狗脸鲀',
          '36388': '钴铁光腮鱼',
          '36389': '吉他鱼',
          '36390': '螯虾',
          '36392': '眼点丽鱼',
          '36393': '大学究',
          '36394': '剑脊锯盖鱼',
          '36395': '千虑鱼',
          '36396': '涌潮大丽花',
          '36397': '子代蝴蝶鱼',
          '36398': '鲴鱼',
          '36399': '水面鳉',
          '36400': '小方砖丽鱼',
          '36402': '宽身锯盖鱼',
          '36403': '虹鳞鲮脂鲤',
          '36404': '中丽鱼',
          '36405': '绿腮鲑',
          '36407': '长嘴鱲',
          '36408': '红弓鳍鱼',
          '36409': '贪食沼虾',
          '36410': '吹箭鱼',
          '36411': '玄铁刀背鱼',
          '36412': '以太螯虾',
          '36414': '迷津罗非鱼',
          '36415': '象魔鼻鱼',
          '36417': '樱使鳟',
          '36418': '长耳太阳鱼',
          '36419': '银脂鲤',
          '36420': '萨维奈虾虎',
          '36421': '船鳎',
          '36422': '玫瑰蟹',
          '36423': '豹纹石斑鱼',
          '36425': '婚宴娟纱',
          '36426': '暗影沙丁鱼',
          '36427': '帕克夏鱼',
          '36430': '黄金尖吻鲈',
          '36431': '卡嘉雅落选者',
          '36432': '魔象蛙',
          '36434': '蓝鳃太阳鱼',
          '36435': '青铜皮皮拉鱼',
          '36436': '绿剑尾鱼',
          '36438': '饮乳鱼',
          '36439': '塔门守卫',
          '36440': '红鼓鱼',
          '36441': '矿炉飞鱼',
          '36442': '长吻脂鲤',
          '36443': '拉札巴里克鱼',
          '36444': '半月斗鱼',
          '36446': '香蕉鳗鱼',
          '36447': '小桓娑鱼',
          '36448': '花角鱼',
          '36449': '萨维奈鳄',
          '36450': '火纹虾虎',
          '36451': '汃汃呀鱼',
          '36452': '纳茹奈章鱼',
          '36453': '雄鸡鱼',
          '36454': '矛齿鲸',
          '36456': '艾布拉纳鳟',
          '36457': '小魂灵',
          '36458': '青磷核',
          '36459': '冰原狗鱼',
          '36460': '漆黑帝冠',
          '36461': '帝国琵琶鱼',
          '36462': '蓝尾鲶',
          '36463': '星蓝虹鳉',
          '36465': '月夜丽鱼',
          '36466': '泪眼',
          '36467': '复制巨骨舌鱼',
          '36468': '魇鱼',
          '36470': '紫鱼',
          '36471': '不完整菌类987',
          '36472': '月面死亡蠕虫',
          '36473': '灵岩之剑',
          '36475': '月壤龟',
          '36476': '岛屿跳鱼',
          '36477': '登虹鱼',
          '36478': '白化鳅',
          '36479': '金光闪闪',
          '36480': '犬梭鲃',
          '36481': '皮颏鱵',
          '36484': '花冠鮨',
          '36485': '巨脂鲤',
          '36487': '超弦',
          '36488': '吞星鱼',
          '36489': '真空虾',
          '36491': '宇宙噪声',
          '36492': '玻璃鱼',
          '36494': '佛恩·米克',
          '36495': '龙鳞鱼',
          '36496': '伊普皮亚拉',
          '36497': '噬卵者',
          '36499': '镜鱼',
          '36501': '陨星尾',
          '36502': '阿俄伊德',
          '36503': '原型肉身',
          '36505': '洄游星',
          '36506': '虫洞蠕虫',
          '36507': '不明飞行物II',
          '36508': '三叉神海兽',
          '36509': '贤者癸辛',
          '36510': '二十四足文明人',
          '36511': '恐惊威',
          '36512': '梅德龙星人',
          '36513': '胡萝卜怪兽',
          '36514': '阿耳戈航员',
          '36515': '碧鱼莲',
          '36516': '宇宙象',
          '36517': '阿勒刻托',
          '36518': '事件穹界的回归者',
          '36519': '额外维度实体-9318',
          '36520': '未受生魂',
          '36521': '法拉伊那',
          '36660': '种子蛙',
          '36662': '圣洁绒球',
          '36663': '灰白珊瑚',
          '36679': '电吉他鱼',
          '36680': '巨身锯盖鱼',
          '36681': '捂耳太阳鱼',
          '36682': '河马蛙',
          '36683': '雾凇狗鱼',
          '36684': '佛恩·阿穆',
          '36685': '骇惊威',
          '36686': '萨维奈卡拉墨鱼',
          '37697': '摩耶灵龟',
          '37845': '巨剑锯盖鱼',
          '37846': '潜底弓鳍鱼',
          '37847': '郁金香蟹',
          '37848': '巨吻脂鲤',
          '37849': '暗影帝冠',
          '37850': '仿制巨骨舌鱼',
          '37851': '破军尾',
          '37852': '阿耳戈雄英',
          '37853': '水中辉星',
          '38792': '白金海马',
          '38793': '击木灯塔守卫',
          '38798': '镜中影',
          '38799': '亮片巨骨舌鱼',
          '38810': '鳍人海带',
          '38812': '尊紫鳕',
          '38814': '虹花贝',
          '38830': '万虑鱼',
          '38831': '苔绿腮鲑',
          '38832': '雷云隆头鱼',
          '38833': '棕香蕉鳗鱼',
          '38834': '冰月壤龟',
          '38835': '宇宙雾霾',
          '38836': '大丽花冠鮨',
          '38935': '近东虾',
          '39240': '叶草鱼',
          '39879': '黑玛瑙刀背鱼',
          '39880': '塔门监兵',
          '39881': '首领矛齿鲸',
          '39882': '噬炎者',
          '39883': '金光皮颏鱵',
          '39912': '战女神之圣盾',
          '40521': '粉红虾',
          '40522': '妖歌贻贝',
          '40523': '箭头乌贼',
          '40524': '深影沙丁鱼',
          '40525': '妖歌鲻鱼',
          '40526': '海妖鲀',
          '40527': '诗人的笛子',
          '40528': '海中象魔',
          '40529': '幻光腔棘鱼',
          '40530': '幽暗鲨',
          '40531': '人鱼之鳞',
          '40532': '宽头乌贼',
          '40533': '鲜艳粉红虾',
          '40534': '潜底腔棘鱼',
          '40535': '塞壬的叹息',
          '40536': '黑色旋齿鲨',
          '40537': '伪装章鱼',
          '40538': '翠玉虾',
          '40539': '妮美雅的纺车',
          '40540': '塔尼瓦',
          '40541': '黄金鲱',
          '40542': '漩涡螺',
          '40543': '斑纹虾',
          '40544': '枪乌贼',
          '40545': '提灯水母',
          '40546': '斑纹龙',
          '40547': '扬旗虾虎',
          '40548': '鼠鲨',
          '40549': '幻海求仙',
          '40550': '水引鱼',
          '40551': '小判鯙',
          '40552': '宝彩虾',
          '40553': '毒平鲹',
          '40554': '剑乌贼',
          '40555': '装甲鱼',
          '40556': '韦驼天飞鱼',
          '40557': '龙卷螺',
          '40558': '捷疾鬼',
          '40559': '犁头鳐',
          '40560': '琉璃龙',
          '40561': '深红巨藻',
          '40562': '暗礁乌贼',
          '40563': '松皮鲽鱼',
          '40564': '羽衣鳝',
          '40565': '紫水虾虎',
          '40566': '三番叟',
          '40567': '马龙虾',
          '40568': '苍玉仁王',
          '40569': '幻海大蛇',
          '40570': '天之虎',
          '40571': '芭蕉乌贼',
          '40572': '弓马龙虾',
          '40573': '黑齿海参',
          '40574': '仙贝章鱼',
          '40575': '食蛸鲨',
          '40576': '龟甲团子鱼',
          '40577': '黄菖蒲',
          '40578': '红玉仁王',
          '40579': '巨型真鱿',
          '40580': '狱之蟹',
          '40581': '平铲鲫鱼',
          '40582': '加雷马蓝鳃太阳鱼',
          '40583': '延夏鳖',
          '40584': '公主鲑',
          '40585': '墨鳞鱼',
          '40586': '无二虾',
          '40587': '锦鲤',
          '40588': '延夏蝶鲟',
          '40589': '幻海骨舌鱼',
          '40590': '茂鲨',
          '40591': '玄水虾',
          '40592': '夜刀神',
          '40593': '苍鹭鳗',
          '40594': '乌贝',
          '40595': '无二虾虎',
          '40596': '彩虹鳟',
          '40597': '返祖鲶鱼精',
          '40598': '无二鳄',
          '40599': '银鳞五色',
          '40600': '梅泉宝龟'
        },
      },
      'placefish': {
        '28': [4776, 4869, 4870, 4871, 4872, 4874, 4876, 4885, 7685],
        '29': [4776, 4869, 4870, 4871, 4872, 4874, 4876, 4885, 7707],
        '59': [4939, 4942, 4950, 4975, 4978, 7935],
        '82': [4942, 4973, 4974, 4975, 4982, 4996, 5008, 5028, 8774, 8775],
        '86': [4954, 4974, 4976, 4984, 4990, 4994, 4996, 5029, 7947],
        '101': [4942, 4958, 4968, 4973, 4974, 4975, 7920],
        '104': [4939, 4942, 4950, 4958, 4964, 4976, 4979, 7934],
        '112': [4929, 4941, 4944, 4947, 4951, 4954, 4959, 7907],
        '126': [4929, 4962, 4972, 4974, 4980, 5023, 7936],
        '155': [4927, 4929, 4932, 4936, 4941, 4945, 4952, 7694],
        '168': [4948, 4965, 4974, 4981, 4987, 4990, 4991, 4999, 5001, 7939],
        '174': [4941, 4943, 4953, 4954, 4955, 4957, 4959, 4995, 5015, 7905],
        '182': [4925, 4926, 4928, 4930, 4946, 7679],
        '192': [4928, 4931, 4941, 4946, 4948, 4952, 4956, 7682],
        '193': [4926, 4928, 4930, 4931, 4934, 4936, 4946, 7709],
        '197': [4925, 4926, 4928, 4930, 4931, 4934, 4936, 7681],
        '202': [4929, 4938, 4944, 5544, 7902],
        '206': [4883, 4886, 4891, 4895, 4896, 4898, 4901, 4903, 4913, 7915],
        '211': [4933, 4945, 4974, 4983, 4987, 4998, 7925],
        '214': [4974, 4978, 4979, 4987, 4993, 5001, 5011, 5031, 8752],
        '218': [4870, 4874, 4877, 4878, 4879, 4881, 4885, 4916, 5460, 7687],
        '220': [4874, 4880, 4881, 4882, 4888, 4920, 5460, 7693],
        '228': [4869, 4904, 4907, 4908, 4909, 4919, 4923, 5462, 5466, 7950],
        '234': [4933, 4941, 4948, 4949, 4953, 4955, 4957, 4959, 4992, 7904],
        '245': [4925, 4939, 4943, 4944, 4948, 4950, 4952, 7706],
        '246': [4869, 4899, 4900, 4903, 4904, 4909, 4910, 4924, 5466, 8764],
        '249': [4929, 4931, 4935, 4936, 4959, 7703],
        '253': [4967, 4973, 4987, 4989, 4990, 4993, 4996, 5017, 6191, 7942],
        '264': [4929, 4931, 4934, 4935, 4936, 4948, 4952, 7714],
        '266': [4870, 4878, 4879, 4881, 4893, 4895, 4899, 4911, 7910],
        '272': [4870, 4884, 4886, 4887, 4889, 4911, 4983, 7906],
        '274': [4870, 4874, 4878, 4879, 4881, 4885, 7711],
        '275': [4938, 4970, 4978, 5002, 5005, 8765],
        '276': [4970, 4978, 4989, 5003, 5004, 5006, 5012, 8766],
        '297': [4929, 4936, 4939, 4944, 4950, 4959, 4960, 7689],
        '308': [4955, 4958, 4959, 4967, 4974, 4985, 7918],
        '314': [4948, 4955, 4959, 4965, 4966, 7911],
        '323': [4948, 4955, 4965, 4966, 4969, 4979, 4984, 7929],
        '330': [4970, 4978, 4989, 5003, 5004, 5006, 5011, 5019, 8767],
        '337': [4872, 4874, 4877, 4878, 4879, 4881, 4882, 4885, 7712],
        '338': [4873, 4878, 4880, 4884, 4886, 4890, 4892, 6185, 7903],
        '339': [4870, 4875, 4877, 4878, 4879, 4881, 4914, 7691],
        '340': [4931, 4933, 4943, 4944, 4947, 4948, 4952, 4970, 7697],
        '341': [4873, 4875, 4877, 4878, 4879, 4881, 4915, 7690],
        '363': [4898, 4900, 4906, 4910, 5462, 5466, 7948],
        '365': [4869, 4870, 4904, 4911, 4922, 5462, 5466, 8757],
        '389': [5038, 5039, 5040, 5041, 5042, 5044, 5046, 8771, 8772],
        '392': [4937, 4981, 4986, 4995, 4997, 5010, 5544, 8769],
        '398': [4927, 4937, 4938, 4984, 5014, 5544, 7933],
        '404': [4940, 4976, 4986, 5013, 8770],
        '410': [4978, 4989, 5002, 5003, 5006, 5011, 5027, 5544, 7951],
        '413': [4929, 4942, 4978, 5002, 5003, 5004, 5006, 5021, 8761],
        '414': [4978, 4981, 4989, 4993, 5002, 5006, 5011, 5024, 5544, 8759],
        '417': [4950, 4973, 4978, 4981, 4993, 5005, 5006, 5544, 8776],
        '425': [4874, 4885, 4886, 4891, 4895, 4896, 4898, 4906, 7917],
        '426': [4932, 4942, 4945, 4951, 4963, 4968, 4973, 4975, 7923],
        '427': [4935, 4943, 4948, 4952, 4959, 4965, 4978, 5011, 7919],
        '951': [4925, 4927, 4932, 4934, 4935, 4936, 4952, 7705],
        '952': [4929, 4932, 4934, 4935, 4936, 4947, 4951, 7700],
        '953': [4940, 4941, 4948, 4958, 4962, 4967, 4968, 4992, 7912],
        '954': [4935, 4936, 4940, 4941, 4942, 4949, 4952, 7683],
        '955': [4981, 4982, 4994, 4995, 4996, 5022, 8773],
        '956': [4940, 4941, 4942, 4943, 4945, 4952, 4958, 4982, 7908],
        '957': [4940, 4945, 4961, 4967, 4974, 4976, 4980, 4982, 7921],
        '958': [4940, 4942, 4943, 4950, 4952, 4958, 4962, 4967, 4982, 7913],
        '959': [4940, 4943, 4945, 4948, 4950, 4952, 4958, 4982, 7914],
        '960': [4942, 4950, 4959, 4961, 4964, 4967, 4973, 4978, 5000, 7922],
        '961': [4935, 4936, 4940, 4941, 4949, 4951, 7699],
        '962': [4927, 4935, 4936, 4940, 4942, 4943, 4945, 4963, 7695],
        '963': [4950, 4954, 4973, 4978, 5002, 5008, 5011, 5026, 8760],
        '964': [4905, 4925, 4932, 4934, 4936, 4947, 7713],
        '965': [4925, 4932, 4934, 4936, 4947, 7696],
        '966': [4942, 4959, 4974, 4975, 4981, 4989, 4993, 5008, 8758],
        '967': [4978, 4981, 4989, 5002, 5006, 5011, 5030, 5544, 8762, 8763],
        '968': [4927, 4936, 4940, 4976, 4981, 4986, 5009, 7932],
        '969': [4927, 4937, 4981, 4986, 4988, 4997, 5009, 5025, 7945],
        '970': [4927, 4937, 4940, 4976, 4986, 5009, 7944],
        '971': [4937, 4997, 5009, 5544, 7946],
        '972': [5038, 5039, 5040, 5041, 5042, 7949],
        '973': [4869, 4870, 4871, 4872, 4873, 4874, 4876, 4883, 4885, 7678],
        '974': [4869, 4871, 4872, 4874, 4875, 4885, 4888, 4903, 5460, 7686],
        '975': [4925, 4926, 4928, 4930, 4934, 4946, 7688],
        '976': [4776, 4869, 4872, 4873, 4875, 4877, 4878, 4885, 7680],
        '977': [4869, 4872, 4874, 4877, 4878, 4879, 4885, 4897, 7710],
        '978': [4869, 4876, 4885, 4890, 4891, 4898, 4903, 5461, 7909, 10123],
        '979': [4874, 4888, 4892, 4894, 4896, 4900, 4902, 4917, 5462, 7924],
        '980': [4948, 4965, 4974, 4975, 4987, 4990, 4999, 5001, 7938],
        '981': [4948, 4950, 4965, 4970, 4978, 5003, 5012, 7940],
        '982': [4869, 4879, 4881, 4884, 4885, 4904, 4912, 7684],
        '983': [4887, 4893, 4894, 4900, 4901, 4902, 5461, 7926],
        '984': [4869, 4872, 4898, 4901, 4903, 4904, 4907, 4921, 5462, 7941],
        '985': [4898, 4906, 4908, 4909, 4910, 4918, 5462, 5466, 8755, 8756],
        '987': [4953, 4954, 4957, 4973, 4974, 4978, 4981, 4988, 5020, 7927],
        '988': [4933, 4941, 4943, 4953, 4954, 7916],
        '989': [4955, 4981, 4988, 4989, 4991, 5016, 7937],
        '990': [4929, 4931, 4935, 4936, 4959, 7692],
        '991': [4929, 4931, 4935, 4936, 4959, 4960, 7698],
        '992': [4931, 4939, 4943, 4944, 4950, 4971, 7704],
        '993': [4931, 4939, 4943, 4944, 4950, 4971, 7702],
        '995': [4947, 4950, 4966, 4979, 4987, 4989, 5007, 7928],
        '996': [4977, 5032, 5034, 5035, 5036, 5037, 5043, 7931, 8768],
        '997': [5032, 5033, 5034, 5035, 5036, 5037, 5045, 7930],
        '998': [4929, 4978, 4981, 4984, 4989, 4993, 4995, 5005, 5018, 7943],
        '999': [4925, 4932, 4934, 4936, 4947, 7701],
        '1000': [4905, 4925, 4932, 4934, 4936, 4947, 7708],
        '1001': [4871, 4874, 4886, 4888, 4896, 4902, 4917, 4920, 5462, 8753],
        '1002': [4869, 4886, 4897, 4904, 4911, 4913, 4914, 4919, 4923, 8754],
        '1003': [4937, 12713, 12715, 12726, 12796, 13728, 16746],
        '1004': [4937, 12715, 12718, 12727, 12837, 14216, 17563, 17577, 17592],
        '1005': [4937, 12713, 12715, 12719, 12720, 12737, 12738, 14219, 15439, 17578],
        '1006': [12715, 12719, 12720, 12763, 12765, 14217, 16756, 23073],
        '1007': [12754, 12755, 12759, 12772, 12826, 16751],
        '1008': [12747, 12756, 12757, 12780, 12818, 12830, 14220, 17562, 17585, 17590],
        '1009': [12730, 12747, 12757, 12780, 12790, 12831, 12836, 13732, 16754, 30492],
        '1010': [12753, 12760, 12770, 12794, 12795, 12805, 12821, 16742],
        '1011': [12773, 12776, 12788, 12801, 12812, 16752],
        '1012': [4953, 4954, 4957, 4973, 4974, 4978, 4981, 4988, 5020, 7927],
        '1013': [4869, 4886, 4897, 4904, 4913, 4914, 4919, 4923, 20143, 20524],
        '1014': [20049, 20058, 20064, 20066, 20785, 24207, 24990],
        '1015': [20058, 20081, 20082, 20083, 20136, 20142, 23058, 24559],
        '1016': [20082, 20084, 20085, 20086, 21174, 23059, 23072],
        '1017': [20033, 20057, 20087, 20088, 20788, 24208],
        '1018': [20047, 20089, 20090, 20091, 22389, 24209, 33221],
        '1019': [20066, 20067, 20068, 23060, 23071, 24991],
        '1020': [20045, 20050, 20056, 20066, 20069, 20070, 23061],
        '1021': [20043, 20066, 20071, 20072, 20789, 24210],
        '1022': [20050, 20073, 20074, 20075, 24212],
        '1023': [20066, 20069, 20073, 20076, 20077, 22391, 24211],
        '1025': [20019, 20056, 20078, 20079, 20141, 21175, 24881],
        '1026': [20025, 20035, 20039, 20040, 20041, 22394, 23062, 24992],
        '1027': [20037, 20092, 20093, 20786, 24214, 24993],
        '1028': [20018, 20092, 20094, 20109, 20112, 21176, 23054, 24560, 24882],
        '1029': [20034, 20092, 20094, 20099, 20110, 20112, 22393, 24883, 30491],
        '1030': [20048, 20092, 20095, 20096, 20097, 20098, 23065, 24558],
        '1031': [20022, 20100, 20101, 20102, 20112, 24215, 30489],
        '1032': [20032, 20093, 20106, 20107, 20108, 22390, 23074, 24884],
        '1033': [20038, 20103, 20104, 20105, 20112, 23066],
        '1034': [20111, 20123, 20787, 24885],
        '1035': [20046, 20111, 20123, 24886],
        '1036': [20137, 24887],
        '1037': [20028, 20114, 20115, 20116, 20123, 23067],
        '1038': [20027, 20117, 20119, 20123, 24888, 33222],
        '1039': [20020, 20118, 20119, 20120, 20123, 24561, 24889],
        '1040': [20021, 20119, 20120, 20123, 24216],
        '1041': [20051, 20119, 20121, 20122, 20123, 23068, 31129],
        '1042': [20052, 20053, 21177, 22397, 23055, 23056, 24203, 24204, 24994],
        '1043': [20111, 20123, 20124, 24890],
        '1044': [20080, 20125, 24891, 24995],
        '1045': [20024, 20126, 20127, 20130, 20140, 21178, 24217],
        '1046': [20036, 20126, 20127, 20128, 20132, 24892],
        '1047': [20044, 20127, 20129, 20133, 20134, 22398, 23069],
        '1048': [20031, 20126, 20128, 20132, 20135, 23070, 33223],
        '1049': [20023, 20127, 20129, 20131, 20133, 24218],
        '2004': [12721, 12722, 12729, 12733, 12750, 12767, 15630],
        '2008': [12745, 12754, 12772, 12787, 12820, 15631],
        '2013': [5544, 12731, 12743, 12768, 15633],
        '2014': [12753, 12760, 12771, 12793, 12795, 12797, 13731, 15634],
        '2017': [12758, 16749, 36662],
        '2019': [12721, 12722, 12740, 12741, 12769, 13729, 15629, 17566],
        '2020': [12721, 12722, 12729, 12733, 12741, 12761, 16747],
        '2029': [12722, 12741, 12764, 12802, 12828, 14211, 17582],
        '2030': [12754, 12759, 12787, 12800, 12832, 14215, 17584, 17588],
        '2035': [12722, 12730, 12752, 12757, 12781, 12818, 14212, 16748, 33219],
        '2039': [12756, 12757, 12780, 12783, 12790, 12804, 12819, 15632, 29673],
        '2048': [12753, 12760, 12784, 12789, 12805, 12813, 12835, 14214, 17587, 17593],
        '2064': [12745, 12754, 12755, 12772, 12786, 12787, 17583, 30488],
        '2079': [12731, 12742, 12782, 12792, 17565, 17586, 23075],
        '2102': [12723, 12732, 12734, 12736, 12744, 14213, 16750],
        '2103': [12728, 12730, 12731, 12739, 12757, 12802, 15635, 33220],
        '2105': [12734, 12735, 12746, 12753, 12785, 12798, 12822, 15636, 30490],
        '2109': [12773, 12775, 12776, 12812, 15637, 31134],
        '2112': [12777, 12791, 12803, 12811, 12818, 15638, 31771],
        '2113': [12753, 12785, 12805, 12806, 12808, 12813, 12825, 12833, 17581],
        '2114': [12776, 12778, 12815, 12816, 12827, 13727, 16744, 17589],
        '2120': [12730, 12731, 12749, 12757, 12818, 12829, 17564, 17579],
        '2129': [12723, 12753, 12810, 12814, 12834, 13730, 16743, 17591],
        '2173': [12751, 12774, 12777, 12779, 12791, 16753, 31770],
        '2177': [12776, 12778, 12807, 12815, 14218, 17580],
        '2201': [4937, 12718, 12762, 15626],
        '2211': [4937, 12715, 12719, 12720, 12748, 12817, 15628, 24557],
        '2217': [12714, 12716, 12724, 12766, 12799, 16745],
        '2227': [12725, 12809, 12823, 12824, 15627, 29678],
        '2257': [12728, 12731],
        '2258': [12768, 12828, 29994, 29995, 30000, 30001, 31586, 31587, 31588, 31589, 32890, 32891, 32892, 32893],
        '2259': [12728, 12730, 12731, 12818, 29994, 29995, 29996, 29997, 31578, 31579, 31580, 31581, 32882, 32883, 32884, 32885],
        '2260': [12729],
        '2261': [12731, 29994, 29995, 29998, 29999, 31582, 31583, 31584, 31585, 32886, 32887, 32888, 32889],
        '2262': [12732, 12734, 12736, 12744, 30002, 30003, 30004, 30006, 30010, 31590, 31591, 31592, 31596, 31600, 32894, 32895, 32896, 32900, 32904],
        '2263': [12732, 12735, 12736, 12744, 30002, 30003, 30005, 30007, 30011, 31590, 31591, 31593, 31597, 31602, 32894, 32895, 32897, 32901, 32905],
        '2264': [12814, 12834, 30002, 30003, 30004, 30008, 30012, 31590, 31591, 31594, 31598, 31601, 32894, 32895, 32898, 32902, 32906],
        '2500': [20030, 20127, 20129, 20133, 20138, 24893],
        '2501': [20054, 20092, 20110, 20112, 20113, 22396, 23063],
        '2502': [20042, 20055, 20056, 20057, 20058, 23057],
        '2503': [20026, 20057, 20063, 20064, 20065, 22392, 24206],
        '2504': [20029, 20056, 20059, 20060, 20061, 20062, 24205],
        '2505': [20092, 20110, 20112, 20113, 23064],
        '2506': [20036, 20123, 20125, 20137, 22395, 24213],
        '2507': [20119, 20123],
        '3289': [27411, 27412, 27413, 27414, 27417, 33316],
        '3290': [27411, 27415, 27416, 27417, 30432],
        '3291': [27410, 27411, 27417, 27418, 28065],
        '3292': [26746, 27425, 27426, 27427, 27431, 30433],
        '3293': [27425, 27426, 27427, 27432, 27433, 32049],
        '3294': [27425, 27428, 27429, 27430, 27434, 28067, 28189, 38792],
        '3295': [27425, 27429, 27430, 27435, 33317],
        '3296': [27425, 27428, 27436, 27437, 28925, 33239, 39810],
        '3297': [27438, 27439, 27440, 27441, 27442, 30434],
        '3298': [27438, 27440, 27443, 28190, 32050, 39815],
        '3299': [27438, 27439, 27440, 27444, 28926],
        '3300': [27438, 27439, 27445, 28068],
        '3301': [26747, 27446, 27448, 27449, 27450, 27451, 28193, 30487, 33318],
        '3302': [27447, 27448, 27449, 27452, 27453, 33240, 33319, 38793],
        '3303': [27446, 27447, 27449, 27454, 27455, 27456, 27457, 32051, 38810],
        '3304': [27419, 27420, 27421, 27422, 27423, 27424, 28066],
        '3305': [27458, 27459, 27460, 27461, 27462, 28069, 33241],
        '3306': [27458, 27459, 27460, 27463, 27464, 28192, 33320, 39809],
        '3307': [26749, 27459, 27461, 27465, 27466, 27467, 28927],
        '3308': [27470, 27471, 27474, 27475, 28191, 30435, 38798],
        '3309': [27469, 27470, 27476, 27477, 27479, 28070, 30593, 33242],
        '3310': [27469, 27470, 27472, 27478, 27479, 32052],
        '3311': [27468, 27470, 27472, 27479, 28928],
        '3312': [26748, 27470, 27473, 27479, 33321],
        '3313': [27470, 27472, 27479, 27480, 30436, 41300, 41301],
        '3314': [27469, 27470, 27471, 27481, 33322],
        '3315': [27482, 27484, 27486, 27490, 27491, 28071, 33243, 38799],
        '3316': [27482, 27485, 27486, 27487, 27492, 32053],
        '3317': [27482, 27483, 27486, 27488, 27489, 28929],
        '3318': [27482, 27484, 27486, 27488, 27489, 27493, 30437],
        '3319': [27482, 27485, 27487, 27494, 33323],
        '3320': [27495, 27497, 27499, 27501, 27502, 28930],
        '3321': [27495, 27497, 27499, 27503, 27504, 32054],
        '3322': [27496, 27497, 27499, 27500, 27505, 28719, 33244, 33325],
        '3323': [27496, 27497, 27506, 27507, 27508, 33326, 39816],
        '3324': [27496, 27497, 27500, 27509, 27510, 30438],
        '3325': [27496, 27497, 27498, 27511, 27512, 28072, 38812],
        '3326': [27496, 27497, 27498, 27513, 27514, 27515, 30439, 38814],
        '3448': [28937, 28938, 28939, 28942, 29719, 29721, 29723, 29734, 29744, 29784],
        '3449': [29749, 29750, 29751, 29752, 29753, 29754, 29756, 29766, 29782, 29788],
        '3450': [28941, 29722, 29724, 29725, 29726, 29727, 29739, 29740, 29745, 29785],
        '3451': [29755, 29757, 29758, 29759, 29760, 29761, 29763, 29765, 29779, 29789],
        '3452': [28940, 29718, 29720, 29736, 29737, 29738, 29741, 29743, 29747, 29786],
        '3453': [29748, 29764, 29771, 29773, 29776, 29777, 29778, 29781, 29783, 29791],
        '3454': [29728, 29729, 29730, 29731, 29732, 29733, 29735, 29742, 29746, 29787],
        '3455': [29762, 29767, 29768, 29769, 29770, 29772, 29774, 29775, 29780, 29790],
        '3458': [27482, 27486, 33324, 41298, 41299, 41302],
        '3489': [30002, 30003, 30005, 30009, 30013, 31590, 31591, 31595, 31599, 31603, 32894, 32895, 32899, 32903, 32907],
        '3532': [30006, 30007, 30010, 30011, 31590, 31591, 31596, 31597, 31600, 31602, 32894, 32895],
        '3533': [30008, 30009, 30012, 30013, 31590, 31591, 31598, 31599, 31601, 31603, 32894, 32895],
        '3621': [32055, 32056, 32057, 32058, 32059, 32060, 32061, 32062, 32063, 32064],
        '3622': [32065, 32066, 32067, 32068, 32069, 32070, 32071, 32072, 32073, 32074],
        '3623': [32075, 32076, 32077, 32078, 32079, 32080, 32081, 32082, 32083, 32084],
        '3624': [32085, 32086, 32087, 32088, 32089, 32090, 32091, 32092, 32093, 32094],
        '3625': [32095, 32096, 32097, 32098, 32099, 32100, 32101, 32102, 32103, 32104],
        '3626': [32105, 32106, 32107, 32108, 32109, 32110, 32111, 32112, 32113, 32114],
        '4050': [36385, 36386, 36387, 36388, 36389, 36679],
        '4051': [36390, 36392, 36393, 36394, 37845],
        '4052': [36390, 36395, 36396, 38830],
        '4053': [35604, 36397, 36399, 36400, 36402, 36680],
        '4054': [36397, 36398, 36403, 36404, 36405, 38831],
        '4055': [36397, 36398, 36407, 36408, 37846],
        '4056': [36397, 36398, 36409, 36410, 36411, 39879, 39912],
        '4057': [36397, 36398, 36412, 36414, 41401],
        '4058': [36415, 36417, 36418, 36419, 36681],
        '4059': [36420, 36421, 36422, 36423, 37847],
        '4060': [36420, 36421, 36425, 36426, 36427, 36663, 38935, 41402],
        '4061': [35605, 36420, 36421, 36430, 38832, 41061],
        '4062': [36431, 36432, 36434, 36435, 36682],
        '4063': [36436, 36438, 36439, 36440, 39880],
        '4064': [36436, 36438, 36441, 36442, 36660, 37848],
        '4065': [36436, 36443, 36444, 36446, 38833],
        '4066': [36436, 36443, 36447, 36448, 36449, 37697, 41403],
        '4067': [36450, 36451, 36452, 36453, 36454, 36686, 39881],
        '4068': [35606, 36456, 36457, 36458, 36459, 36683],
        '4069': [35606, 36456, 36460, 36461, 36462, 37849, 41059],
        '4070': [36463, 36465, 36466, 36467, 37850, 41058],
        '4071': [36468, 36470, 36471, 36472, 41404],
        '4072': [36468, 36470, 36473, 36475, 38834],
        '4073': [36476, 36477, 36478, 36479, 36480, 37853],
        '4074': [36476, 36477, 36481, 36485, 39240, 39883],
        '4075': [35607, 36476, 36477, 36484, 38836],
        '4076': [36487, 36488, 36489, 36491, 38835],
        '4077': [36487, 36488, 36492, 36494, 36684],
        '4078': [36487, 36488, 36495, 36496, 36497, 39882, 41419],
        '4079': [36499, 36501, 36502, 36503, 37851],
        '4080': [36499, 36503, 36505, 41405],
        '4081': [36506, 36507, 36509, 36510, 36511, 36512, 36513, 36685],
        '4082': [36506, 36507, 36508, 36514, 36515, 36516, 36517, 37852],
        '4083': [36506, 36507, 36508, 36518, 36519, 36520, 36521, 41406],
        '4191': [36501, 36503],
        '4192': [36499, 36503],
        '4193': [36501, 36503],
        '4194': [36503, 36505],
        '4195': [36499, 36503, 36505],
        '4367': [40521, 40522, 40523, 40524, 40525, 40526, 40527, 40528, 40529, 40530],
        '4368': [40531, 40532, 40533, 40534, 40535, 40536, 40537, 40538, 40539, 40540],
        '4369': [40541, 40542, 40543, 40544, 40545, 40546, 40547, 40548, 40549, 40550],
        '4370': [40551, 40552, 40553, 40554, 40555, 40556, 40557, 40558, 40559, 40560],
        '4371': [40561, 40562, 40563, 40564, 40565, 40566, 40567, 40568, 40569, 40570],
        '4372': [40571, 40572, 40573, 40574, 40575, 40576, 40577, 40578, 40579, 40580],
        '4373': [40581, 40582, 40583, 40584, 40585, 40586, 40587, 40588, 40589, 40590],
        '4374': [40591, 40592, 40593, 40594, 40595, 40596, 40597, 40598, 40599, 40600]
      },
      'places': {
        'cn': {
          '28': '利姆萨·罗敏萨上层甲板',
          '29': '利姆萨·罗敏萨下层甲板',
          '59': '静语庄园',
          '82': '兀尔德恩惠地',
          '86': '荣耀溪',
          '101': '常影区',
          '104': '萌芽池',
          '112': '十二神大圣堂',
          '126': '蔓根沼',
          '155': '花蜜栈桥',
          '168': '接雨草树林',
          '174': '橡树原',
          '182': '无赖川',
          '192': '轻声谷',
          '193': '尼姆河',
          '197': '遗孀泪',
          '202': '盲铁坑道',
          '206': '太阳海岸',
          '211': '隐秘瀑布',
          '214': '红螳螂瀑布',
          '218': '雨燕塔殖民地',
          '220': '酿酒师灯塔',
          '228': '船舶墓场',
          '234': '愚者瀑布',
          '245': '足迹谷',
          '246': '西风岬',
          '249': '执掌峡谷',
          '253': '火墙',
          '264': '丰饶神井',
          '266': '白银集市',
          '272': '月牙湾',
          '274': '黄昏湾',
          '275': '月滴洞',
          '276': '帕拉塔安息地',
          '297': '邪嗣',
          '308': '宇格拉姆河',
          '314': '火蜥蜴河',
          '323': '遗忘绿洲',
          '330': '青磷泉',
          '337': '莫拉比造船厂',
          '338': '砂盐滩',
          '339': '守炬埠头',
          '340': '空心穴',
          '341': '奥修昂火炬',
          '363': '萨普沙产卵地',
          '365': '隐秘港',
          '389': '落魔崖',
          '392': '圣人泪',
          '398': '圣人旅道',
          '404': '披雪大冰壁',
          '410': '银泪湖北岸',
          '413': '纠缠沼泽林',
          '414': '早霜顶',
          '417': '歌咏裂谷',
          '425': '海雾村',
          '426': '薰衣草苗圃',
          '427': '高脚孤丘',
          '951': '叶脉水系',
          '952': '镜池',
          '953': '落翠底',
          '954': '涟漪小川',
          '955': '妖精领溪谷',
          '956': '哈希瓦河上游',
          '957': '哈希瓦河中游',
          '958': '哈希瓦河下游',
          '959': '哈希瓦河东支流',
          '960': '哥布林血流',
          '961': '嘈杂川',
          '962': '秋瓜湖畔',
          '963': '塔赫托特尔湖',
          '964': '翡翠湖滨',
          '965': '红茶川水系下游',
          '966': '纠缠沼泽林源流',
          '967': '歌咏裂谷北部',
          '968': '库尔札斯河',
          '969': '剑峰山麓',
          '970': '巨龙首营地水库',
          '971': '调查队冰洞',
          '972': '伊修加德大云海',
          '973': '和风流地沿岸',
          '974': '盛夏滩沿岸',
          '975': '西永恒川',
          '976': '莫拉比湾西岸',
          '977': '雪松原沿岸地',
          '978': '南鲜血滨',
          '979': '北鲜血滨',
          '980': '东永恒川',
          '981': '接雨草沼泽地',
          '982': '骷髅谷沿岸地',
          '983': '二分石沿岸地',
          '984': '幻影群岛北岸',
          '985': '幻影群岛南岸',
          '987': '石绿湖东北岸',
          '988': '石绿湖浅滩',
          '989': '登天路溪谷',
          '990': '污流上游',
          '991': '污流下游',
          '992': '枯骨北泉',
          '993': '枯骨南泉',
          '995': '不悔战泉',
          '996': '撒沟厉沙海',
          '997': '撒沟厉沙丘',
          '998': '蓝雾涌泉',
          '999': '红茶川水系上游',
          '1000': '低语河谷',
          '1001': '罗塔诺海（船首）',
          '1002': '罗塔诺海（船尾）',
          '1003': '库尔札斯不冻池',
          '1004': '清澈池',
          '1005': '灾祸池南',
          '1006': '灾祸池西',
          '1007': '彻悟岩窟西',
          '1008': '沙利亚克河上流',
          '1009': '沙利亚克河中流',
          '1010': '索姆阿尔云帽',
          '1011': '废液池',
          '1012': '石绿湖西北岸',
          '1013': '永夏岛北',
          '1014': '提蒙河',
          '1015': '昏暗林',
          '1016': '流星尾',
          '1017': '威罗迪纳河',
          '1018': '幻河',
          '1019': '夫妇池',
          '1020': '慢水涤',
          '1021': '石楠瀑布',
          '1022': '判官神像',
          '1023': '猛牛浴池',
          '1025': '赎罪之腕',
          '1026': '盐湖',
          '1027': '红玉炮台近海',
          '1028': '狱之盖近海',
          '1029': '龟甲岛近海',
          '1030': '冲之岩近海',
          '1031': '自凝岛近海',
          '1032': '渔村沿岸',
          '1033': '绝鬼岛近海',
          '1034': '苍鹭池',
          '1035': '苍鹭河',
          '1036': '茨菰村水塘',
          '1037': '多玛城前',
          '1038': '城下码头',
          '1039': '无二江东',
          '1040': '无二江西',
          '1041': '梅泉乡',
          '1042': '七彩沟',
          '1043': '七彩溪谷',
          '1044': '朵塔儿水洲',
          '1045': '太阳湖',
          '1046': '涅木卡勒河',
          '1047': '塔奥卡勒河',
          '1048': '亚特卡勒河下游',
          '1049': '亚特卡勒河上游',
          '2004': '荒烟野地',
          '2008': '彻悟岩窟',
          '2013': '招恶荒岛',
          '2014': '人王遗迹',
          '2017': '绿茵岛',
          '2019': '悲叹飞泉',
          '2020': '宽慰河',
          '2029': '饵食台地',
          '2030': '光轮祭坛',
          '2035': '湍流三角地',
          '2039': '沙利亚克河',
          '2048': '惋惜之晶遗迹',
          '2064': '不洁古像',
          '2079': '西方水泉',
          '2102': '云顶',
          '2103': '沃仙曦染',
          '2105': '蓝天窗',
          '2109': '阿尔法管区',
          '2112': '德尔塔管区',
          '2113': '生态园',
          '2114': '阿济兹拉旗舰岛',
          '2120': '云水塘',
          '2129': '魔窟离岛',
          '2173': '冠毛大树',
          '2177': '超星际通信塔',
          '2201': '交汇河',
          '2211': '灰烬池',
          '2217': '灰尾瀑布',
          '2227': '龙涎',
          '2257': '云冠涌泉',
          '2258': '云冠洞穴',
          '2259': '云冠西南池',
          '2260': '云冠鱼洞',
          '2261': '云冠西北池',
          '2262': '狂风云海',
          '2263': '无风云海',
          '2264': '旋风云海',
          '2500': '哈克卡勒河',
          '2501': '防波堤',
          '2502': '幻河上游',
          '2503': '星导寺入口',
          '2504': '神拳痕',
          '2505': '白银乡',
          '2506': '白银水路',
          '2507': '多玛飞地',
          '3289': '三艺区',
          '3290': '四艺区',
          '3291': '水晶都起居室',
          '3292': '风化裂痕',
          '3293': '锈迹贮水池',
          '3294': '始源湖',
          '3295': '阴沉乡',
          '3296': '贤岛',
          '3297': '沃茨河上游',
          '3298': '白油瀑布',
          '3299': '沃茨河下游',
          '3300': '刺舌滴',
          '3301': '珂露西亚岛西海岸',
          '3302': '观海湾',
          '3303': '珂露西亚岛东海岸',
          '3304': '废船街',
          '3305': '沙河',
          '3306': '拿巴示断绝',
          '3307': '琥珀丘',
          '3308': '手镜湖',
          '3309': '身镜湖',
          '3310': '傲慢的年长溪流',
          '3311': '嫉妒的年少溪流',
          '3312': '宠坏的年幼溪流',
          '3313': '圣法斯里克天庭',
          '3314': '科拉德排水沟',
          '3315': '蛇水湖',
          '3316': '血盅',
          '3317': '洛查特尔河',
          '3318': '缪栎的乡愁南部',
          '3319': '结誓洞窟',
          '3320': '鳎沙地窖',
          '3321': '陆人墓标',
          '3322': '卡利班深海峡西北',
          '3323': '卡利班古巢西',
          '3324': '卡利班古巢东',
          '3325': '尊紫洞',
          '3326': '诺弗兰特大陆坡',
          '3448': '加拉迪翁湾外海',
          '3449': '加拉迪翁湾外海幻海流',
          '3450': '梅尔托尔海峡南',
          '3451': '梅尔托尔海峡南幻海流',
          '3452': '梅尔托尔海峡北',
          '3453': '梅尔托尔海峡北幻海流',
          '3454': '罗塔诺海海面',
          '3455': '罗塔诺海海面幻海流',
          '3458': '缪栎之泪',
          '3489': '摇风云海',
          '3532': '息风云海',
          '3533': '狂风云海',
          '3621': '谢尔达莱群岛近海',
          '3622': '谢尔达莱群岛近海幻海流',
          '3623': '绯汐海近海',
          '3624': '绯汐海近海幻海流',
          '3625': '罗斯利特湾近海',
          '3626': '罗斯利特湾近海幻海流',
          '4050': '知识神海港',
          '4051': '碧谷',
          '4052': '沉思泉',
          '4053': '一号天球口',
          '4054': '一号沟渠',
          '4055': '二号天球口',
          '4056': '二号沟渠',
          '4057': '深壕',
          '4058': '云使飞沫',
          '4059': '新港沿岸',
          '4060': '萨维奈岛近海',
          '4061': '代米尔遗烈乡沿岸',
          '4062': '巨胆石采掘场',
          '4063': '塔门',
          '4064': '乳河',
          '4065': '帕瓦纳的悔悟',
          '4066': '摩耶幻泉',
          '4067': '熏香海岸',
          '4068': '艾布拉纳不冻池',
          '4069': '洁白环濠',
          '4070': '最伟大的森林',
          '4071': '荧光池',
          '4072': '冻土裂痕',
          '4073': '逍遥水径',
          '4074': '翠牙园下层',
          '4075': '忘海',
          '4076': '沼癸辛γ',
          '4077': '沼癸辛β',
          '4078': '沼癸辛α',
          '4079': '逡巡泉',
          '4080': '异亚村落',
          '4081': '湖癸辛',
          '4082': '湖丙α',
          '4083': '湖丙β',
          '4191': '至福乐土农业区',
          '4192': '至福乐土海洋区α',
          '4193': '至福乐土海洋区β',
          '4194': '至福乐土游乐区α',
          '4195': '至福乐土游乐区β',
          '4367': '妖歌海海面',
          '4368': '妖歌海海面幻海流',
          '4369': '黄金港近海',
          '4370': '黄金港近海幻海流',
          '4371': '红玉海海面',
          '4372': '红玉海海面幻海流',
          '4373': '无二江下游',
          '4374': '无二江下游幻海流'
        },
      },
      'tackle': {
        'cn': {
          '2585': '沙蚕',
          '2586': '蛾蛹',
          '2587': '潮虫',
          '2588': '蝲蛄丸子',
          '2589': '虾虎丸子',
          '2590': '血蚯蚓',
          '2591': '沟鼠尾巴',
          '2592': '摇蚊',
          '2593': '螃蟹丸子',
          '2594': '黄油虫',
          '2595': '鲈鱼丸子',
          '2596': '单环刺螠',
          '2597': '花蝇',
          '2598': '鲱鱼丸子',
          '2599': '蜜虫',
          '2600': '沙蛭',
          '2601': '蛀虫',
          '2602': '沙壁虎',
          '2603': '火萤',
          '2604': '滚石',
          '2605': '浮游虫',
          '2606': '极地磷虾',
          '2607': '石蚕',
          '2608': '沙毛虫',
          '2609': '气球虫',
          '2610': '陆行鸟拟饵',
          '2611': '漂浮诱饵鱼',
          '2612': '黄铜勺形鱼饵',
          '2613': '小虾肉笼',
          '2614': '乌鸦拟饵',
          '2615': '白银勺形鱼饵',
          '2616': '铁板钩',
          '2617': '下沉诱饵鱼',
          '2618': '毛球拟饵',
          '2619': '重铁板钩',
          '2620': '旋转亮片',
          '2621': '磷虾肉笼',
          '2622': '秘银勺形鱼饵',
          '2623': '雉鸡拟饵',
          '2624': '漂浮诱饵蛙',
          '2625': '彩虹勺形鱼饵',
          '2626': '复合亮片',
          '2627': '羽毛拟饵',
          '2628': '弓角',
          '12704': '石蝇幼虫',
          '12705': '土蜘蛛',
          '12706': '哥布林钓钩',
          '12707': '叶片钓钩',
          '12708': '红气球虫',
          '12709': '熔岩蠕虫',
          '12710': '恶魔蠕虫',
          '12711': '残暴水蛭',
          '12712': '巨型大蚊',
          '20613': '鲑鱼籽',
          '20614': '肥蚯蚓',
          '20615': '赤虫',
          '20616': '蚕蛹',
          '20617': '活虾',
          '20618': '蔓菁拟饵',
          '20619': '悬浮诱饵鱼',
          '20675': '嗡嗡石蝇',
          '20676': '蓝矶沙蚕',
          '27582': '水果蠕虫',
          '27583': '藻虾',
          '27584': '沙漠蛙',
          '27585': '大理石幼虫',
          '27586': '力山羊肉干',
          '27587': '盗蟹丸',
          '27588': '短嘴诱饵鱼',
          '27589': '虫箱',
          '27590': '乌贼丝',
          '27591': '淡水万能饵',
          '27592': '海水万能饵',
          '28634': '金属亮片',
          '29714': '石沙蚕',
          '29715': '磷虾',
          '29716': '刺螠',
          '29717': '万能拟饵',
          '30136': '天钢之球',
          '30278': '云冠气球虫',
          '30279': '云冠红气球虫',
          '30280': '云冠大蚊',
          '30281': '云冠浮游虫',
          '36588': '黄金鱼子',
          '36589': '医蛭',
          '36590': '天空勺形鱼饵',
          '36591': '蜉蝣',
          '36592': '虾肉丸子',
          '36593': '青花鱼块',
          '36594': '灰蚯蚓',
          '36595': '奇美拉蠕虫',
          '36596': '震撼板钩',
          '36597': '星尘',
          '38808': '卓越丸子'
        },
      },
      'tugs': {
        '4872': 1,
        '4874': 2,
        '4888': 2,
        '4898': 1,
        '4904': 2,
        '4905': 2,
        '4906': 2,
        '4911': 2,
        '4915': 3,
        '4918': 2,
        '4919': 3,
        '4924': 3,
        '4927': 1,
        '4945': 1,
        '4948': 1,
        '4951': 2,
        '4953': 2,
        '4958': 2,
        '4978': 1,
        '4985': 2,
        '4991': 2,
        '4994': 2,
        '4995': 1,
        '4999': 1,
        '5002': 2,
        '5008': 2,
        '5011': 1,
        '5016': 2,
        '5017': 2,
        '5021': 2,
        '5022': 2,
        '5023': 2,
        '5027': 2,
        '5031': 2,
        '5035': 2,
        '5040': 2,
        '5544': 1,
        '7678': 3,
        '7679': 3,
        '7681': 3,
        '7682': 3,
        '7683': 3,
        '7684': 3,
        '7685': 3,
        '7686': 3,
        '7687': 3,
        '7688': 3,
        '7689': 3,
        '7690': 3,
        '7691': 3,
        '7692': 3,
        '7694': 3,
        '7695': 3,
        '7696': 3,
        '7697': 3,
        '7698': 3,
        '7699': 3,
        '7700': 3,
        '7701': 3,
        '7702': 3,
        '7704': 3,
        '7705': 3,
        '7706': 3,
        '7707': 3,
        '7708': 3,
        '7709': 3,
        '7711': 3,
        '7713': 3,
        '7714': 3,
        '7902': 3,
        '7903': 3,
        '7905': 3,
        '7913': 3,
        '7915': 3,
        '7923': 3,
        '7928': 3,
        '7929': 3,
        '7931': 3,
        '7941': 3,
        '7944': 3,
        '7949': 3,
        '7950': 3,
        '7951': 3,
        '8752': 3,
        '8755': 3,
        '8756': 3,
        '8757': 3,
        '8758': 3,
        '8759': 3,
        '8760': 3,
        '8761': 3,
        '8766': 3,
        '8767': 3,
        '8768': 3,
        '8770': 3,
        '8772': 3,
        '8773': 3,
        '8774': 3,
        '8775': 3,
        '8776': 3,
        '10123': 3,
        '12713': 1,
        '12715': 1,
        '12716': 1,
        '12722': 1,
        '12723': 1,
        '12724': 1,
        '12726': 2,
        '12727': 2,
        '12730': 1,
        '12733': 1,
        '12739': 2,
        '12740': 2,
        '12741': 2,
        '12743': 1,
        '12746': 1,
        '12751': 2,
        '12753': 1,
        '12754': 1,
        '12757': 1,
        '12763': 2,
        '12765': 2,
        '12766': 1,
        '12767': 2,
        '12768': 2,
        '12774': 1,
        '12776': 1,
        '12777': 1,
        '12780': 2,
        '12784': 2,
        '12786': 2,
        '12789': 2,
        '12796': 2,
        '12799': 1,
        '12800': 2,
        '12802': 3,
        '12803': 3,
        '12805': 2,
        '12810': 1,
        '12812': 2,
        '12814': 2,
        '12815': 2,
        '12816': 1,
        '12821': 3,
        '12825': 3,
        '12826': 2,
        '12827': 2,
        '12828': 2,
        '12829': 3,
        '12830': 3,
        '12832': 3,
        '12833': 3,
        '12834': 2,
        '12835': 3,
        '12836': 2,
        '12837': 1,
        '13727': 2,
        '13731': 2,
        '13732': 2,
        '14211': 3,
        '14212': 1,
        '14213': 2,
        '14215': 1,
        '14216': 2,
        '14218': 1,
        '14219': 3,
        '14220': 2,
        '15439': 3,
        '15631': 3,
        '15635': 3,
        '15638': 3,
        '16742': 3,
        '16743': 3,
        '16745': 3,
        '16746': 3,
        '16747': 3,
        '16749': 3,
        '16750': 3,
        '16752': 3,
        '16753': 3,
        '16754': 3,
        '17577': 3,
        '17579': 3,
        '17581': 3,
        '17586': 3,
        '17588': 3,
        '17589': 3,
        '17590': 3,
        '17591': 3,
        '17593': 3,
        '20018': 3,
        '20021': 2,
        '20022': 2,
        '20024': 1,
        '20025': 2,
        '20034': 2,
        '20036': 1,
        '20040': 3,
        '20043': 1,
        '20048': 2,
        '20051': 3,
        '20054': 2,
        '20064': 1,
        '20073': 2,
        '20074': 3,
        '20084': 1,
        '20085': 1,
        '20086': 2,
        '20100': 3,
        '20104': 3,
        '20105': 3,
        '20112': 1,
        '20114': 2,
        '20120': 2,
        '20122': 2,
        '20127': 1,
        '20128': 1,
        '20141': 3,
        '20142': 2,
        '20524': 3,
        '20786': 1,
        '20787': 1,
        '20789': 2,
        '21174': 2,
        '21175': 1,
        '21176': 3,
        '21177': 2,
        '21178': 1,
        '22389': 3,
        '22390': 1,
        '22391': 2,
        '22392': 3,
        '22393': 3,
        '22394': 3,
        '22395': 1,
        '22396': 1,
        '22397': 2,
        '22398': 2,
        '23055': 2,
        '23056': 1,
        '23058': 3,
        '23062': 3,
        '23068': 3,
        '24203': 1,
        '24204': 1,
        '24207': 3,
        '24208': 3,
        '24213': 3,
        '24214': 3,
        '24216': 3,
        '24885': 3,
        '24886': 3,
        '24887': 3,
        '24892': 3,
        '24893': 3,
        '24990': 3,
        '24991': 3,
        '24992': 3,
        '26746': 1,
        '26747': 1,
        '26748': 1,
        '27412': 1,
        '27413': 1,
        '27414': 1,
        '27415': 1,
        '27418': 1,
        '27420': 1,
        '27421': 1,
        '27422': 1,
        '27424': 2,
        '27425': 1,
        '27426': 1,
        '27427': 1,
        '27428': 1,
        '27429': 1,
        '27430': 1,
        '27431': 2,
        '27432': 1,
        '27433': 1,
        '27434': 1,
        '27435': 1,
        '27436': 2,
        '27437': 3,
        '27438': 1,
        '27439': 1,
        '27441': 2,
        '27442': 1,
        '27443': 1,
        '27444': 1,
        '27445': 1,
        '27447': 2,
        '27450': 1,
        '27451': 1,
        '27452': 1,
        '27453': 2,
        '27455': 1,
        '27456': 3,
        '27457': 1,
        '27458': 1,
        '27459': 1,
        '27460': 2,
        '27461': 1,
        '27462': 1,
        '27464': 3,
        '27467': 3,
        '27468': 1,
        '27469': 1,
        '27470': 1,
        '27471': 1,
        '27472': 1,
        '27473': 1,
        '27474': 1,
        '27475': 1,
        '27476': 1,
        '27477': 1,
        '27478': 1,
        '27479': 1,
        '27480': 1,
        '27481': 1,
        '27482': 1,
        '27483': 1,
        '27484': 1,
        '27485': 2,
        '27486': 1,
        '27487': 2,
        '27490': 1,
        '27491': 2,
        '27492': 2,
        '27493': 1,
        '27494': 1,
        '27496': 1,
        '27497': 2,
        '27498': 1,
        '27499': 2,
        '27500': 2,
        '27501': 1,
        '27504': 1,
        '27505': 1,
        '27506': 1,
        '27507': 1,
        '27508': 3,
        '27509': 2,
        '27510': 1,
        '27511': 1,
        '27512': 1,
        '27513': 1,
        '27514': 1,
        '27515': 2,
        '28065': 3,
        '28066': 3,
        '28068': 3,
        '28072': 3,
        '28191': 1,
        '28719': 1,
        '28927': 3,
        '28928': 3,
        '28929': 3,
        '30434': 3,
        '30435': 3,
        '30436': 3,
        '30439': 3,
        '30487': 1,
        '30593': 1,
        '32049': 3,
        '32051': 3,
        '32052': 3,
        '32053': 3,
        '33239': 3,
        '33240': 3,
        '33241': 3,
        '33242': 3,
        '33244': 3,
        '33316': 3,
        '33317': 3,
        '33318': 3,
        '33319': 3,
        '33322': 3,
        '33323': 3,
        '33324': 3,
        '33325': 3,
        '35604': 1,
        '35605': 2,
        '35607': 2,
        '36385': 1,
        '36386': 1,
        '36387': 1,
        '36388': 2,
        '36389': 2,
        '36390': 1,
        '36392': 2,
        '36393': 2,
        '36394': 2,
        '36395': 1,
        '36396': 1,
        '36397': 1,
        '36398': 2,
        '36399': 1,
        '36400': 2,
        '36402': 2,
        '36403': 1,
        '36404': 2,
        '36405': 2,
        '36407': 2,
        '36408': 2,
        '36409': 1,
        '36410': 1,
        '36411': 2,
        '36412': 2,
        '36415': 2,
        '36417': 2,
        '36418': 2,
        '36419': 2,
        '36422': 2,
        '36423': 2,
        '36425': 2,
        '36426': 2,
        '36430': 2,
        '36432': 2,
        '36434': 2,
        '36435': 2,
        '36436': 1,
        '36438': 2,
        '36439': 2,
        '36440': 2,
        '36441': 2,
        '36442': 2,
        '36443': 2,
        '36444': 1,
        '36446': 2,
        '36447': 1,
        '36448': 2,
        '36450': 1,
        '36451': 1,
        '36453': 2,
        '36454': 3,
        '36457': 1,
        '36458': 2,
        '36459': 2,
        '36460': 1,
        '36461': 2,
        '36462': 2,
        '36463': 1,
        '36465': 1,
        '36466': 1,
        '36467': 2,
        '36468': 2,
        '36470': 1,
        '36471': 2,
        '36472': 3,
        '36473': 2,
        '36475': 2,
        '36476': 1,
        '36477': 2,
        '36478': 1,
        '36479': 2,
        '36480': 2,
        '36481': 1,
        '36484': 1,
        '36485': 2,
        '36487': 1,
        '36488': 2,
        '36489': 2,
        '36491': 2,
        '36492': 1,
        '36494': 2,
        '36495': 1,
        '36496': 2,
        '36497': 2,
        '36499': 2,
        '36501': 1,
        '36502': 2,
        '36503': 1,
        '36505': 2,
        '36506': 1,
        '36508': 2,
        '36509': 1,
        '36511': 2,
        '36512': 2,
        '36513': 2,
        '36514': 1,
        '36515': 2,
        '36516': 2,
        '36517': 2,
        '36518': 2,
        '36520': 2,
        '36521': 3,
        '36679': 3,
        '36680': 3,
        '36681': 3,
        '36682': 3,
        '36683': 3,
        '36684': 3,
        '36685': 3,
        '37845': 3,
        '37846': 3,
        '37847': 3,
        '37848': 3,
        '37849': 3,
        '37850': 3,
        '37851': 3,
        '37853': 3,
        '38830': 3,
        '38831': 3,
        '38832': 3,
        '38833': 3,
        '38834': 3,
        '38835': 3,
        '38836': 3,
        '38935': 1,
        '39240': 1,
        '39879': 3,
        '39880': 3,
        '39881': 3,
        '39882': 3,
        '39883': 3,
        '41405': 3,
        '41419': 2
      }
    };
    /* harmony default export */
    const static_data = (data);

    const fishStore = 'tempFishStore';
    const placesStore = 'tempPlacesStore';
    const tackleStore = 'tempTackleStore';
    const placeFishStore = 'tempPlaceFishStore';

    // 添加一个临时数据库, static_Data 中无法获取到对应的渔场, 鱼, 或者鱼饵的数据时，将相关的数据添加到临时数据库中
    // 临时数据库使用 LocalStorage 进行储存，我也不知道什么时候回存满 via:cirnotsuki
    const temp_data = {
      findKey(obj, val) {
        // This is a little inefficient to lowercase everything here.
        // However, we want the real capitalization to use for UI so can't
        // lowercase it in the data unless we made another copy.
        const lcVal = val.toLowerCase();
        return Object.keys(obj).find(key => {
          if (Array.isArray(obj[key])) return obj[key].some(subVal => subVal.toLowerCase() === lcVal);
          return obj[key].toLowerCase() === lcVal;
        });
      },

      getStore(storeName) {
        const str = window.localStorage.getItem(storeName) || {};
        try {
          const store = JSON.parse(str);
          if (typeof store === 'object') {
            return store;
          } else {
            return {};
          }
        } catch (error) {
          return {};
        }
      },

      setStore(storeName, id, name) {
        const store = temp_data.getStore(storeName);
        if (temp_data.findKey(store, id)) return;
        store[id] = name;
        window.localStorage.setItem(storeName, JSON.stringify(store));
      },

      get fish() {
        return temp_data.getStore(fishStore)
      },
      set fish(args) {
        temp_data.setStore(fishStore, ...args)
      },
      get places() {
        return temp_data.getStore(placesStore)
      },
      set places(args) {
        temp_data.setStore(placesStore, ...args)
      },
      get tackle() {
        return temp_data.getStore(tackleStore)
      },
      set tackle(args) {
        temp_data.setStore(tackleStore, ...args)
      },

      getPlacefish(id) {
        const store = temp_data.getStore(placeFishStore);
        return store[id] || [];
      },

      updatePlacefish(fish) {
        const store = temp_data.getStore(placeFishStore);
        const fishList = temp_data.getPlacefish(fish.place).map(v => +v).filter(v => !Number.isNaN(v));
        const fishID = +fish.fish;
        
        for (const id of fishList) {
          if (id === fishID) return;
        }

        fishList.push(fishID);

        store[fish.place] = fishList;
        window.localStorage.setItem(placeFishStore, JSON.stringify(store));
      }
    }
    // CONCATENATED MODULE: ./ui/fisher/seabase.js

    class SeaBase {
      constructor(options) {
        this._dbName = 'seabase';
        this._dbVersion = 1;
        this._storeName = 'catches';
        this.db = null;
        this.options = options;
        this.parserLang = this.options.ParserLanguage;
      }
      findKey(obj, val) {
        // This is a little inefficient to lowercase everything here.
        // However, we want the real capitalization to use for UI so can't
        // lowercase it in the data unless we made another copy.
        const lcVal = val.toLowerCase();
        return Object.keys(obj).find(key => {
          if (Array.isArray(obj[key])) return obj[key].some(subVal => subVal.toLowerCase() === lcVal);
          return obj[key].toLowerCase() === lcVal;
        });
      }
      firstIfArray(obj) {
        if (Array.isArray(obj)) return obj[0];
        return obj;
      }
      getConnection() {
        return new Promise((resolve, reject) => {
          const req = window.indexedDB.open(this._dbName, this._dbVersion);
          req.onsuccess = event => {
            resolve(req.result);
          };
          req.onerror = event => {
            reject(req.error);
          };
          req.onupgradeneeded = event => {
            const db = event.target.result;
            const tx = event.target.transaction;
            let objectStore;
            if (!db.objectStoreNames.contains(this._storeName)) objectStore = db.createObjectStore(this._storeName, {
              autoIncrement: true
            }); else objectStore = tx.objectStore(this._storeName);
            if (!objectStore.indexNames.contains('fish')) objectStore.createIndex('fish', 'fish', {
              unique: false
            });
            if (!objectStore.indexNames.contains('fishbaitchum')) objectStore.createIndex('fishbaitchum', ['fish', 'bait', 'chum'], {
              unique: false
            });
            tx.oncomplete = event => {
              resolve(db);
            };
          };
        });
      }
      getTransaction(db, mode) {
        return db.transaction(this._storeName, mode);
      }
      getIQRThresholds(times) {
        // first, calculate IQR to get a threshold for outliers
        let q1;
        let q3;
        times.sort((a, b) => {
          return a - b;
        });

        // if there's less than 5 items, just assume it's legit
        if (times.length < 5) {
          return {
            low: times[0],
            high: times[times.length - 1]
          };
        }

        // find q2 (median)
        // we only need the index for the median
        const q2Index = Math.floor(times.length / 2);

        // find q1 (median of first half)
        const q1Index = Math.floor(q2Index / 2);
        if (q2Index % 2 || q2Index === 0) q1 = times[q1Index]; else q1 = (times[q1Index] + times[q1Index - 1]) / 2;

        // find q2 (median of second half)
        const q3Index = q1Index + q2Index;
        if (q3Index % 2 || q2Index === 0) q3 = times[q3Index]; else q3 = (times[q3Index] + times[q3Index - 1]) / 2;
        const iqr = q3 - q1;

        // use these to calculate thresholds for outliers
        return {
          low: q1 - iqr * 1.5,
          high: q3 + iqr * 1.5
        };
      }
      normalizeHooks(times) {
        const thresholds = this.getIQRThresholds(times);
        let min;
        let max;
        let i;

        // Iterate forward until a suitable minimum
        for (i = 0; i < times.length; i++) {
          if (times[i] >= thresholds.low) {
            min = times[i];
            break;
          }
        }

        // Iterate backward until a suitable maximum
        for (i = times.length - 1; i >= 0; i--) {
          if (times[i] <= thresholds.high) {
            max = times[i];
            break;
          }
        }
        return {
          min: min,
          max: max
        };
      }
      addCatch(data) {
        // Add a catch to the database
        let commit = true;

        // Make sure we have complete data before recording
        const keys = ['fish', 'bait', 'place', 'castTimestamp', 'hookTime', 'reelTime', 'chum', 'snagging'];
        for (const index in keys) {
          if (!Object.prototype.hasOwnProperty.call(data, keys[index]) || data[keys[index]] === null) {
            commit = false;
            console.log(`${keys[index]}missing in catch`);
          }
        }
        if (!commit) return false;
        this.getConnection().then(db => {
          const tx = db.transaction(this._storeName, 'readwrite');
          const store = tx.objectStore(this._storeName);
          store.add(data);
        });
      }
      getInfo(lookup, value) {
        // Note: the name entry may be a single string, or it may
        // be an array with multiple values in it.  The first name
        // in the array is the canonical value and should always be
        // returned, even if looking up by another name in its list.
        // This lets getPlace("german grammar used only when casting")
        // return the correct place name to display in the ui.
        let info = {
          id: '',
          name: '',
        };

        const LoadInfo = (sourceData) => {
          // Value can be one of three things
          if (typeof value === 'object' && value !== null) {
            // 1. Object with id and/or name
            // If we have one and not the other, fill in the other
            if (value.id && !value.name) {
              info = {
                id: value.id,
                name: this.firstIfArray(sourceData[value.id])
              };
            } else if (!value.id && value.name) {
              // Return the first / primary name regardless of what is passed in
              // when doing a reverse lookup by name.
              const key = this.findKey(sourceData, value.name);
              info = {
                id: key,
                name: this.firstIfArray(sourceData[key])
              };
            } else {
              info = value;
            }
          } else if (isNaN(value)) {
            // 2. String with the name
            // See note above about reverse lookups.
            const key = this.findKey(sourceData, value);
            info = {
              id: key,
              name: this.firstIfArray(sourceData[key])
            };
          } else {
            // 3. Number with the ID
            info = {
              id: value,
              name: this.firstIfArray(sourceData[value])
            };
          }
        }

        LoadInfo(static_data[lookup][this.parserLang]);

        if (!info.id || !info.name) {
          // 创建临时的对象仓库用于获取
          if (typeof value === 'string' && isNaN(value)) {

            const key = this.findKey(temp_data[lookup], value);

            if (!key) {
              let newKey = `${+new Date()}`.slice(-8);

              if(newKey[0] === '0') {
                const prefix = Math.floor(Math.random() * 9) + 1
                newKey = prefix + newKey.slice(-7);
              }

              temp_data[lookup] = [newKey, value];

            }
          }

          LoadInfo(temp_data[lookup]);
        }

        return info;
      }
      getFish(fish) {
        const result = this.getInfo('fish', fish);
        if (!result.id || !result.name) console.log(`failed to look up fish: ${fish}`);
        return result;
      }
      getBait(bait) {
        const result = this.getInfo('tackle', bait);
        if (!result.id || !result.name) console.log(`failed to look up bait: ${bait}`);
        return result;
      }
      getPlace(place) {
        const result = this.getInfo('places', place);
        if (!result.id || !result.name) console.log(`failed to look up place: ${place}`);
        return result;
      }

      // 获取该渔场会出现的鱼的列表 via:cirnotsuki
      getFishList(id) {
        if (static_data.placefish[id]) {
          return static_data.placefish[id];
        }
        return temp_data.getPlacefish(id);
      }
      getFishForPlace(place) {
        // Get place object
        const placeObject = this.getPlace(place);

        // Get fish IDs for place ID
        const fishList = this.getFishList(placeObject.id);

        // Get fish names for IDs
        const placeFish = [];
        for (const fishID in fishList) {
          placeFish.push(this.getFish(fishList[fishID]));
        }
        return placeFish;
      }
      queryHookTimes(index, fish, bait, chum) {
        const times = [];
        return new Promise((resolve, reject) => {
          index.openCursor(IDBKeyRange.only([fish.id.toString(), bait.id, chum ? 1 : 0])).onsuccess = event => {
            const cursor = event.target.result;
            if (cursor) {
              times.push(cursor.value.hookTime);
              if (times.length < this.options.IQRHookQuantity) cursor.continue(); else resolve(times);
            } else {
              resolve(times);
            }
          };
        });
      }
      getHookTimes(fish, bait, chum) {
        if (!fish || !bait) {
          return new Promise((resolve, reject) => {
            resolve();
          });
        }
        return new Promise((resolve, reject) => {
          this.getConnection().then(db => {
            const tx = db.transaction(this._storeName, 'readwrite');
            const store = tx.objectStore(this._storeName);
            const index = store.index('fishbaitchum');
            this.queryHookTimes(index, fish, bait, chum).then(times => {
              if (!times.length) resolve({
                min: undefined,
                max: undefined
              });
              resolve(this.normalizeHooks(times));
            });
          });
        });
      }
      queryTug(index, fish) {
        const reelTimes = [];
        return new Promise((resolve, reject) => {
          index.openCursor(IDBKeyRange.only(fish.id.toString())).onsuccess = event => {
            const cursor = event.target.result;
            if (cursor) {
              reelTimes.push(cursor.value.reelTime);
              if (reelTimes.length < this.options.IQRTugQuantity) cursor.continue(); else resolve(reelTimes);
            } else {
              resolve(reelTimes);
            }
          };
        });
      }
      getTug(fish) {
        return new Promise((resolve, reject) => {
          this.getConnection().then(db => {
            const tx = db.transaction(this._storeName, 'readwrite');
            const store = tx.objectStore(this._storeName);
            const index = store.index('fish');
            const tug = static_data.tugs[fish.id];
            if (tug) {
              resolve(tug);
            } else {
              this.queryTug(index, fish).then(reelTimes => {
                if (!reelTimes.length) resolve(0);
                const thresholds = this.getIQRThresholds(reelTimes);
                let sum = 0;
                let validValues = 0;
                reelTimes.forEach(time => {
                  if (time >= thresholds.low && time <= thresholds.high) {
                    sum += time;
                    validValues++;
                  }
                });
                const average = sum / validValues;
                let tug;

                // Small: <8000
                // Medium: >8000, <10700
                // Large: >10700
                // 1 small, 2 medium, 3 large
                if (average < 8000) tug = 1; else if (average > 10700) tug = 3; else tug = 2;
                resolve(tug);
              });
            }
          });
        });
      }
    }
    ;// CONCATENATED MODULE: ./ui/fisher/fisher.js

    const defaultOptions = {
      IQRHookQuantity: 100,
      IQRTugQuantity: 10,
      Colors: {
        'unknown': 'rgba(0, 0, 0, 0.5)',
        'light': 'rgba(99, 212, 152, 0.5)',
        'medium': 'rgba(245, 241, 32, 0.5)',
        'heavy': 'rgba(250, 15, 19, 0.5)'
      }
    };
    class Fisher {
      constructor(options, element) {
        this.options = options;
        this.element = element;
        this.name = undefined;
        this.zone = null;
        this.job = null;
        this.baseBait = {
          id: null,
          name: null
        };
        this.moochBait = {
          id: null,
          name: null
        };
        this.lastCatch = {
          id: null,
          name: null
        };
        this.place = {
          id: null,
          name: null
        };
        this.fishing = false;
        this.mooching = false;
        this.snagging = false;
        this.chum = false;
        this.chumOnCatch = false;
        this.placeFish = null;
        this.hookTimes = null;
        this.tugTypes = null;
        this.castStart = null;
        this.castEnd = null;
        this.castGet = null;
        this.updateNameRegexes();
        this.regex = {
          // Localized strings from: https://xivapi.com/LogMessage?pretty=1&columns=ID,Text_de,Text_en,Text_fr,Text_ja&ids=1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1127,1129,3511,3512,3515,3516,3525
          // 1110: cast
          // 1111: quit (stop)
          // 1112: quit (death)
          // 1113: quit (combat)
          // 1115: discovered (area)
          // 1116: bite
          // 1117: nocatch (lose bait)
          // 1118: nocatch (lose lure)
          // 1119: nocatch (gets away)
          // 1120: nocatch (break)
          // 1121: mooch
          // 1127: nocatch (wrong bait)
          // 1128: nocatch (early hook)
          // 3511: nocatch (moving)
          // 3512: catch
          // 3515: nocatch (lose lure)
          // 3516: nocatch (anti-bot)
          // 3525: nocatch (inventory full)

          cn: {
            undiscovered: /未知钓场/,
            cast: netregexes/* default.gameLog */.ZP.gameLog({
              code: '08c3',
              line: '(?:[\\w\\s-\'\u4e00-\u9fa5·]+)在(?<place>.+)甩出了鱼线开始钓鱼。.*?'
            }),
            bite: netregexes/* default.gameLog */.ZP.gameLog({
              code: '08c3',
              line: '有鱼上钩了！.*?'
            }),
            catch: netregexes/* default.gameLog */.ZP.gameLog({
              code: '0843',
              line: '(?:[\\w\\s-\'\u4e00-\u9fa5·]+)?成功钓上了.*?(?<fish>[\\d\\-\u3000-\u30ff\u3400-\u4dbf\u4e00-\u9faf·？]+\\d*).*（\\d+\\.\\d星寸）。.*?'
            }),
            nocatch: netregexes/* default.gameLog */.ZP.gameLog({
              code: '08c3',
              line: '(?:[\\w\\s-\'\u4e00-\u9fa5·]+)?(?:不经意间鱼饵被吃掉了……|不经意间丢掉了.+……|不经意间.+不见了……|不经意间鱼饵被吃掉了……|上钩的鱼逃走了……|鱼线断了！|没有钓到任何东西……\n\n现在使用的鱼饵可能不太适合这片钓场。|没有钓到任何东西……|.+收竿停止了钓鱼。|鱼带着.+逃走了……|这里的鱼现在警惕性很高，看来还是换个地点比较好。|无法持有更多的.+，(?:[\\w\\s-\'\u4e00-\u9fa5·]+)?将刚钓上的东西放生了。).*?'
            }),
            mooch: netregexes/* default.gameLog */.ZP.gameLog({
              code: '08c3',
              line: '(?:[\\w\\s-\'\u4e00-\u9fa5·]+)开始利用上钩的.*?([\\d\\-\u3000-\u30ff\u3400-\u4dbf\u4e00-\u9faf·？]+\\d*).*尝试以小钓大。.*?'
            }),
            quit: netregexes/* default.gameLog */.ZP.gameLog({
              code: '08c3',
              line: '(?:[\\w\\s-\'\u4e00-\u9fa5·]+)?(?:收回了鱼线。|陷入了战斗不能状态，钓鱼中断。|收回了鱼线。|受到了敌人的攻击，钓鱼中断。).*?'
            }),
            discovered: netregexes/* default.gameLog */.ZP.gameLog({
              code: '08c3',
              line: '将新钓场“(?<place>.+)”记录到了钓鱼笔记中！.*?'
            })
          },
        };
        this.ui = new FisherUI(this.options, element);
        this.seaBase = new SeaBase(this.options);
      }
      getActiveBait() {
        if (this.mooching) return this.moochBait;
        return this.baseBait;
      }
      updateFishData() {
        // We can only know data for both of these
        if (!this.place || !this.getActiveBait()) {
          return new Promise((resolve, reject) => {
            resolve();
          });
        }
        const _this = this;
        this.hookTimes = {};
        this.tugTypes = {};

        // Get the list of fish available at this particular place
        this.placeFish = this.seaBase.getFishForPlace(this.place);

        if (this.placeFish.length === 0) {
          return new Promise((resolve, reject) => {
            resolve();
          });
        }

        // We should update twice for each fish, one for hook times and one for tugs
        let queue = this.placeFish.length * 2;


        return new Promise((resolve, reject) => {
          for (const index in _this.placeFish) {
            const fish = _this.placeFish[index];

            // Get the hook min and max times for the fish/bait/chum combo
            _this.seaBase.getHookTimes(fish, _this.getActiveBait(), _this.chum).then(hookTimes => {
              _this.hookTimes[fish.name] = hookTimes;
              queue -= 1;
              if (!queue) {
                _this.ui.redrawFish(_this.hookTimes, _this.tugTypes);
                resolve();
              }
            });

            // Get the tug type for the fish
            _this.seaBase.getTug(fish).then(tug => {
              _this.tugTypes[fish.name] = tug;
              queue -= 1;
              if (!queue) {
                _this.ui.redrawFish(_this.hookTimes, _this.tugTypes);
                resolve();
              }
            });
          }
        });
      }
      handleBait(bait) {
        let name = '';
        // Mooching: bait is the last fish
        if (this.mooching) {
          this.moochBait = bait;
          name = bait.name;
        } else {
          this.baseBait = this.seaBase.getBait(bait);
          name = this.baseBait.name;
        }
        this.ui.setBait(name);
      }
      handleCast(place) {
        this.element.style.opacity = 1;
        this.castStart = new Date();
        this.castEnd = null;
        this.castGet = null;
        this.fishing = true;

        // undiscovered fishing hole
        if (this.regex[this.options.ParserLanguage]['undiscovered'].test(place)) {
          // store this for now
          // if we catch anything we'll pull the data then
          // "data on 'x' is added to your fishing log" is printed before the catch
          this.place = place;
          this.ui.setPlace(this.place);
          // clear previous fish data (if any)
          this.ui.redrawFish({}, {});
          this.ui.startFishing();
          return;
        }
        // Set place (set this every cast because it can change during ocean fishing)
        this.place = this.seaBase.getPlace(place);

        // This lookup could fail and, for German,
        // this.place.name may differ from place
        // due to differing cast vs location names.
        if (this.place.id) this.ui.setPlace(this.place.name);
        const _this = this;
        this.updateFishData().then(() => {
          _this.ui.startFishing();
        });
      }
      handleBite() {
        this.castEnd = new Date();
        this.ui.stopFishing();
      }
      handleCatch(fish) {
        this.castGet = new Date();
        this.lastCatch = this.seaBase.getFish(fish);
        this.fishing = false;

        if (this.place) {
          // 更新钓鱼点会出现的鱼 via:cirnotsuki
          const data = {
            'fish': this.lastCatch.id,
            'bait': this.getActiveBait().id,
            'place': this.place.id,
            'castTimestamp': +this.castStart,
            'hookTime': this.castEnd - this.castStart,
            'reelTime': this.castGet - this.castEnd,
            'chum': this.chumOnCatch ? 1 : 0,
            'snagging': this.snagging
          }

          temp_data.updatePlacefish(data);
          this.seaBase.addCatch(data);
        }

        this.chumOnCatch = false;
        if (this.mooching) {
          this.handleBait(this.baseBait);
          this.mooching = false;
        }
      }
      handleNoCatch() {
        this.fishing = false;
        this.castStart = null;
        this.castEnd = null;
        this.castGet = null;
        this.lastCatch = null;
        if (this.mooching) {
          this.handleBait(this.baseBait);
          this.mooching = false;
        }
        this.ui.stopFishing();
      }
      handleMooch() {
        this.mooching = true;
        this.handleBait(this.lastCatch);
        this.handleCast(this.place);
      }
      handleSnagGain() {
        this.snagging = true;
      }
      handleSnagFade() {
        this.snagging = false;
      }
      handleChumGain() {
        this.chum = true;
        this.updateFishData();
      }
      handleChumFade() {
        // Chum fades just before the catch appears
        this.chumOnCatch = true;
        this.chum = false;
      }
      handleQuit() {
        this.lastCatch = null;
        this.place = null;
        this.ui.setPlace(null);
        this.element.style.opacity = 0;
      }
      handleDiscover(place) {
        this.place = this.seaBase.getPlace(place);
        // This lookup could fail and, for German,
        // this.place.name may differ from place
        // due to differing cast vs location names.
        if (this.place.id) this.ui.setPlace(this.place.name);
        this.updateFishData();
      }
      parseLine(e) {
        const log = e.rawLine;
        const type = e.line[0];
        if (type === netlog_defs/* default.GainsEffect.type */.Z.GainsEffect.type) {
          if (this.gainEffectRegex.chum?.test(log)) this.handleChumGain(); else if (this.gainEffectRegex.snag?.test(log)) this.handleSnagGain();
        } else if (type === netlog_defs/* default.LosesEffect.type */.Z.LosesEffect.type) {
          if (this.loseEffectRegex.chum?.test(log)) this.handleChumFade(); else if (this.loseEffectRegex.snag?.test(log)) this.handleSnagFade();
        }
        if (type !== netlog_defs/* default.GameLog.type */.Z.GameLog.type) return;
        for (const type in this.regex[this.options.ParserLanguage]) {
          const result = this.regex[this.options.ParserLanguage][type].exec(log);

          if (result) {
            switch (type) {
              // case 'bait': this.handleBait(result[1]); break;
              case 'cast':
                this.handleCast(result.groups?.place);
                break;
              case 'bite':
                this.handleBite();
                break;
              case 'catch':
                this.handleCatch(result.groups?.fish);
                break;
              case 'nocatch':
                this.handleNoCatch();
                break;
              case 'mooch':
                this.handleMooch();
                break;
              case 'quit':
                this.handleQuit();
                break;
              case 'discovered':
                this.handleDiscover(result.groups?.place);
                break;
            }
          }
        }
      }
      updateNameRegexes() {
        if (!this.name) {
          this.gainEffectRegex = {
            chum: undefined,
            snag: undefined
          };
          this.loseEffectRegex = {
            chum: undefined,
            snag: undefined
          };
          return;
        }
        this.gainEffectRegex = {
          chum: netregexes/* default.gainsEffect */.ZP.gainsEffect({
            effectId: '2FB',
            target: this.name,
            capture: false
          }),
          snag: netregexes/* default.gainsEffect */.ZP.gainsEffect({
            effectId: '2F9',
            target: this.name,
            capture: false
          })
        };
        this.loseEffectRegex = {
          chum: netregexes/* default.losesEffect */.ZP.losesEffect({
            effectId: '2FB',
            target: this.name,
            capture: false
          }),
          snag: netregexes/* default.losesEffect */.ZP.losesEffect({
            effectId: '2F9',
            target: this.name,
            capture: false
          })
        };
      }
      OnNetLog(e) {
        if (this.job === 'FSH') this.parseLine(e);
      }
      OnChangeZone(e) {
        this.zone = e.zoneName;
        this.place = null;
        this.ui.setPlace(null);
      }
      OnPlayerChange(e) {
        if (this.name !== e.detail.name) {
          this.name = e.detail.name;
          this.updateNameRegexes();
        }
        this.job = e.detail.job;
        if (this.job === 'FSH') {
          this.element.style.display = 'block';
          if (!this.fishing) this.handleBait(e.detail.bait);
        } else {
          this.element.style.display = 'none';
        }
      }
    }
    user_config/* default.getUserConfigLocation */.Z.getUserConfigLocation('fisher', defaultOptions, () => {
      const options = {
        ...defaultOptions
      };
      const fisher = new Fisher(options, document.getElementById('fisher'));

      (0, overlay_plugin_api/* addOverlayListener */.PS)('LogLine', e => {
        fisher.OnNetLog(e);
      });
      (0, overlay_plugin_api/* addOverlayListener */.PS)('ChangeZone', e => {
        fisher.OnChangeZone(e);
      });
      (0, overlay_plugin_api/* addOverlayListener */.PS)('onPlayerChangedEvent', e => {
        fisher.OnPlayerChange(e);
      });
    });
  })();

  /******/
})();